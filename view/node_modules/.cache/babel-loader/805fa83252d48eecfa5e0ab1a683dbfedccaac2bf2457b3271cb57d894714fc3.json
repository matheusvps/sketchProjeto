{"ast":null,"code":"import Vue from 'vue';\nimport QIcon from '../icon/QIcon.js';\nimport CheckboxMixin from '../../mixins/checkbox.js';\nexport default Vue.extend({\n  name: 'QToggle',\n  mixins: [CheckboxMixin],\n  props: {\n    icon: String,\n    checkedIcon: String,\n    uncheckedIcon: String,\n    indeterminateIcon: String,\n    iconColor: String\n  },\n  computed: {\n    computedIcon: function computedIcon() {\n      return (this.isTrue === true ? this.checkedIcon : this.isIndeterminate === true ? this.indeterminateIcon : this.uncheckedIcon) || this.icon;\n    },\n    computedIconColor: function computedIconColor() {\n      if (this.isTrue === true) {\n        return this.iconColor;\n      }\n    }\n  },\n  methods: {\n    __getInner: function __getInner(h) {\n      return [h('div', {\n        staticClass: 'q-toggle__track'\n      }), h('div', {\n        staticClass: 'q-toggle__thumb absolute flex flex-center no-wrap'\n      }, this.computedIcon !== void 0 ? [h(QIcon, {\n        props: {\n          name: this.computedIcon,\n          color: this.computedIconColor\n        }\n      })] : void 0)];\n    }\n  },\n  created: function created() {\n    this.type = 'toggle';\n  }\n});","map":{"version":3,"names":["Vue","QIcon","CheckboxMixin","extend","name","mixins","props","icon","String","checkedIcon","uncheckedIcon","indeterminateIcon","iconColor","computed","computedIcon","isTrue","isIndeterminate","computedIconColor","methods","__getInner","h","staticClass","color","created","type"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/components/toggle/QToggle.js"],"sourcesContent":["import Vue from 'vue'\n\nimport QIcon from '../icon/QIcon.js'\nimport CheckboxMixin from '../../mixins/checkbox.js'\n\nexport default Vue.extend({\n  name: 'QToggle',\n\n  mixins: [ CheckboxMixin ],\n\n  props: {\n    icon: String,\n    checkedIcon: String,\n    uncheckedIcon: String,\n    indeterminateIcon: String,\n\n    iconColor: String\n  },\n\n  computed: {\n    computedIcon () {\n      return (\n        this.isTrue === true\n          ? this.checkedIcon\n          : (this.isIndeterminate === true ? this.indeterminateIcon : this.uncheckedIcon)\n      ) || this.icon\n    },\n\n    computedIconColor () {\n      if (this.isTrue === true) {\n        return this.iconColor\n      }\n    }\n  },\n\n  methods: {\n    __getInner (h) {\n      return [\n        h('div', { staticClass: 'q-toggle__track' }),\n\n        h('div', {\n          staticClass: 'q-toggle__thumb absolute flex flex-center no-wrap'\n        }, this.computedIcon !== void 0\n          ? [\n            h(QIcon, {\n              props: {\n                name: this.computedIcon,\n                color: this.computedIconColor\n              }\n            })\n          ]\n          : void 0\n        )\n      ]\n    }\n  },\n\n  created () {\n    this.type = 'toggle'\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AAErB,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,aAAa,MAAM,0BAA0B;AAEpD,eAAeF,GAAG,CAACG,MAAM,CAAC;EACxBC,IAAI,EAAE,SAAS;EAEfC,MAAM,EAAE,CAAEH,aAAa,CAAE;EAEzBI,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,WAAW,EAAED,MAAM;IACnBE,aAAa,EAAEF,MAAM;IACrBG,iBAAiB,EAAEH,MAAM;IAEzBI,SAAS,EAAEJ;EACb,CAAC;EAEDK,QAAQ,EAAE;IACRC,YAAY,WAAAA,aAAA,EAAI;MACd,OAAO,CACL,IAAI,CAACC,MAAM,KAAK,IAAI,GAChB,IAAI,CAACN,WAAW,GACf,IAAI,CAACO,eAAe,KAAK,IAAI,GAAG,IAAI,CAACL,iBAAiB,GAAG,IAAI,CAACD,aAAc,KAC9E,IAAI,CAACH,IAAI;IAChB,CAAC;IAEDU,iBAAiB,WAAAA,kBAAA,EAAI;MACnB,IAAI,IAAI,CAACF,MAAM,KAAK,IAAI,EAAE;QACxB,OAAO,IAAI,CAACH,SAAS;MACvB;IACF;EACF,CAAC;EAEDM,OAAO,EAAE;IACPC,UAAU,WAAAA,WAAEC,CAAC,EAAE;MACb,OAAO,CACLA,CAAC,CAAC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAkB,CAAC,CAAC,EAE5CD,CAAC,CAAC,KAAK,EAAE;QACPC,WAAW,EAAE;MACf,CAAC,EAAE,IAAI,CAACP,YAAY,KAAK,KAAK,CAAC,GAC3B,CACAM,CAAC,CAACnB,KAAK,EAAE;QACPK,KAAK,EAAE;UACLF,IAAI,EAAE,IAAI,CAACU,YAAY;UACvBQ,KAAK,EAAE,IAAI,CAACL;QACd;MACF,CAAC,CAAC,CACH,GACC,KAAK,CAAC,CACT,CACF;IACH;EACF,CAAC;EAEDM,OAAO,WAAAA,QAAA,EAAI;IACT,IAAI,CAACC,IAAI,GAAG,QAAQ;EACtB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}