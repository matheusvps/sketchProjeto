{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport { getRatio, getModel, SliderMixin, keyCodes } from '../slider/slider-utils.js';\nimport { stopAndPrevent } from '../../utils/event.js';\nimport { between } from '../../utils/format.js';\nvar dragType = {\n  MIN: 0,\n  RANGE: 1,\n  MAX: 2\n};\nexport default Vue.extend({\n  name: 'QRange',\n  mixins: [SliderMixin],\n  props: {\n    value: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          min: null,\n          max: null\n        };\n      },\n      validator: function validator(val) {\n        return 'min' in val && 'max' in val;\n      }\n    },\n    name: String,\n    dragRange: Boolean,\n    dragOnlyRange: Boolean,\n    leftLabelColor: String,\n    leftLabelTextColor: String,\n    rightLabelColor: String,\n    rightLabelTextColor: String,\n    leftLabelValue: [String, Number],\n    rightLabelValue: [String, Number]\n  },\n  data: function data() {\n    return {\n      model: {\n        min: this.value.min === null ? this.min : this.value.min,\n        max: this.value.max === null ? this.max : this.value.max\n      },\n      curMinRatio: 0,\n      curMaxRatio: 0\n    };\n  },\n  watch: {\n    'value.min': function valueMin(val) {\n      this.model.min = val === null ? this.min : val;\n    },\n    'value.max': function valueMax(val) {\n      this.model.max = val === null ? this.max : val;\n    },\n    min: function min(value) {\n      if (this.model.min < value) {\n        this.model.min = value;\n      }\n      if (this.model.max < value) {\n        this.model.max = value;\n      }\n    },\n    max: function max(value) {\n      if (this.model.min > value) {\n        this.model.min = value;\n      }\n      if (this.model.max > value) {\n        this.model.max = value;\n      }\n    }\n  },\n  computed: {\n    ratioMin: function ratioMin() {\n      return this.active === true ? this.curMinRatio : this.modelMinRatio;\n    },\n    ratioMax: function ratioMax() {\n      return this.active === true ? this.curMaxRatio : this.modelMaxRatio;\n    },\n    modelMinRatio: function modelMinRatio() {\n      return (this.model.min - this.min) / (this.max - this.min);\n    },\n    modelMaxRatio: function modelMaxRatio() {\n      return (this.model.max - this.min) / (this.max - this.min);\n    },\n    trackStyle: function trackStyle() {\n      var _ref;\n      return _ref = {}, _defineProperty(_ref, this.positionProp, \"\".concat(100 * this.ratioMin, \"%\")), _defineProperty(_ref, this.sizeProp, \"\".concat(100 * (this.ratioMax - this.ratioMin), \"%\")), _ref;\n    },\n    minThumbStyle: function minThumbStyle() {\n      var _ref2;\n      return _ref2 = {}, _defineProperty(_ref2, this.positionProp, \"\".concat(100 * this.ratioMin, \"%\")), _defineProperty(_ref2, 'z-index', this.__nextFocus === 'min' ? 2 : void 0), _ref2;\n    },\n    maxThumbStyle: function maxThumbStyle() {\n      return _defineProperty({}, this.positionProp, \"\".concat(100 * this.ratioMax, \"%\"));\n    },\n    minThumbClass: function minThumbClass() {\n      if (this.preventFocus === false && this.focus === 'min') {\n        return 'q-slider--focus';\n      }\n    },\n    maxThumbClass: function maxThumbClass() {\n      if (this.preventFocus === false && this.focus === 'max') {\n        return 'q-slider--focus';\n      }\n    },\n    events: function events() {\n      var _this = this;\n      if (this.editable === true) {\n        if (this.$q.platform.is.mobile === true) {\n          return {\n            click: this.__mobileClick\n          };\n        }\n        var evt = {\n          mousedown: this.__activate\n        };\n        this.dragOnlyRange === true && Object.assign(evt, {\n          focus: function focus() {\n            _this.__focus('both');\n          },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        });\n        return evt;\n      }\n    },\n    minEvents: function minEvents() {\n      var _this2 = this;\n      if (this.editable === true && this.$q.platform.is.mobile !== true && this.dragOnlyRange !== true) {\n        return {\n          focus: function focus() {\n            _this2.__focus('min');\n          },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        };\n      }\n    },\n    maxEvents: function maxEvents() {\n      var _this3 = this;\n      if (this.editable === true && this.$q.platform.is.mobile !== true && this.dragOnlyRange !== true) {\n        return {\n          focus: function focus() {\n            _this3.__focus('max');\n          },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        };\n      }\n    },\n    minPinClass: function minPinClass() {\n      var color = this.leftLabelColor || this.labelColor;\n      if (color) {\n        return \"text-\".concat(color);\n      }\n    },\n    minPinTextClass: function minPinTextClass() {\n      var color = this.leftLabelTextColor || this.labelTextColor;\n      if (color) {\n        return \"text-\".concat(color);\n      }\n    },\n    maxPinClass: function maxPinClass() {\n      var color = this.rightLabelColor || this.labelColor;\n      if (color) {\n        return \"text-\".concat(color);\n      }\n    },\n    maxPinTextClass: function maxPinTextClass() {\n      var color = this.rightLabelTextColor || this.labelTextColor;\n      if (color) {\n        return \"text-\".concat(color);\n      }\n    },\n    minLabel: function minLabel() {\n      return this.leftLabelValue !== void 0 ? this.leftLabelValue : this.model.min;\n    },\n    maxLabel: function maxLabel() {\n      return this.rightLabelValue !== void 0 ? this.rightLabelValue : this.model.max;\n    },\n    minPinStyle: function minPinStyle() {\n      var percent = this.reverse === true ? -this.ratioMin : this.ratioMin - 1;\n      return this.__getPinStyle(percent, this.ratioMin);\n    },\n    maxPinStyle: function maxPinStyle() {\n      var percent = this.reverse === true ? -this.ratioMax : this.ratioMax - 1;\n      return this.__getPinStyle(percent, this.ratioMax);\n    },\n    formAttrs: function formAttrs() {\n      return {\n        type: 'hidden',\n        name: this.name,\n        value: \"\".concat(this.value.min, \"|\").concat(this.value.max)\n      };\n    }\n  },\n  methods: {\n    __updateValue: function __updateValue(change) {\n      if (this.model.min !== this.value.min || this.model.max !== this.value.max) {\n        this.$emit('input', this.model);\n      }\n      change === true && this.$emit('change', this.model);\n    },\n    __getDragging: function __getDragging(event) {\n      var _this$$el$getBounding = this.$el.getBoundingClientRect(),\n        left = _this$$el$getBounding.left,\n        top = _this$$el$getBounding.top,\n        width = _this$$el$getBounding.width,\n        height = _this$$el$getBounding.height,\n        sensitivity = this.dragOnlyRange === true ? 0 : this.vertical === true ? this.$refs.minThumb.offsetHeight / (2 * height) : this.$refs.minThumb.offsetWidth / (2 * width),\n        diff = this.max - this.min;\n      var dragging = {\n        left: left,\n        top: top,\n        width: width,\n        height: height,\n        valueMin: this.model.min,\n        valueMax: this.model.max,\n        ratioMin: (this.model.min - this.min) / diff,\n        ratioMax: (this.model.max - this.min) / diff\n      };\n      var ratio = getRatio(event, dragging, this.isReversed, this.vertical);\n      var type;\n      if (this.dragOnlyRange !== true && ratio < dragging.ratioMin + sensitivity) {\n        type = dragType.MIN;\n      } else if (this.dragOnlyRange === true || ratio < dragging.ratioMax - sensitivity) {\n        if (this.dragRange === true || this.dragOnlyRange === true) {\n          type = dragType.RANGE;\n          Object.assign(dragging, {\n            offsetRatio: ratio,\n            offsetModel: getModel(ratio, this.min, this.max, this.step, this.decimals),\n            rangeValue: dragging.valueMax - dragging.valueMin,\n            rangeRatio: dragging.ratioMax - dragging.ratioMin\n          });\n        } else {\n          type = dragging.ratioMax - ratio < ratio - dragging.ratioMin ? dragType.MAX : dragType.MIN;\n        }\n      } else {\n        type = dragType.MAX;\n      }\n      dragging.type = type;\n      this.__nextFocus = void 0;\n      return dragging;\n    },\n    __updatePosition: function __updatePosition(event) {\n      var dragging = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.dragging;\n      var ratio = getRatio(event, dragging, this.isReversed, this.vertical),\n        model = getModel(ratio, this.min, this.max, this.step, this.decimals);\n      var pos;\n      switch (dragging.type) {\n        case dragType.MIN:\n          if (ratio <= dragging.ratioMax) {\n            pos = {\n              minR: ratio,\n              maxR: dragging.ratioMax,\n              min: model,\n              max: dragging.valueMax\n            };\n            this.__nextFocus = 'min';\n          } else {\n            pos = {\n              minR: dragging.ratioMax,\n              maxR: ratio,\n              min: dragging.valueMax,\n              max: model\n            };\n            this.__nextFocus = 'max';\n          }\n          break;\n        case dragType.MAX:\n          if (ratio >= dragging.ratioMin) {\n            pos = {\n              minR: dragging.ratioMin,\n              maxR: ratio,\n              min: dragging.valueMin,\n              max: model\n            };\n            this.__nextFocus = 'max';\n          } else {\n            pos = {\n              minR: ratio,\n              maxR: dragging.ratioMin,\n              min: model,\n              max: dragging.valueMin\n            };\n            this.__nextFocus = 'min';\n          }\n          break;\n        case dragType.RANGE:\n          var ratioDelta = ratio - dragging.offsetRatio,\n            minR = between(dragging.ratioMin + ratioDelta, 0, 1 - dragging.rangeRatio),\n            modelDelta = model - dragging.offsetModel,\n            min = between(dragging.valueMin + modelDelta, this.min, this.max - dragging.rangeValue);\n          pos = {\n            minR: minR,\n            maxR: minR + dragging.rangeRatio,\n            min: parseFloat(min.toFixed(this.decimals)),\n            max: parseFloat((min + dragging.rangeValue).toFixed(this.decimals))\n          };\n          break;\n      }\n      this.model = {\n        min: pos.min,\n        max: pos.max\n      };\n\n      // If either of the values to be emitted are null, set them to the defaults the user has entered.\n      if (this.model.min === null || this.model.max === null) {\n        this.model.min = pos.min || this.min;\n        this.model.max = pos.max || this.max;\n      }\n      if (this.snap !== true || this.step === 0) {\n        this.curMinRatio = pos.minR;\n        this.curMaxRatio = pos.maxR;\n      } else {\n        var diff = this.max - this.min;\n        this.curMinRatio = (this.model.min - this.min) / diff;\n        this.curMaxRatio = (this.model.max - this.min) / diff;\n      }\n    },\n    __focus: function __focus(which) {\n      this.focus = which;\n    },\n    __keydown: function __keydown(evt) {\n      if (!keyCodes.includes(evt.keyCode)) {\n        return;\n      }\n      stopAndPrevent(evt);\n      var step = ([34, 33].includes(evt.keyCode) ? 10 : 1) * this.computedStep,\n        offset = [34, 37, 40].includes(evt.keyCode) ? -step : step;\n      if (this.dragOnlyRange) {\n        var interval = this.dragOnlyRange ? this.model.max - this.model.min : 0;\n        var min = between(parseFloat((this.model.min + offset).toFixed(this.decimals)), this.min, this.max - interval);\n        this.model = {\n          min: min,\n          max: parseFloat((min + interval).toFixed(this.decimals))\n        };\n      } else if (this.focus === false) {\n        return;\n      } else {\n        var which = this.focus;\n        this.model = _objectSpread(_objectSpread({}, this.model), {}, _defineProperty({}, which, between(parseFloat((this.model[which] + offset).toFixed(this.decimals)), which === 'min' ? this.min : this.model.min, which === 'max' ? this.max : this.model.max)));\n      }\n      this.__updateValue();\n    },\n    __getThumb: function __getThumb(h, which) {\n      var child = [this.__getThumbSvg(h), h('div', {\n        staticClass: 'q-slider__focus-ring'\n      })];\n      if (this.label === true || this.labelAlways === true) {\n        child.push(h('div', {\n          staticClass: \"q-slider__pin q-slider__pin\".concat(this.axis, \" absolute\"),\n          style: this[which + 'PinStyle'].pin,\n          \"class\": this[which + 'PinClass']\n        }, [h('div', {\n          staticClass: \"q-slider__pin-text-container q-slider__pin-text-container\".concat(this.axis),\n          style: this[which + 'PinStyle'].pinTextContainer\n        }, [h('span', {\n          staticClass: 'q-slider__pin-text',\n          \"class\": this[which + 'PinTextClass']\n        }, [this[which + 'Label']])])]), h('div', {\n          staticClass: \"q-slider__arrow q-slider__arrow\".concat(this.axis),\n          \"class\": this[which + 'PinClass']\n        }));\n      }\n      return h('div', {\n        ref: which + 'Thumb',\n        staticClass: \"q-slider__thumb-container q-slider__thumb-container\".concat(this.axis, \" absolute non-selectable\"),\n        style: this[which + 'ThumbStyle'],\n        \"class\": this[which + 'ThumbClass'],\n        on: this[which + 'Events'],\n        attrs: {\n          tabindex: this.dragOnlyRange !== true ? this.computedTabindex : null\n        }\n      }, child);\n    }\n  },\n  render: function render(h) {\n    var track = [h('div', {\n      staticClass: \"q-slider__track q-slider__track\".concat(this.axis, \" absolute\"),\n      style: this.trackStyle\n    })];\n    this.markers === true && track.push(h('div', {\n      staticClass: \"q-slider__track-markers q-slider__track-markers\".concat(this.axis, \" absolute-full fit\"),\n      style: this.markerStyle\n    }));\n    var child = [h('div', {\n      staticClass: \"q-slider__track-container q-slider__track-container\".concat(this.axis, \" absolute\")\n    }, track), this.__getThumb(h, 'min'), this.__getThumb(h, 'max')];\n    if (this.name !== void 0 && this.disable !== true) {\n      this.__injectFormInput(child, 'push');\n    }\n    return h('div', {\n      staticClass: this.value.min === null || this.value.max === null ? 'q-slider--no-value' : void 0,\n      attrs: _objectSpread(_objectSpread({}, this.attrs), {}, {\n        'aria-valuenow': this.value.min + '|' + this.value.max,\n        tabindex: this.dragOnlyRange === true && this.$q.platform.is.mobile !== true ? this.computedTabindex : null\n      }),\n      \"class\": this.classes,\n      on: this.events,\n      directives: this.panDirectives\n    }, child);\n  }\n});","map":{"version":3,"names":["Vue","getRatio","getModel","SliderMixin","keyCodes","stopAndPrevent","between","dragType","MIN","RANGE","MAX","extend","name","mixins","props","value","type","Object","_default","min","max","validator","val","String","dragRange","Boolean","dragOnlyRange","leftLabelColor","leftLabelTextColor","rightLabelColor","rightLabelTextColor","leftLabelValue","Number","rightLabelValue","data","model","curMinRatio","curMaxRatio","watch","valueMin","valueMax","computed","ratioMin","active","modelMinRatio","ratioMax","modelMaxRatio","trackStyle","_ref","_defineProperty","positionProp","concat","sizeProp","minThumbStyle","_ref2","__nextFocus","maxThumbStyle","minThumbClass","preventFocus","focus","maxThumbClass","events","_this","editable","$q","platform","is","mobile","click","__mobileClick","evt","mousedown","__activate","assign","__focus","blur","__blur","keydown","__keydown","keyup","__keyup","minEvents","_this2","maxEvents","_this3","minPinClass","color","labelColor","minPinTextClass","labelTextColor","maxPinClass","maxPinTextClass","minLabel","maxLabel","minPinStyle","percent","reverse","__getPinStyle","maxPinStyle","formAttrs","methods","__updateValue","change","$emit","__getDragging","event","_this$$el$getBounding","$el","getBoundingClientRect","left","top","width","height","sensitivity","vertical","$refs","minThumb","offsetHeight","offsetWidth","diff","dragging","ratio","isReversed","offsetRatio","offsetModel","step","decimals","rangeValue","rangeRatio","__updatePosition","arguments","length","undefined","pos","minR","maxR","ratioDelta","modelDelta","parseFloat","toFixed","snap","which","includes","keyCode","computedStep","offset","interval","_objectSpread","__getThumb","h","child","__getThumbSvg","staticClass","label","labelAlways","push","axis","style","pin","pinTextContainer","ref","on","attrs","tabindex","computedTabindex","render","track","markers","markerStyle","disable","__injectFormInput","classes","directives","panDirectives"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/components/range/QRange.js"],"sourcesContent":["import Vue from 'vue'\n\nimport {\n  getRatio,\n  getModel,\n  SliderMixin,\n  keyCodes\n} from '../slider/slider-utils.js'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { between } from '../../utils/format.js'\n\nconst dragType = {\n  MIN: 0,\n  RANGE: 1,\n  MAX: 2\n}\n\nexport default Vue.extend({\n  name: 'QRange',\n\n  mixins: [ SliderMixin ],\n\n  props: {\n    value: {\n      type: Object,\n      default: () => ({\n        min: null,\n        max: null\n      }),\n      validator (val) {\n        return 'min' in val && 'max' in val\n      }\n    },\n\n    name: String,\n\n    dragRange: Boolean,\n    dragOnlyRange: Boolean,\n\n    leftLabelColor: String,\n    leftLabelTextColor: String,\n    rightLabelColor: String,\n    rightLabelTextColor: String,\n\n    leftLabelValue: [ String, Number ],\n    rightLabelValue: [ String, Number ]\n  },\n\n  data () {\n    return {\n      model: {\n        min: this.value.min === null ? this.min : this.value.min,\n        max: this.value.max === null ? this.max : this.value.max\n      },\n      curMinRatio: 0,\n      curMaxRatio: 0\n    }\n  },\n\n  watch: {\n    'value.min' (val) {\n      this.model.min = val === null\n        ? this.min\n        : val\n    },\n\n    'value.max' (val) {\n      this.model.max = val === null\n        ? this.max\n        : val\n    },\n\n    min (value) {\n      if (this.model.min < value) {\n        this.model.min = value\n      }\n      if (this.model.max < value) {\n        this.model.max = value\n      }\n    },\n\n    max (value) {\n      if (this.model.min > value) {\n        this.model.min = value\n      }\n      if (this.model.max > value) {\n        this.model.max = value\n      }\n    }\n  },\n\n  computed: {\n    ratioMin () {\n      return this.active === true ? this.curMinRatio : this.modelMinRatio\n    },\n\n    ratioMax () {\n      return this.active === true ? this.curMaxRatio : this.modelMaxRatio\n    },\n\n    modelMinRatio () {\n      return (this.model.min - this.min) / (this.max - this.min)\n    },\n\n    modelMaxRatio () {\n      return (this.model.max - this.min) / (this.max - this.min)\n    },\n\n    trackStyle () {\n      return {\n        [ this.positionProp ]: `${100 * this.ratioMin}%`,\n        [ this.sizeProp ]: `${100 * (this.ratioMax - this.ratioMin)}%`\n      }\n    },\n\n    minThumbStyle () {\n      return {\n        [ this.positionProp ]: `${100 * this.ratioMin}%`,\n        'z-index': this.__nextFocus === 'min' ? 2 : void 0\n      }\n    },\n\n    maxThumbStyle () {\n      return {\n        [ this.positionProp ]: `${100 * this.ratioMax}%`\n      }\n    },\n\n    minThumbClass () {\n      if (this.preventFocus === false && this.focus === 'min') {\n        return 'q-slider--focus'\n      }\n    },\n\n    maxThumbClass () {\n      if (this.preventFocus === false && this.focus === 'max') {\n        return 'q-slider--focus'\n      }\n    },\n\n    events () {\n      if (this.editable === true) {\n        if (this.$q.platform.is.mobile === true) {\n          return { click: this.__mobileClick }\n        }\n\n        const evt = { mousedown: this.__activate }\n\n        this.dragOnlyRange === true && Object.assign(evt, {\n          focus: () => { this.__focus('both') },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        })\n\n        return evt\n      }\n    },\n\n    minEvents () {\n      if (this.editable === true && this.$q.platform.is.mobile !== true && this.dragOnlyRange !== true) {\n        return {\n          focus: () => { this.__focus('min') },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        }\n      }\n    },\n\n    maxEvents () {\n      if (this.editable === true && this.$q.platform.is.mobile !== true && this.dragOnlyRange !== true) {\n        return {\n          focus: () => { this.__focus('max') },\n          blur: this.__blur,\n          keydown: this.__keydown,\n          keyup: this.__keyup\n        }\n      }\n    },\n\n    minPinClass () {\n      const color = this.leftLabelColor || this.labelColor\n      if (color) {\n        return `text-${color}`\n      }\n    },\n\n    minPinTextClass () {\n      const color = this.leftLabelTextColor || this.labelTextColor\n      if (color) {\n        return `text-${color}`\n      }\n    },\n\n    maxPinClass () {\n      const color = this.rightLabelColor || this.labelColor\n      if (color) {\n        return `text-${color}`\n      }\n    },\n\n    maxPinTextClass () {\n      const color = this.rightLabelTextColor || this.labelTextColor\n      if (color) {\n        return `text-${color}`\n      }\n    },\n\n    minLabel () {\n      return this.leftLabelValue !== void 0\n        ? this.leftLabelValue\n        : this.model.min\n    },\n\n    maxLabel () {\n      return this.rightLabelValue !== void 0\n        ? this.rightLabelValue\n        : this.model.max\n    },\n\n    minPinStyle () {\n      const percent = (this.reverse === true ? -this.ratioMin : this.ratioMin - 1)\n      return this.__getPinStyle(percent, this.ratioMin)\n    },\n\n    maxPinStyle () {\n      const percent = (this.reverse === true ? -this.ratioMax : this.ratioMax - 1)\n      return this.__getPinStyle(percent, this.ratioMax)\n    },\n\n    formAttrs () {\n      return {\n        type: 'hidden',\n        name: this.name,\n        value: `${this.value.min}|${this.value.max}`\n      }\n    }\n  },\n\n  methods: {\n    __updateValue (change) {\n      if (this.model.min !== this.value.min || this.model.max !== this.value.max) {\n        this.$emit('input', this.model)\n      }\n      change === true && this.$emit('change', this.model)\n    },\n\n    __getDragging (event) {\n      const\n        { left, top, width, height } = this.$el.getBoundingClientRect(),\n        sensitivity = this.dragOnlyRange === true\n          ? 0\n          : (this.vertical === true\n            ? this.$refs.minThumb.offsetHeight / (2 * height)\n            : this.$refs.minThumb.offsetWidth / (2 * width)\n          ),\n        diff = this.max - this.min\n\n      const dragging = {\n        left,\n        top,\n        width,\n        height,\n        valueMin: this.model.min,\n        valueMax: this.model.max,\n        ratioMin: (this.model.min - this.min) / diff,\n        ratioMax: (this.model.max - this.min) / diff\n      }\n\n      const ratio = getRatio(event, dragging, this.isReversed, this.vertical)\n      let type\n\n      if (this.dragOnlyRange !== true && ratio < dragging.ratioMin + sensitivity) {\n        type = dragType.MIN\n      }\n      else if (this.dragOnlyRange === true || ratio < dragging.ratioMax - sensitivity) {\n        if (this.dragRange === true || this.dragOnlyRange === true) {\n          type = dragType.RANGE\n          Object.assign(dragging, {\n            offsetRatio: ratio,\n            offsetModel: getModel(ratio, this.min, this.max, this.step, this.decimals),\n            rangeValue: dragging.valueMax - dragging.valueMin,\n            rangeRatio: dragging.ratioMax - dragging.ratioMin\n          })\n        }\n        else {\n          type = dragging.ratioMax - ratio < ratio - dragging.ratioMin\n            ? dragType.MAX\n            : dragType.MIN\n        }\n      }\n      else {\n        type = dragType.MAX\n      }\n\n      dragging.type = type\n      this.__nextFocus = void 0\n\n      return dragging\n    },\n\n    __updatePosition (event, dragging = this.dragging) {\n      const\n        ratio = getRatio(event, dragging, this.isReversed, this.vertical),\n        model = getModel(ratio, this.min, this.max, this.step, this.decimals)\n      let pos\n\n      switch (dragging.type) {\n        case dragType.MIN:\n          if (ratio <= dragging.ratioMax) {\n            pos = {\n              minR: ratio,\n              maxR: dragging.ratioMax,\n              min: model,\n              max: dragging.valueMax\n            }\n            this.__nextFocus = 'min'\n          }\n          else {\n            pos = {\n              minR: dragging.ratioMax,\n              maxR: ratio,\n              min: dragging.valueMax,\n              max: model\n            }\n            this.__nextFocus = 'max'\n          }\n          break\n\n        case dragType.MAX:\n          if (ratio >= dragging.ratioMin) {\n            pos = {\n              minR: dragging.ratioMin,\n              maxR: ratio,\n              min: dragging.valueMin,\n              max: model\n            }\n            this.__nextFocus = 'max'\n          }\n          else {\n            pos = {\n              minR: ratio,\n              maxR: dragging.ratioMin,\n              min: model,\n              max: dragging.valueMin\n            }\n            this.__nextFocus = 'min'\n          }\n          break\n\n        case dragType.RANGE:\n          const\n            ratioDelta = ratio - dragging.offsetRatio,\n            minR = between(dragging.ratioMin + ratioDelta, 0, 1 - dragging.rangeRatio),\n            modelDelta = model - dragging.offsetModel,\n            min = between(dragging.valueMin + modelDelta, this.min, this.max - dragging.rangeValue)\n\n          pos = {\n            minR,\n            maxR: minR + dragging.rangeRatio,\n            min: parseFloat(min.toFixed(this.decimals)),\n            max: parseFloat((min + dragging.rangeValue).toFixed(this.decimals))\n          }\n          break\n      }\n\n      this.model = {\n        min: pos.min,\n        max: pos.max\n      }\n\n      // If either of the values to be emitted are null, set them to the defaults the user has entered.\n      if (this.model.min === null || this.model.max === null) {\n        this.model.min = pos.min || this.min\n        this.model.max = pos.max || this.max\n      }\n\n      if (this.snap !== true || this.step === 0) {\n        this.curMinRatio = pos.minR\n        this.curMaxRatio = pos.maxR\n      }\n      else {\n        const diff = this.max - this.min\n        this.curMinRatio = (this.model.min - this.min) / diff\n        this.curMaxRatio = (this.model.max - this.min) / diff\n      }\n    },\n\n    __focus (which) {\n      this.focus = which\n    },\n\n    __keydown (evt) {\n      if (!keyCodes.includes(evt.keyCode)) {\n        return\n      }\n\n      stopAndPrevent(evt)\n\n      const\n        step = ([34, 33].includes(evt.keyCode) ? 10 : 1) * this.computedStep,\n        offset = [34, 37, 40].includes(evt.keyCode) ? -step : step\n\n      if (this.dragOnlyRange) {\n        const interval = this.dragOnlyRange\n          ? this.model.max - this.model.min\n          : 0\n\n        const min = between(\n          parseFloat((this.model.min + offset).toFixed(this.decimals)),\n          this.min,\n          this.max - interval\n        )\n\n        this.model = {\n          min,\n          max: parseFloat((min + interval).toFixed(this.decimals))\n        }\n      }\n      else if (this.focus === false) {\n        return\n      }\n      else {\n        const which = this.focus\n\n        this.model = {\n          ...this.model,\n          [which]: between(\n            parseFloat((this.model[which] + offset).toFixed(this.decimals)),\n            which === 'min' ? this.min : this.model.min,\n            which === 'max' ? this.max : this.model.max\n          )\n        }\n      }\n\n      this.__updateValue()\n    },\n\n    __getThumb (h, which) {\n      const child = [\n        this.__getThumbSvg(h),\n        h('div', { staticClass: 'q-slider__focus-ring' })\n      ]\n\n      if (this.label === true || this.labelAlways === true) {\n        child.push(\n          h('div', {\n            staticClass: `q-slider__pin q-slider__pin${this.axis} absolute`,\n            style: this[which + 'PinStyle'].pin,\n            class: this[which + 'PinClass']\n          }, [\n            h('div', {\n              staticClass: `q-slider__pin-text-container q-slider__pin-text-container${this.axis}`,\n              style: this[which + 'PinStyle'].pinTextContainer\n            }, [\n              h('span', {\n                staticClass: 'q-slider__pin-text',\n                class: this[which + 'PinTextClass']\n              }, [\n                this[which + 'Label']\n              ])\n            ])\n          ]),\n\n          h('div', {\n            staticClass: `q-slider__arrow q-slider__arrow${this.axis}`,\n            class: this[which + 'PinClass']\n          })\n        )\n      }\n\n      return h('div', {\n        ref: which + 'Thumb',\n        staticClass: `q-slider__thumb-container q-slider__thumb-container${this.axis} absolute non-selectable`,\n        style: this[which + 'ThumbStyle'],\n        class: this[which + 'ThumbClass'],\n        on: this[which + 'Events'],\n        attrs: { tabindex: this.dragOnlyRange !== true ? this.computedTabindex : null }\n      }, child)\n    }\n  },\n\n  render (h) {\n    const track = [\n      h('div', {\n        staticClass: `q-slider__track q-slider__track${this.axis} absolute`,\n        style: this.trackStyle\n      })\n    ]\n\n    this.markers === true && track.push(\n      h('div', {\n        staticClass: `q-slider__track-markers q-slider__track-markers${this.axis} absolute-full fit`,\n        style: this.markerStyle\n      })\n    )\n\n    const child = [\n      h('div', {\n        staticClass: `q-slider__track-container q-slider__track-container${this.axis} absolute`\n      }, track),\n\n      this.__getThumb(h, 'min'),\n      this.__getThumb(h, 'max')\n    ]\n\n    if (this.name !== void 0 && this.disable !== true) {\n      this.__injectFormInput(child, 'push')\n    }\n\n    return h('div', {\n      staticClass: this.value.min === null || this.value.max === null\n        ? 'q-slider--no-value'\n        : void 0,\n      attrs: {\n        ...this.attrs,\n        'aria-valuenow': this.value.min + '|' + this.value.max,\n        tabindex: this.dragOnlyRange === true && this.$q.platform.is.mobile !== true\n          ? this.computedTabindex\n          : null\n      },\n      class: this.classes,\n      on: this.events,\n      directives: this.panDirectives\n    }, child)\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}