{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport Vue from 'vue';\nimport { isSSR } from './Platform.js';\nvar prefixes = {};\n\n// needed for consistency across browsers,\n// including IE11 which does not return anything\nfunction promisify(target, fn) {\n  try {\n    var res = target[fn]();\n    return res === void 0 ? Promise.resolve() : res;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport default {\n  isCapable: false,\n  isActive: false,\n  activeEl: null,\n  request: function request(target) {\n    var _this = this;\n    if (this.isCapable === true && this.isActive === false) {\n      var el = target || document.documentElement;\n      return promisify(el, prefixes.request).then(function () {\n        _this.activeEl = el;\n      });\n    }\n    return this.__getErr();\n  },\n  exit: function exit() {\n    var _this2 = this;\n    return this.isCapable === true && this.isActive === true ? promisify(document, prefixes.exit).then(function () {\n      _this2.activeEl = null;\n    }) : this.__getErr();\n  },\n  toggle: function toggle(target) {\n    return this.isActive === true ? this.exit() : this.request(target);\n  },\n  install: function install(_ref) {\n    var _this3 = this;\n    var $q = _ref.$q;\n    $q.fullscreen = this;\n    if (isSSR === true) {\n      return;\n    }\n    prefixes.request = ['requestFullscreen', 'msRequestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen'].find(function (request) {\n      return document.documentElement[request] !== void 0;\n    });\n    this.isCapable = prefixes.request !== void 0;\n    if (this.isCapable === false) {\n      // it means the browser does NOT support it\n      this.__getErr = function () {\n        return Promise.reject('Not capable');\n      };\n      return;\n    }\n    this.__getErr = function () {\n      return Promise.resolve();\n    };\n    prefixes.exit = ['exitFullscreen', 'msExitFullscreen', 'mozCancelFullScreen', 'webkitExitFullscreen'].find(function (exit) {\n      return document[exit];\n    });\n    this.isActive = !!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement);\n    ['onfullscreenchange', 'onmsfullscreenchange', 'onwebkitfullscreenchange'].forEach(function (evt) {\n      document[evt] = function () {\n        _this3.isActive = _this3.isActive === false;\n      };\n    });\n    Vue.util.defineReactive(this, 'isActive', this.isActive);\n    Vue.util.defineReactive(this, 'activeEl', this.activeEl);\n  }\n};","map":{"version":3,"names":["Vue","isSSR","prefixes","promisify","target","fn","res","Promise","resolve","err","reject","isCapable","isActive","activeEl","request","_this","el","document","documentElement","then","__getErr","exit","_this2","toggle","install","_ref","_this3","$q","fullscreen","find","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","forEach","evt","util","defineReactive"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/plugins/AppFullscreen.js"],"sourcesContent":["import Vue from 'vue'\n\nimport { isSSR } from './Platform.js'\n\nconst prefixes = {}\n\n// needed for consistency across browsers,\n// including IE11 which does not return anything\nfunction promisify (target, fn) {\n  try {\n    const res = target[fn]()\n    return res === void 0\n      ? Promise.resolve()\n      : res\n  }\n  catch (err) {\n    return Promise.reject(err)\n  }\n}\n\nexport default {\n  isCapable: false,\n  isActive: false,\n  activeEl: null,\n\n  request (target) {\n    if (this.isCapable === true && this.isActive === false) {\n      const el = target || document.documentElement\n      return promisify(el, prefixes.request).then(() => {\n        this.activeEl = el\n      })\n    }\n\n    return this.__getErr()\n  },\n\n  exit () {\n    return this.isCapable === true && this.isActive === true\n      ? promisify(document, prefixes.exit).then(() => {\n        this.activeEl = null\n      })\n      : this.__getErr()\n  },\n\n  toggle (target) {\n    return this.isActive === true\n      ? this.exit()\n      : this.request(target)\n  },\n\n  install ({ $q }) {\n    $q.fullscreen = this\n\n    if (isSSR === true) { return }\n\n    prefixes.request = [\n      'requestFullscreen',\n      'msRequestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen'\n    ].find(request => document.documentElement[request] !== void 0)\n\n    this.isCapable = prefixes.request !== void 0\n\n    if (this.isCapable === false) {\n      // it means the browser does NOT support it\n      this.__getErr = () => Promise.reject('Not capable')\n      return\n    }\n\n    this.__getErr = () => Promise.resolve()\n\n    prefixes.exit = [\n      'exitFullscreen',\n      'msExitFullscreen', 'mozCancelFullScreen', 'webkitExitFullscreen'\n    ].find(exit => document[exit])\n\n    this.isActive = !!(document.fullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement ||\n      document.msFullscreenElement)\n\n    ;[\n      'onfullscreenchange',\n      'onmsfullscreenchange', 'onwebkitfullscreenchange'\n    ].forEach(evt => {\n      document[evt] = () => {\n        this.isActive = this.isActive === false\n      }\n    })\n\n    Vue.util.defineReactive(this, 'isActive', this.isActive)\n    Vue.util.defineReactive(this, 'activeEl', this.activeEl)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}