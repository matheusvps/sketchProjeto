{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport { isSSR } from './plugins/Platform.js';\nimport materialIcons from '../icon-set/material-icons.js';\nexport default {\n  install: function install($q, queues, iconSet) {\n    var _this = this;\n    var initialSet = iconSet || materialIcons;\n    this.set = function (setObject, ssrContext) {\n      var def = _objectSpread({}, setObject);\n      if (isSSR === true) {\n        if (ssrContext === void 0) {\n          console.error('SSR ERROR: second param required: Quasar.iconSet.set(iconSet, ssrContext)');\n          return;\n        }\n        def.set = ssrContext.$q.iconSet.set;\n        ssrContext.$q.iconSet = def;\n      } else {\n        def.set = _this.set;\n        $q.iconSet = def;\n      }\n    };\n    if (isSSR === true) {\n      queues.server.push(function (q, ctx) {\n        q.iconSet = {};\n        q.iconSet.set = function (setObject) {\n          _this.set(setObject, ctx.ssr);\n        };\n        q.iconSet.set(initialSet);\n      });\n    } else {\n      Vue.util.defineReactive($q, 'iconMapFn', void 0);\n      Vue.util.defineReactive($q, 'iconSet', {});\n      this.set(initialSet);\n    }\n  }\n};","map":{"version":3,"names":["Vue","isSSR","materialIcons","install","$q","queues","iconSet","_this","initialSet","set","setObject","ssrContext","def","_objectSpread","console","error","server","push","q","ctx","ssr","util","defineReactive"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/icon-set.js"],"sourcesContent":["import Vue from 'vue'\n\nimport { isSSR } from './plugins/Platform.js'\nimport materialIcons from '../icon-set/material-icons.js'\n\nexport default {\n  install ($q, queues, iconSet) {\n    const initialSet = iconSet || materialIcons\n\n    this.set = (setObject, ssrContext) => {\n      const def = { ...setObject }\n\n      if (isSSR === true) {\n        if (ssrContext === void 0) {\n          console.error('SSR ERROR: second param required: Quasar.iconSet.set(iconSet, ssrContext)')\n          return\n        }\n\n        def.set = ssrContext.$q.iconSet.set\n        ssrContext.$q.iconSet = def\n      }\n      else {\n        def.set = this.set\n        $q.iconSet = def\n      }\n    }\n\n    if (isSSR === true) {\n      queues.server.push((q, ctx) => {\n        q.iconSet = {}\n        q.iconSet.set = setObject => {\n          this.set(setObject, ctx.ssr)\n        }\n\n        q.iconSet.set(initialSet)\n      })\n    }\n    else {\n      Vue.util.defineReactive($q, 'iconMapFn', void 0)\n      Vue.util.defineReactive($q, 'iconSet', {})\n\n      this.set(initialSet)\n    }\n  }\n}\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AAErB,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAOC,aAAa,MAAM,+BAA+B;AAEzD,eAAe;EACbC,OAAO,WAAAA,QAAEC,EAAE,EAAEC,MAAM,EAAEC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAC5B,IAAMC,UAAU,GAAGF,OAAO,IAAIJ,aAAa;IAE3C,IAAI,CAACO,GAAG,GAAG,UAACC,SAAS,EAAEC,UAAU,EAAK;MACpC,IAAMC,GAAG,GAAAC,aAAA,KAAQH,SAAS,CAAE;MAE5B,IAAIT,KAAK,KAAK,IAAI,EAAE;QAClB,IAAIU,UAAU,KAAK,KAAK,CAAC,EAAE;UACzBG,OAAO,CAACC,KAAK,CAAC,2EAA2E,CAAC;UAC1F;QACF;QAEAH,GAAG,CAACH,GAAG,GAAGE,UAAU,CAACP,EAAE,CAACE,OAAO,CAACG,GAAG;QACnCE,UAAU,CAACP,EAAE,CAACE,OAAO,GAAGM,GAAG;MAC7B,CAAC,MACI;QACHA,GAAG,CAACH,GAAG,GAAGF,KAAI,CAACE,GAAG;QAClBL,EAAE,CAACE,OAAO,GAAGM,GAAG;MAClB;IACF,CAAC;IAED,IAAIX,KAAK,KAAK,IAAI,EAAE;MAClBI,MAAM,CAACW,MAAM,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,GAAG,EAAK;QAC7BD,CAAC,CAACZ,OAAO,GAAG,CAAC,CAAC;QACdY,CAAC,CAACZ,OAAO,CAACG,GAAG,GAAG,UAAAC,SAAS,EAAI;UAC3BH,KAAI,CAACE,GAAG,CAACC,SAAS,EAAES,GAAG,CAACC,GAAG,CAAC;QAC9B,CAAC;QAEDF,CAAC,CAACZ,OAAO,CAACG,GAAG,CAACD,UAAU,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,MACI;MACHR,GAAG,CAACqB,IAAI,CAACC,cAAc,CAAClB,EAAE,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;MAChDJ,GAAG,CAACqB,IAAI,CAACC,cAAc,CAAClB,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;MAE1C,IAAI,CAACK,GAAG,CAACD,UAAU,CAAC;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}