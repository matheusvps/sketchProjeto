{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nexport function slot(vm, slotName, otherwise) {\n  return vm.$scopedSlots[slotName] !== void 0 ? vm.$scopedSlots[slotName]() : otherwise;\n}\nexport function uniqueSlot(vm, slotName, otherwise) {\n  return vm.$scopedSlots[slotName] !== void 0 ? vm.$scopedSlots[slotName]().slice() : otherwise;\n}\n\n/**\n * Source definitely exists,\n * so it's merged with the possible slot\n */\nexport function mergeSlot(source, vm, slotName) {\n  return vm.$scopedSlots[slotName] !== void 0 ? source.concat(vm.$scopedSlots[slotName]()) : source;\n}\n\n/**\n * Merge with possible slot,\n * even if source might not exist\n */\nexport function mergeSlotSafely(source, vm, slotName) {\n  if (vm.$scopedSlots[slotName] === void 0) {\n    return source;\n  }\n  var slot = vm.$scopedSlots[slotName]();\n  return source !== void 0 ? source.concat(slot) : slot;\n}","map":{"version":3,"names":["slot","vm","slotName","otherwise","$scopedSlots","uniqueSlot","slice","mergeSlot","source","concat","mergeSlotSafely"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/utils/slot.js"],"sourcesContent":["export function slot (vm, slotName, otherwise) {\n  return vm.$scopedSlots[slotName] !== void 0\n    ? vm.$scopedSlots[slotName]()\n    : otherwise\n}\n\nexport function uniqueSlot (vm, slotName, otherwise) {\n  return vm.$scopedSlots[slotName] !== void 0\n    ? vm.$scopedSlots[slotName]().slice()\n    : otherwise\n}\n\n/**\n * Source definitely exists,\n * so it's merged with the possible slot\n */\nexport function mergeSlot (source, vm, slotName) {\n  return vm.$scopedSlots[slotName] !== void 0\n    ? source.concat(vm.$scopedSlots[slotName]())\n    : source\n}\n\n/**\n * Merge with possible slot,\n * even if source might not exist\n */\nexport function mergeSlotSafely (source, vm, slotName) {\n  if (vm.$scopedSlots[slotName] === void 0) {\n    return source\n  }\n\n  const slot = vm.$scopedSlots[slotName]()\n  return source !== void 0\n    ? source.concat(slot)\n    : slot\n}\n"],"mappings":";;AAAA,OAAO,SAASA,IAAIA,CAAEC,EAAE,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EAC7C,OAAOF,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,KAAK,KAAK,CAAC,GACvCD,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,EAAE,GAC3BC,SAAS;AACf;AAEA,OAAO,SAASE,UAAUA,CAAEJ,EAAE,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EACnD,OAAOF,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,KAAK,KAAK,CAAC,GACvCD,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,EAAE,CAACI,KAAK,EAAE,GACnCH,SAAS;AACf;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASI,SAASA,CAAEC,MAAM,EAAEP,EAAE,EAAEC,QAAQ,EAAE;EAC/C,OAAOD,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,KAAK,KAAK,CAAC,GACvCM,MAAM,CAACC,MAAM,CAACR,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,EAAE,CAAC,GAC1CM,MAAM;AACZ;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASE,eAAeA,CAAEF,MAAM,EAAEP,EAAE,EAAEC,QAAQ,EAAE;EACrD,IAAID,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,KAAK,KAAK,CAAC,EAAE;IACxC,OAAOM,MAAM;EACf;EAEA,IAAMR,IAAI,GAAGC,EAAE,CAACG,YAAY,CAACF,QAAQ,CAAC,EAAE;EACxC,OAAOM,MAAM,KAAK,KAAK,CAAC,GACpBA,MAAM,CAACC,MAAM,CAACT,IAAI,CAAC,GACnBA,IAAI;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}