{"ast":null,"code":"import \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nfunction getVal(val) {\n  return Array.isArray(val) ? val.slice() : [];\n}\nexport default {\n  props: {\n    expanded: Array // sync\n  },\n  data: function data() {\n    return {\n      innerExpanded: getVal(this.expanded)\n    };\n  },\n  watch: {\n    expanded: function expanded(val) {\n      this.innerExpanded = getVal(val);\n    }\n  },\n  methods: {\n    isRowExpanded: function isRowExpanded(key) {\n      return this.innerExpanded.includes(key);\n    },\n    setExpanded: function setExpanded(val) {\n      if (this.expanded !== void 0) {\n        this.$emit('update:expanded', val);\n      } else {\n        this.innerExpanded = val;\n      }\n    },\n    __updateExpanded: function __updateExpanded(key, add) {\n      var target = this.innerExpanded.slice();\n      var index = target.indexOf(key);\n      if (add === true) {\n        if (index === -1) {\n          target.push(key);\n          this.setExpanded(target);\n        }\n      } else if (index !== -1) {\n        target.splice(index, 1);\n        this.setExpanded(target);\n      }\n    }\n  }\n};","map":{"version":3,"names":["getVal","val","Array","isArray","slice","props","expanded","data","innerExpanded","watch","methods","isRowExpanded","key","includes","setExpanded","$emit","__updateExpanded","add","target","index","indexOf","push","splice"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/components/table/table-row-expand.js"],"sourcesContent":["function getVal (val) {\n  return Array.isArray(val)\n    ? val.slice()\n    : []\n}\n\nexport default {\n  props: {\n    expanded: Array // sync\n  },\n\n  data () {\n    return {\n      innerExpanded: getVal(this.expanded)\n    }\n  },\n\n  watch: {\n    expanded (val) {\n      this.innerExpanded = getVal(val)\n    }\n  },\n\n  methods: {\n    isRowExpanded (key) {\n      return this.innerExpanded.includes(key)\n    },\n\n    setExpanded (val) {\n      if (this.expanded !== void 0) {\n        this.$emit('update:expanded', val)\n      }\n      else {\n        this.innerExpanded = val\n      }\n    },\n\n    __updateExpanded (key, add) {\n      const target = this.innerExpanded.slice()\n      const index = target.indexOf(key)\n\n      if (add === true) {\n        if (index === -1) {\n          target.push(key)\n          this.setExpanded(target)\n        }\n      }\n      else if (index !== -1) {\n        target.splice(index, 1)\n        this.setExpanded(target)\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,MAAMA,CAAEC,GAAG,EAAE;EACpB,OAAOC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,GACrBA,GAAG,CAACG,KAAK,EAAE,GACX,EAAE;AACR;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,QAAQ,EAAEJ,KAAK,CAAC;EAClB,CAAC;EAEDK,IAAI,WAAAA,KAAA,EAAI;IACN,OAAO;MACLC,aAAa,EAAER,MAAM,CAAC,IAAI,CAACM,QAAQ;IACrC,CAAC;EACH,CAAC;EAEDG,KAAK,EAAE;IACLH,QAAQ,WAAAA,SAAEL,GAAG,EAAE;MACb,IAAI,CAACO,aAAa,GAAGR,MAAM,CAACC,GAAG,CAAC;IAClC;EACF,CAAC;EAEDS,OAAO,EAAE;IACPC,aAAa,WAAAA,cAAEC,GAAG,EAAE;MAClB,OAAO,IAAI,CAACJ,aAAa,CAACK,QAAQ,CAACD,GAAG,CAAC;IACzC,CAAC;IAEDE,WAAW,WAAAA,YAAEb,GAAG,EAAE;MAChB,IAAI,IAAI,CAACK,QAAQ,KAAK,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACS,KAAK,CAAC,iBAAiB,EAAEd,GAAG,CAAC;MACpC,CAAC,MACI;QACH,IAAI,CAACO,aAAa,GAAGP,GAAG;MAC1B;IACF,CAAC;IAEDe,gBAAgB,WAAAA,iBAAEJ,GAAG,EAAEK,GAAG,EAAE;MAC1B,IAAMC,MAAM,GAAG,IAAI,CAACV,aAAa,CAACJ,KAAK,EAAE;MACzC,IAAMe,KAAK,GAAGD,MAAM,CAACE,OAAO,CAACR,GAAG,CAAC;MAEjC,IAAIK,GAAG,KAAK,IAAI,EAAE;QAChB,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBD,MAAM,CAACG,IAAI,CAACT,GAAG,CAAC;UAChB,IAAI,CAACE,WAAW,CAACI,MAAM,CAAC;QAC1B;MACF,CAAC,MACI,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QACrBD,MAAM,CAACI,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QACvB,IAAI,CAACL,WAAW,CAACI,MAAM,CAAC;MAC1B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}