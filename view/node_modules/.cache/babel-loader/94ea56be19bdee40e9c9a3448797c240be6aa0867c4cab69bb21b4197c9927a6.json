{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nvar isJapanese = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf]/;\nvar isChinese = /(?:[\\u3300-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF\\uFE30-\\uFE4F]|[\\uD840-\\uD868\\uD86A-\\uD872][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]|\\uD87E[\\uDC00-\\uDE1F])/;\nvar isKorean = /[\\u3131-\\u314e\\u314f-\\u3163\\uac00-\\ud7a3]/;\nexport default {\n  methods: {\n    __onComposition: function __onComposition(e) {\n      if (e.type === 'compositionend' || e.type === 'change') {\n        if (e.target.composing !== true) {\n          return;\n        }\n        e.target.composing = false;\n        this.__onInput(e);\n      } else if (e.type === 'compositionupdate') {\n        if (typeof e.data === 'string' && isJapanese.test(e.data) === false && isChinese.test(e.data) === false && isKorean.test(e.data) === false) {\n          e.target.composing = false;\n        }\n      } else {\n        e.target.composing = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["isJapanese","isChinese","isKorean","methods","__onComposition","e","type","target","composing","__onInput","data","test"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/mixins/composition.js"],"sourcesContent":["const isJapanese = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf]/\nconst isChinese = /[\\u4e00-\\u9fff\\u3400-\\u4dbf\\u{20000}-\\u{2a6df}\\u{2a700}-\\u{2b73f}\\u{2b740}-\\u{2b81f}\\u{2b820}-\\u{2ceaf}\\uf900-\\ufaff\\u3300-\\u33ff\\ufe30-\\ufe4f\\uf900-\\ufaff\\u{2f800}-\\u{2fa1f}]/u\nconst isKorean = /[\\u3131-\\u314e\\u314f-\\u3163\\uac00-\\ud7a3]/\n\nexport default {\n  methods: {\n    __onComposition (e) {\n      if (e.type === 'compositionend' || e.type === 'change') {\n        if (e.target.composing !== true) { return }\n        e.target.composing = false\n        this.__onInput(e)\n      }\n      else if (e.type === 'compositionupdate') {\n        if (\n          typeof e.data === 'string' &&\n          isJapanese.test(e.data) === false &&\n          isChinese.test(e.data) === false &&\n          isKorean.test(e.data) === false\n        ) {\n          e.target.composing = false\n        }\n      }\n      else {\n        e.target.composing = true\n      }\n    }\n  }\n}\n"],"mappings":";;AAAA,IAAMA,UAAU,GAAG,kFAAkF;AACrG,IAAMC,SAAS,GAAG,uLAAkL;AACpM,IAAMC,QAAQ,GAAG,2CAA2C;AAE5D,eAAe;EACbC,OAAO,EAAE;IACPC,eAAe,WAAAA,gBAAEC,CAAC,EAAE;MAClB,IAAIA,CAAC,CAACC,IAAI,KAAK,gBAAgB,IAAID,CAAC,CAACC,IAAI,KAAK,QAAQ,EAAE;QACtD,IAAID,CAAC,CAACE,MAAM,CAACC,SAAS,KAAK,IAAI,EAAE;UAAE;QAAO;QAC1CH,CAAC,CAACE,MAAM,CAACC,SAAS,GAAG,KAAK;QAC1B,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC;MACnB,CAAC,MACI,IAAIA,CAAC,CAACC,IAAI,KAAK,mBAAmB,EAAE;QACvC,IACE,OAAOD,CAAC,CAACK,IAAI,KAAK,QAAQ,IAC1BV,UAAU,CAACW,IAAI,CAACN,CAAC,CAACK,IAAI,CAAC,KAAK,KAAK,IACjCT,SAAS,CAACU,IAAI,CAACN,CAAC,CAACK,IAAI,CAAC,KAAK,KAAK,IAChCR,QAAQ,CAACS,IAAI,CAACN,CAAC,CAACK,IAAI,CAAC,KAAK,KAAK,EAC/B;UACAL,CAAC,CAACE,MAAM,CAACC,SAAS,GAAG,KAAK;QAC5B;MACF,CAAC,MACI;QACHH,CAAC,CAACE,MAAM,CAACC,SAAS,GAAG,IAAI;MAC3B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}