{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.concat.js\";\nfunction getFn(prop) {\n  return typeof prop === 'function' ? prop : function () {\n    return prop;\n  };\n}\nexport default {\n  props: {\n    url: [Function, String],\n    method: {\n      type: [Function, String],\n      \"default\": 'POST'\n    },\n    fieldName: {\n      type: [Function, String],\n      \"default\": function _default(file) {\n        return file.name;\n      }\n    },\n    headers: [Function, Array],\n    formFields: [Function, Array],\n    withCredentials: [Function, Boolean],\n    sendRaw: [Function, Boolean],\n    batch: [Function, Boolean],\n    factory: Function\n  },\n  data: function data() {\n    return {\n      xhrs: [],\n      promises: [],\n      workingThreads: 0\n    };\n  },\n  computed: {\n    xhrProps: function xhrProps() {\n      return {\n        url: getFn(this.url),\n        method: getFn(this.method),\n        headers: getFn(this.headers),\n        formFields: getFn(this.formFields),\n        fieldName: getFn(this.fieldName),\n        withCredentials: getFn(this.withCredentials),\n        sendRaw: getFn(this.sendRaw),\n        batch: getFn(this.batch)\n      };\n    },\n    isUploading: function isUploading() {\n      return this.workingThreads > 0;\n    },\n    isBusy: function isBusy() {\n      return this.promises.length > 0;\n    }\n  },\n  methods: {\n    abort: function abort() {\n      this.xhrs.forEach(function (x) {\n        x.abort();\n      });\n      if (this.promises.length > 0) {\n        this.abortPromises = true;\n      }\n    },\n    upload: function upload() {\n      var _this = this;\n      if (this.canUpload === false) {\n        return;\n      }\n      var queue = this.queuedFiles.slice(0);\n      this.queuedFiles = [];\n      if (this.xhrProps.batch(queue)) {\n        this.__runFactory(queue);\n      } else {\n        queue.forEach(function (file) {\n          _this.__runFactory([file]);\n        });\n      }\n    },\n    __runFactory: function __runFactory(files) {\n      var _this2 = this;\n      this.workingThreads++;\n      if (typeof this.factory !== 'function') {\n        this.__uploadFiles(files, {});\n        return;\n      }\n      var res = this.factory(files);\n      if (!res) {\n        this.$emit('factory-failed', new Error('QUploader: factory() does not return properly'), files);\n        this.workingThreads--;\n      } else if (typeof res[\"catch\"] === 'function' && typeof res.then === 'function') {\n        this.promises.push(res);\n        var failed = function failed(err) {\n          if (_this2._isBeingDestroyed !== true && _this2._isDestroyed !== true) {\n            _this2.promises = _this2.promises.filter(function (p) {\n              return p !== res;\n            });\n            if (_this2.promises.length === 0) {\n              _this2.abortPromises = false;\n            }\n            _this2.queuedFiles = _this2.queuedFiles.concat(files);\n            files.forEach(function (f) {\n              _this2.__updateFile(f, 'failed');\n            });\n            _this2.$emit('factory-failed', err, files);\n            _this2.workingThreads--;\n          }\n        };\n        res.then(function (factory) {\n          if (_this2.abortPromises === true) {\n            failed(new Error('Aborted'));\n          } else if (_this2._isBeingDestroyed !== true && _this2._isDestroyed !== true) {\n            _this2.promises = _this2.promises.filter(function (p) {\n              return p !== res;\n            });\n            _this2.__uploadFiles(files, factory);\n          }\n        })[\"catch\"](failed);\n      } else {\n        this.__uploadFiles(files, res || {});\n      }\n    },\n    __uploadFiles: function __uploadFiles(files, factory) {\n      var _this3 = this;\n      var form = new FormData(),\n        xhr = new XMLHttpRequest();\n      var getProp = function getProp(name, arg) {\n        return factory[name] !== void 0 ? getFn(factory[name])(arg) : _this3.xhrProps[name](arg);\n      };\n      var url = getProp('url', files);\n      if (!url) {\n        console.error('q-uploader: invalid or no URL specified');\n        this.workingThreads--;\n        return;\n      }\n      var fields = getProp('formFields', files);\n      fields !== void 0 && fields.forEach(function (field) {\n        form.append(field.name, field.value);\n      });\n      var uploadIndex = 0,\n        uploadIndexSize = 0,\n        uploadedSize = 0,\n        maxUploadSize = 0,\n        aborted;\n      xhr.upload.addEventListener('progress', function (e) {\n        if (aborted === true) {\n          return;\n        }\n        var loaded = Math.min(maxUploadSize, e.loaded);\n        _this3.uploadedSize += loaded - uploadedSize;\n        uploadedSize = loaded;\n        var size = uploadedSize - uploadIndexSize;\n        for (var i = uploadIndex; size > 0 && i < files.length; i++) {\n          var file = files[i],\n            uploaded = size > file.size;\n          if (uploaded) {\n            size -= file.size;\n            uploadIndex++;\n            uploadIndexSize += file.size;\n            _this3.__updateFile(file, 'uploading', file.size);\n          } else {\n            _this3.__updateFile(file, 'uploading', size);\n            return;\n          }\n        }\n      }, false);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState < 4) {\n          return;\n        }\n        if (xhr.status && xhr.status < 400) {\n          _this3.uploadedFiles = _this3.uploadedFiles.concat(files);\n          files.forEach(function (f) {\n            _this3.__updateFile(f, 'uploaded');\n          });\n          _this3.$emit('uploaded', {\n            files: files,\n            xhr: xhr\n          });\n        } else {\n          aborted = true;\n          _this3.uploadedSize -= uploadedSize;\n          _this3.queuedFiles = _this3.queuedFiles.concat(files);\n          files.forEach(function (f) {\n            _this3.__updateFile(f, 'failed');\n          });\n          _this3.$emit('failed', {\n            files: files,\n            xhr: xhr\n          });\n        }\n        _this3.workingThreads--;\n        _this3.xhrs = _this3.xhrs.filter(function (x) {\n          return x !== xhr;\n        });\n      };\n      xhr.open(getProp('method', files), url);\n      if (getProp('withCredentials', files) === true) {\n        xhr.withCredentials = true;\n      }\n      var headers = getProp('headers', files);\n      headers !== void 0 && headers.forEach(function (head) {\n        xhr.setRequestHeader(head.name, head.value);\n      });\n      var sendRaw = getProp('sendRaw', files);\n      files.forEach(function (file) {\n        _this3.__updateFile(file, 'uploading', 0);\n        if (sendRaw !== true) {\n          form.append(getProp('fieldName', file), file, file.name);\n        }\n        file.xhr = xhr;\n        file.__abort = function () {\n          xhr.abort();\n        };\n        maxUploadSize += file.size;\n      });\n      this.$emit('uploading', {\n        files: files,\n        xhr: xhr\n      });\n      this.xhrs.push(xhr);\n      if (sendRaw === true) {\n        xhr.send(new Blob(files));\n      } else {\n        xhr.send(form);\n      }\n    }\n  }\n};","map":{"version":3,"names":["getFn","prop","props","url","Function","String","method","type","fieldName","_default","file","name","headers","Array","formFields","withCredentials","Boolean","sendRaw","batch","factory","data","xhrs","promises","workingThreads","computed","xhrProps","isUploading","isBusy","length","methods","abort","forEach","x","abortPromises","upload","_this","canUpload","queue","queuedFiles","slice","__runFactory","files","_this2","__uploadFiles","res","$emit","Error","then","push","failed","err","_isBeingDestroyed","_isDestroyed","filter","p","concat","f","__updateFile","_this3","form","FormData","xhr","XMLHttpRequest","getProp","arg","console","error","fields","field","append","value","uploadIndex","uploadIndexSize","uploadedSize","maxUploadSize","aborted","addEventListener","e","loaded","Math","min","size","i","uploaded","onreadystatechange","readyState","status","uploadedFiles","open","head","setRequestHeader","__abort","send","Blob"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/components/uploader/uploader-xhr-mixin.js"],"sourcesContent":["function getFn (prop) {\n  return typeof prop === 'function'\n    ? prop\n    : () => prop\n}\n\nexport default {\n  props: {\n    url: [ Function, String ],\n    method: {\n      type: [ Function, String ],\n      default: 'POST'\n    },\n    fieldName: {\n      type: [ Function, String ],\n      default: file => file.name\n    },\n    headers: [ Function, Array ],\n    formFields: [ Function, Array ],\n    withCredentials: [ Function, Boolean ],\n    sendRaw: [ Function, Boolean ],\n\n    batch: [ Function, Boolean ],\n    factory: Function\n  },\n\n  data () {\n    return {\n      xhrs: [],\n      promises: [],\n      workingThreads: 0\n    }\n  },\n\n  computed: {\n    xhrProps () {\n      return {\n        url: getFn(this.url),\n        method: getFn(this.method),\n        headers: getFn(this.headers),\n        formFields: getFn(this.formFields),\n        fieldName: getFn(this.fieldName),\n        withCredentials: getFn(this.withCredentials),\n        sendRaw: getFn(this.sendRaw),\n        batch: getFn(this.batch)\n      }\n    },\n\n    isUploading () {\n      return this.workingThreads > 0\n    },\n\n    isBusy () {\n      return this.promises.length > 0\n    }\n  },\n\n  methods: {\n    abort () {\n      this.xhrs.forEach(x => { x.abort() })\n\n      if (this.promises.length > 0) {\n        this.abortPromises = true\n      }\n    },\n\n    upload () {\n      if (this.canUpload === false) {\n        return\n      }\n\n      const queue = this.queuedFiles.slice(0)\n      this.queuedFiles = []\n\n      if (this.xhrProps.batch(queue)) {\n        this.__runFactory(queue)\n      }\n      else {\n        queue.forEach(file => {\n          this.__runFactory([ file ])\n        })\n      }\n    },\n\n    __runFactory (files) {\n      this.workingThreads++\n\n      if (typeof this.factory !== 'function') {\n        this.__uploadFiles(files, {})\n        return\n      }\n\n      const res = this.factory(files)\n\n      if (!res) {\n        this.$emit(\n          'factory-failed',\n          new Error('QUploader: factory() does not return properly'),\n          files\n        )\n        this.workingThreads--\n      }\n      else if (typeof res.catch === 'function' && typeof res.then === 'function') {\n        this.promises.push(res)\n\n        const failed = err => {\n          if (this._isBeingDestroyed !== true && this._isDestroyed !== true) {\n            this.promises = this.promises.filter(p => p !== res)\n\n            if (this.promises.length === 0) {\n              this.abortPromises = false\n            }\n\n            this.queuedFiles = this.queuedFiles.concat(files)\n            files.forEach(f => { this.__updateFile(f, 'failed') })\n\n            this.$emit('factory-failed', err, files)\n            this.workingThreads--\n          }\n        }\n\n        res.then(factory => {\n          if (this.abortPromises === true) {\n            failed(new Error('Aborted'))\n          }\n          else if (this._isBeingDestroyed !== true && this._isDestroyed !== true) {\n            this.promises = this.promises.filter(p => p !== res)\n            this.__uploadFiles(files, factory)\n          }\n        }).catch(failed)\n      }\n      else {\n        this.__uploadFiles(files, res || {})\n      }\n    },\n\n    __uploadFiles (files, factory) {\n      const\n        form = new FormData(),\n        xhr = new XMLHttpRequest()\n\n      const getProp = (name, arg) => {\n        return factory[name] !== void 0\n          ? getFn(factory[name])(arg)\n          : this.xhrProps[name](arg)\n      }\n\n      const url = getProp('url', files)\n\n      if (!url) {\n        console.error('q-uploader: invalid or no URL specified')\n        this.workingThreads--\n        return\n      }\n\n      const fields = getProp('formFields', files)\n      fields !== void 0 && fields.forEach(field => {\n        form.append(field.name, field.value)\n      })\n\n      let\n        uploadIndex = 0,\n        uploadIndexSize = 0,\n        uploadedSize = 0,\n        maxUploadSize = 0,\n        aborted\n\n      xhr.upload.addEventListener('progress', e => {\n        if (aborted === true) { return }\n\n        const loaded = Math.min(maxUploadSize, e.loaded)\n\n        this.uploadedSize += loaded - uploadedSize\n        uploadedSize = loaded\n\n        let size = uploadedSize - uploadIndexSize\n        for (let i = uploadIndex; size > 0 && i < files.length; i++) {\n          const\n            file = files[i],\n            uploaded = size > file.size\n\n          if (uploaded) {\n            size -= file.size\n            uploadIndex++\n            uploadIndexSize += file.size\n            this.__updateFile(file, 'uploading', file.size)\n          }\n          else {\n            this.__updateFile(file, 'uploading', size)\n            return\n          }\n        }\n      }, false)\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState < 4) {\n          return\n        }\n\n        if (xhr.status && xhr.status < 400) {\n          this.uploadedFiles = this.uploadedFiles.concat(files)\n          files.forEach(f => { this.__updateFile(f, 'uploaded') })\n          this.$emit('uploaded', { files, xhr })\n        }\n        else {\n          aborted = true\n          this.uploadedSize -= uploadedSize\n          this.queuedFiles = this.queuedFiles.concat(files)\n          files.forEach(f => { this.__updateFile(f, 'failed') })\n          this.$emit('failed', { files, xhr })\n        }\n\n        this.workingThreads--\n        this.xhrs = this.xhrs.filter(x => x !== xhr)\n      }\n\n      xhr.open(\n        getProp('method', files),\n        url\n      )\n\n      if (getProp('withCredentials', files) === true) {\n        xhr.withCredentials = true\n      }\n\n      const headers = getProp('headers', files)\n      headers !== void 0 && headers.forEach(head => {\n        xhr.setRequestHeader(head.name, head.value)\n      })\n\n      const sendRaw = getProp('sendRaw', files)\n\n      files.forEach(file => {\n        this.__updateFile(file, 'uploading', 0)\n        if (sendRaw !== true) {\n          form.append(getProp('fieldName', file), file, file.name)\n        }\n        file.xhr = xhr\n        file.__abort = () => { xhr.abort() }\n        maxUploadSize += file.size\n      })\n\n      this.$emit('uploading', { files, xhr })\n      this.xhrs.push(xhr)\n\n      if (sendRaw === true) {\n        xhr.send(new Blob(files))\n      }\n      else {\n        xhr.send(form)\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}