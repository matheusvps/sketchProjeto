{"ast":null,"code":"import \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { closePortals } from '../mixins/portal.js';\nimport { isKeyCode } from '../utils/key-composition.js';\n\n/*\n * depth\n *   < 0  --> close all chain\n *   0    --> disabled\n *   > 0  --> close chain up to N parent\n */\n\nfunction getDepth(value) {\n  if (value === false) {\n    return 0;\n  }\n  if (value === true || value === void 0) {\n    return 1;\n  }\n  var depth = parseInt(value, 10);\n  return isNaN(depth) ? 0 : depth;\n}\nfunction destroy(el) {\n  var ctx = el.__qclosepopup;\n  if (ctx !== void 0) {\n    el.removeEventListener('click', ctx.handler);\n    el.removeEventListener('keyup', ctx.handlerKey);\n    delete el.__qclosepopup;\n  }\n}\nexport default {\n  name: 'close-popup',\n  bind: function bind(el, _ref, vnode) {\n    var value = _ref.value;\n    if (el.__qclosepopup !== void 0) {\n      destroy(el);\n      el.__qclosepopup_destroyed = true;\n    }\n    var ctx = {\n      depth: getDepth(value),\n      handler: function handler(evt) {\n        // allow @click to be emitted\n        ctx.depth !== 0 && setTimeout(function () {\n          closePortals(vnode.componentInstance || vnode.context, evt, ctx.depth);\n        });\n      },\n      handlerKey: function handlerKey(evt) {\n        isKeyCode(evt, 13) === true && ctx.handler(evt);\n      }\n    };\n    el.__qclosepopup = ctx;\n    el.addEventListener('click', ctx.handler);\n    el.addEventListener('keyup', ctx.handlerKey);\n  },\n  update: function update(el, _ref2) {\n    var value = _ref2.value,\n      oldValue = _ref2.oldValue;\n    if (el.__qclosepopup !== void 0 && value !== oldValue) {\n      el.__qclosepopup.depth = getDepth(value);\n    }\n  },\n  unbind: function unbind(el) {\n    if (el.__qclosepopup_destroyed === void 0) {\n      destroy(el);\n    } else {\n      delete el.__qclosepopup_destroyed;\n    }\n  }\n};","map":{"version":3,"names":["closePortals","isKeyCode","getDepth","value","depth","parseInt","isNaN","destroy","el","ctx","__qclosepopup","removeEventListener","handler","handlerKey","name","bind","_ref","vnode","__qclosepopup_destroyed","evt","setTimeout","componentInstance","context","addEventListener","update","_ref2","oldValue","unbind"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/directives/ClosePopup.js"],"sourcesContent":["import { closePortals } from '../mixins/portal.js'\nimport { isKeyCode } from '../utils/key-composition.js'\n\n/*\n * depth\n *   < 0  --> close all chain\n *   0    --> disabled\n *   > 0  --> close chain up to N parent\n */\n\nfunction getDepth (value) {\n  if (value === false) {\n    return 0\n  }\n  if (value === true || value === void 0) {\n    return 1\n  }\n\n  const depth = parseInt(value, 10)\n  return isNaN(depth) ? 0 : depth\n}\n\nfunction destroy (el) {\n  const ctx = el.__qclosepopup\n  if (ctx !== void 0) {\n    el.removeEventListener('click', ctx.handler)\n    el.removeEventListener('keyup', ctx.handlerKey)\n    delete el.__qclosepopup\n  }\n}\n\nexport default {\n  name: 'close-popup',\n\n  bind (el, { value }, vnode) {\n    if (el.__qclosepopup !== void 0) {\n      destroy(el)\n      el.__qclosepopup_destroyed = true\n    }\n\n    const ctx = {\n      depth: getDepth(value),\n\n      handler (evt) {\n        // allow @click to be emitted\n        ctx.depth !== 0 && setTimeout(() => {\n          closePortals(vnode.componentInstance || vnode.context, evt, ctx.depth)\n        })\n      },\n\n      handlerKey (evt) {\n        isKeyCode(evt, 13) === true && ctx.handler(evt)\n      }\n    }\n\n    el.__qclosepopup = ctx\n\n    el.addEventListener('click', ctx.handler)\n    el.addEventListener('keyup', ctx.handlerKey)\n  },\n\n  update (el, { value, oldValue }) {\n    if (el.__qclosepopup !== void 0 && value !== oldValue) {\n      el.__qclosepopup.depth = getDepth(value)\n    }\n  },\n\n  unbind (el) {\n    if (el.__qclosepopup_destroyed === void 0) {\n      destroy(el)\n    }\n    else {\n      delete el.__qclosepopup_destroyed\n    }\n  }\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,6BAA6B;;AAEvD;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAQA,CAAEC,KAAK,EAAE;EACxB,IAAIA,KAAK,KAAK,KAAK,EAAE;IACnB,OAAO,CAAC;EACV;EACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACtC,OAAO,CAAC;EACV;EAEA,IAAMC,KAAK,GAAGC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;EACjC,OAAOG,KAAK,CAACF,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK;AACjC;AAEA,SAASG,OAAOA,CAAEC,EAAE,EAAE;EACpB,IAAMC,GAAG,GAAGD,EAAE,CAACE,aAAa;EAC5B,IAAID,GAAG,KAAK,KAAK,CAAC,EAAE;IAClBD,EAAE,CAACG,mBAAmB,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;IAC5CJ,EAAE,CAACG,mBAAmB,CAAC,OAAO,EAAEF,GAAG,CAACI,UAAU,CAAC;IAC/C,OAAOL,EAAE,CAACE,aAAa;EACzB;AACF;AAEA,eAAe;EACbI,IAAI,EAAE,aAAa;EAEnBC,IAAI,WAAAA,KAAEP,EAAE,EAAAQ,IAAA,EAAaC,KAAK,EAAE;IAAA,IAAhBd,KAAK,GAAAa,IAAA,CAALb,KAAK;IACf,IAAIK,EAAE,CAACE,aAAa,KAAK,KAAK,CAAC,EAAE;MAC/BH,OAAO,CAACC,EAAE,CAAC;MACXA,EAAE,CAACU,uBAAuB,GAAG,IAAI;IACnC;IAEA,IAAMT,GAAG,GAAG;MACVL,KAAK,EAAEF,QAAQ,CAACC,KAAK,CAAC;MAEtBS,OAAO,WAAAA,QAAEO,GAAG,EAAE;QACZ;QACAV,GAAG,CAACL,KAAK,KAAK,CAAC,IAAIgB,UAAU,CAAC,YAAM;UAClCpB,YAAY,CAACiB,KAAK,CAACI,iBAAiB,IAAIJ,KAAK,CAACK,OAAO,EAAEH,GAAG,EAAEV,GAAG,CAACL,KAAK,CAAC;QACxE,CAAC,CAAC;MACJ,CAAC;MAEDS,UAAU,WAAAA,WAAEM,GAAG,EAAE;QACflB,SAAS,CAACkB,GAAG,EAAE,EAAE,CAAC,KAAK,IAAI,IAAIV,GAAG,CAACG,OAAO,CAACO,GAAG,CAAC;MACjD;IACF,CAAC;IAEDX,EAAE,CAACE,aAAa,GAAGD,GAAG;IAEtBD,EAAE,CAACe,gBAAgB,CAAC,OAAO,EAAEd,GAAG,CAACG,OAAO,CAAC;IACzCJ,EAAE,CAACe,gBAAgB,CAAC,OAAO,EAAEd,GAAG,CAACI,UAAU,CAAC;EAC9C,CAAC;EAEDW,MAAM,WAAAA,OAAEhB,EAAE,EAAAiB,KAAA,EAAuB;IAAA,IAAnBtB,KAAK,GAAAsB,KAAA,CAALtB,KAAK;MAAEuB,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IAC3B,IAAIlB,EAAE,CAACE,aAAa,KAAK,KAAK,CAAC,IAAIP,KAAK,KAAKuB,QAAQ,EAAE;MACrDlB,EAAE,CAACE,aAAa,CAACN,KAAK,GAAGF,QAAQ,CAACC,KAAK,CAAC;IAC1C;EACF,CAAC;EAEDwB,MAAM,WAAAA,OAAEnB,EAAE,EAAE;IACV,IAAIA,EAAE,CAACU,uBAAuB,KAAK,KAAK,CAAC,EAAE;MACzCX,OAAO,CAACC,EAAE,CAAC;IACb,CAAC,MACI;MACH,OAAOA,EAAE,CAACU,uBAAuB;IACnC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}