{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport Platform, { isSSR } from './Platform.js';\nimport { noop } from '../utils/event.js';\nimport { getBrand } from '../utils/colors.js';\nvar metaValue;\nfunction getProp() {\n  if (Platform.is.winphone) {\n    return 'msapplication-navbutton-color';\n  }\n  if (Platform.is.safari) {\n    return 'apple-mobile-web-app-status-bar-style';\n  }\n  // Chrome, Firefox OS, Opera, Vivaldi\n  return 'theme-color';\n}\nfunction getMetaTag(v) {\n  var els = document.getElementsByTagName('META');\n  for (var i in els) {\n    if (els[i].name === v) {\n      return els[i];\n    }\n  }\n}\nfunction setColor(hexColor) {\n  if (metaValue === void 0) {\n    // cache it\n    metaValue = getProp();\n  }\n  var metaTag = getMetaTag(metaValue);\n  var newTag = metaTag === void 0;\n  if (newTag) {\n    metaTag = document.createElement('meta');\n    metaTag.setAttribute('name', metaValue);\n  }\n  metaTag.setAttribute('content', hexColor);\n  if (newTag) {\n    document.head.appendChild(metaTag);\n  }\n}\nexport default {\n  install: function install(_ref) {\n    var $q = _ref.$q,\n      cfg = _ref.cfg;\n    this.set = isSSR === false && Platform.is.mobile === true && (Platform.is.nativeMobile === true || Platform.is.winphone === true || Platform.is.safari === true || Platform.is.webkit === true || Platform.is.vivaldi === true) ? function (hexColor) {\n      var val = hexColor || getBrand('primary');\n      if (Platform.is.nativeMobile === true && window.StatusBar) {\n        window.StatusBar.backgroundColorByHexString(val);\n      } else {\n        setColor(val);\n      }\n    } : noop;\n    $q.addressbarColor = this;\n    cfg.addressbarColor && this.set(cfg.addressbarColor);\n  }\n};","map":{"version":3,"names":["Platform","isSSR","noop","getBrand","metaValue","getProp","is","winphone","safari","getMetaTag","v","els","document","getElementsByTagName","i","name","setColor","hexColor","metaTag","newTag","createElement","setAttribute","head","appendChild","install","_ref","$q","cfg","set","mobile","nativeMobile","webkit","vivaldi","val","window","StatusBar","backgroundColorByHexString","addressbarColor"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/plugins/AddressbarColor.js"],"sourcesContent":["import Platform, { isSSR } from './Platform.js'\nimport { noop } from '../utils/event.js'\nimport { getBrand } from '../utils/colors.js'\n\nlet metaValue\n\nfunction getProp () {\n  if (Platform.is.winphone) {\n    return 'msapplication-navbutton-color'\n  }\n  if (Platform.is.safari) {\n    return 'apple-mobile-web-app-status-bar-style'\n  }\n  // Chrome, Firefox OS, Opera, Vivaldi\n  return 'theme-color'\n}\n\nfunction getMetaTag (v) {\n  const els = document.getElementsByTagName('META')\n  for (const i in els) {\n    if (els[i].name === v) {\n      return els[i]\n    }\n  }\n}\n\nfunction setColor (hexColor) {\n  if (metaValue === void 0) {\n    // cache it\n    metaValue = getProp()\n  }\n\n  let metaTag = getMetaTag(metaValue)\n  const newTag = metaTag === void 0\n\n  if (newTag) {\n    metaTag = document.createElement('meta')\n    metaTag.setAttribute('name', metaValue)\n  }\n\n  metaTag.setAttribute('content', hexColor)\n\n  if (newTag) {\n    document.head.appendChild(metaTag)\n  }\n}\n\nexport default {\n  install ({ $q, cfg }) {\n    this.set = isSSR === false && Platform.is.mobile === true && (\n      Platform.is.nativeMobile === true ||\n      Platform.is.winphone === true || Platform.is.safari === true ||\n      Platform.is.webkit === true || Platform.is.vivaldi === true\n    )\n      ? hexColor => {\n        const val = hexColor || getBrand('primary')\n\n        if (Platform.is.nativeMobile === true && window.StatusBar) {\n          window.StatusBar.backgroundColorByHexString(val)\n        }\n        else {\n          setColor(val)\n        }\n      }\n      : noop\n\n    $q.addressbarColor = this\n\n    cfg.addressbarColor && this.set(cfg.addressbarColor)\n  }\n}\n"],"mappings":";AAAA,OAAOA,QAAQ,IAAIC,KAAK,QAAQ,eAAe;AAC/C,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,IAAIC,SAAS;AAEb,SAASC,OAAOA,CAAA,EAAI;EAClB,IAAIL,QAAQ,CAACM,EAAE,CAACC,QAAQ,EAAE;IACxB,OAAO,+BAA+B;EACxC;EACA,IAAIP,QAAQ,CAACM,EAAE,CAACE,MAAM,EAAE;IACtB,OAAO,uCAAuC;EAChD;EACA;EACA,OAAO,aAAa;AACtB;AAEA,SAASC,UAAUA,CAAEC,CAAC,EAAE;EACtB,IAAMC,GAAG,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC;EACjD,KAAK,IAAMC,CAAC,IAAIH,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACG,CAAC,CAAC,CAACC,IAAI,KAAKL,CAAC,EAAE;MACrB,OAAOC,GAAG,CAACG,CAAC,CAAC;IACf;EACF;AACF;AAEA,SAASE,QAAQA,CAAEC,QAAQ,EAAE;EAC3B,IAAIb,SAAS,KAAK,KAAK,CAAC,EAAE;IACxB;IACAA,SAAS,GAAGC,OAAO,EAAE;EACvB;EAEA,IAAIa,OAAO,GAAGT,UAAU,CAACL,SAAS,CAAC;EACnC,IAAMe,MAAM,GAAGD,OAAO,KAAK,KAAK,CAAC;EAEjC,IAAIC,MAAM,EAAE;IACVD,OAAO,GAAGN,QAAQ,CAACQ,aAAa,CAAC,MAAM,CAAC;IACxCF,OAAO,CAACG,YAAY,CAAC,MAAM,EAAEjB,SAAS,CAAC;EACzC;EAEAc,OAAO,CAACG,YAAY,CAAC,SAAS,EAAEJ,QAAQ,CAAC;EAEzC,IAAIE,MAAM,EAAE;IACVP,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACL,OAAO,CAAC;EACpC;AACF;AAEA,eAAe;EACbM,OAAO,WAAAA,QAAAC,IAAA,EAAe;IAAA,IAAXC,EAAE,GAAAD,IAAA,CAAFC,EAAE;MAAEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;IAChB,IAAI,CAACC,GAAG,GAAG3B,KAAK,KAAK,KAAK,IAAID,QAAQ,CAACM,EAAE,CAACuB,MAAM,KAAK,IAAI,KACvD7B,QAAQ,CAACM,EAAE,CAACwB,YAAY,KAAK,IAAI,IACjC9B,QAAQ,CAACM,EAAE,CAACC,QAAQ,KAAK,IAAI,IAAIP,QAAQ,CAACM,EAAE,CAACE,MAAM,KAAK,IAAI,IAC5DR,QAAQ,CAACM,EAAE,CAACyB,MAAM,KAAK,IAAI,IAAI/B,QAAQ,CAACM,EAAE,CAAC0B,OAAO,KAAK,IAAI,CAC5D,GACG,UAAAf,QAAQ,EAAI;MACZ,IAAMgB,GAAG,GAAGhB,QAAQ,IAAId,QAAQ,CAAC,SAAS,CAAC;MAE3C,IAAIH,QAAQ,CAACM,EAAE,CAACwB,YAAY,KAAK,IAAI,IAAII,MAAM,CAACC,SAAS,EAAE;QACzDD,MAAM,CAACC,SAAS,CAACC,0BAA0B,CAACH,GAAG,CAAC;MAClD,CAAC,MACI;QACHjB,QAAQ,CAACiB,GAAG,CAAC;MACf;IACF,CAAC,GACC/B,IAAI;IAERwB,EAAE,CAACW,eAAe,GAAG,IAAI;IAEzBV,GAAG,CAACU,eAAe,IAAI,IAAI,CAACT,GAAG,CAACD,GAAG,CAACU,eAAe,CAAC;EACtD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}