{"ast":null,"code":"import \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { version } from '../package.json';\nimport Platform, { isSSR } from './plugins/Platform.js';\nimport Screen from './plugins/Screen.js';\nimport Dark from './plugins/Dark.js';\nimport History from './history.js';\nimport Lang from './lang.js';\nimport Body from './body.js';\nimport IconSet from './icon-set.js';\nvar autoInstalled = [Platform, Screen, Dark];\nexport var queues = {\n  server: [],\n  // on SSR update\n  takeover: [] // on client takeover\n};\n\nexport var $q = {\n  version: version,\n  config: {}\n};\nexport default function (Vue) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (this.__qInstalled === true) {\n    return;\n  }\n  this.__qInstalled = true;\n  var cfg = $q.config = Object.freeze(opts.config || {});\n\n  // required plugins\n  Platform.install($q, queues);\n  Body.install(queues, cfg);\n  Dark.install($q, queues, cfg);\n  Screen.install($q, queues, cfg);\n  History.install(cfg);\n  Lang.install($q, queues, opts.lang);\n  IconSet.install($q, queues, opts.iconSet);\n  if (isSSR === true) {\n    Vue.mixin({\n      beforeCreate: function beforeCreate() {\n        this.$q = this.$root.$options.$q;\n      }\n    });\n  } else {\n    Vue.prototype.$q = $q;\n  }\n  opts.components && Object.keys(opts.components).forEach(function (key) {\n    var c = opts.components[key];\n    if (typeof c === 'function') {\n      Vue.component(c.options.name, c);\n    }\n  });\n  opts.directives && Object.keys(opts.directives).forEach(function (key) {\n    var d = opts.directives[key];\n    if (d.name !== undefined && d.unbind !== void 0) {\n      Vue.directive(d.name, d);\n    }\n  });\n  if (opts.plugins) {\n    var param = {\n      $q: $q,\n      queues: queues,\n      cfg: cfg\n    };\n    Object.keys(opts.plugins).forEach(function (key) {\n      var p = opts.plugins[key];\n      if (typeof p.install === 'function' && autoInstalled.includes(p) === false) {\n        p.install(param);\n      }\n    });\n  }\n}","map":{"version":3,"names":["version","Platform","isSSR","Screen","Dark","History","Lang","Body","IconSet","autoInstalled","queues","server","takeover","$q","config","Vue","opts","arguments","length","undefined","__qInstalled","cfg","Object","freeze","install","lang","iconSet","mixin","beforeCreate","$root","$options","prototype","components","keys","forEach","key","c","component","options","name","directives","d","unbind","directive","plugins","param","p","includes"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/install.js"],"sourcesContent":["import { version } from '../package.json'\nimport Platform, { isSSR } from './plugins/Platform.js'\nimport Screen from './plugins/Screen.js'\nimport Dark from './plugins/Dark.js'\nimport History from './history.js'\nimport Lang from './lang.js'\nimport Body from './body.js'\nimport IconSet from './icon-set.js'\n\nconst autoInstalled = [\n  Platform, Screen, Dark\n]\n\nexport const queues = {\n  server: [], // on SSR update\n  takeover: [] // on client takeover\n}\n\nexport const $q = {\n  version,\n  config: {}\n}\n\nexport default function (Vue, opts = {}) {\n  if (this.__qInstalled === true) { return }\n  this.__qInstalled = true\n\n  const cfg = $q.config = Object.freeze(opts.config || {})\n\n  // required plugins\n  Platform.install($q, queues)\n  Body.install(queues, cfg)\n  Dark.install($q, queues, cfg)\n  Screen.install($q, queues, cfg)\n  History.install(cfg)\n  Lang.install($q, queues, opts.lang)\n  IconSet.install($q, queues, opts.iconSet)\n\n  if (isSSR === true) {\n    Vue.mixin({\n      beforeCreate () {\n        this.$q = this.$root.$options.$q\n      }\n    })\n  }\n  else {\n    Vue.prototype.$q = $q\n  }\n\n  opts.components && Object.keys(opts.components).forEach(key => {\n    const c = opts.components[key]\n    if (typeof c === 'function') {\n      Vue.component(c.options.name, c)\n    }\n  })\n\n  opts.directives && Object.keys(opts.directives).forEach(key => {\n    const d = opts.directives[key]\n    if (d.name !== undefined && d.unbind !== void 0) {\n      Vue.directive(d.name, d)\n    }\n  })\n\n  if (opts.plugins) {\n    const param = { $q, queues, cfg }\n    Object.keys(opts.plugins).forEach(key => {\n      const p = opts.plugins[key]\n      if (typeof p.install === 'function' && autoInstalled.includes(p) === false) {\n        p.install(param)\n      }\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}