{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport ListenersMixin from '../../mixins/listeners.js';\nimport SizeMixin from '../../mixins/size.js';\nimport { mergeSlotSafely } from '../../utils/slot.js';\nimport { between } from '../../utils/format.js';\nvar radius = 50,\n  diameter = 2 * radius,\n  circumference = diameter * Math.PI,\n  strokeDashArray = Math.round(circumference * 1000) / 1000;\nexport default Vue.extend({\n  name: 'QCircularProgress',\n  mixins: [ListenersMixin, SizeMixin],\n  props: {\n    value: {\n      type: Number,\n      \"default\": 0\n    },\n    min: {\n      type: Number,\n      \"default\": 0\n    },\n    max: {\n      type: Number,\n      \"default\": 100\n    },\n    color: String,\n    centerColor: String,\n    trackColor: String,\n    fontSize: String,\n    // ratio\n    thickness: {\n      type: Number,\n      \"default\": 0.2,\n      validator: function validator(v) {\n        return v >= 0 && v <= 1;\n      }\n    },\n    angle: {\n      type: Number,\n      \"default\": 0\n    },\n    indeterminate: Boolean,\n    showValue: Boolean,\n    reverse: Boolean,\n    instantFeedback: Boolean\n  },\n  computed: {\n    normalizedValue: function normalizedValue() {\n      return between(this.value, this.min, this.max);\n    },\n    svgStyle: function svgStyle() {\n      var angle = this.$q.lang.rtl === true ? -this.angle : this.angle;\n      return {\n        transform: this.reverse !== (this.$q.lang.rtl === true) ? \"scale3d(-1, 1, 1) rotate3d(0, 0, 1, \".concat(-90 - angle, \"deg)\") : \"rotate3d(0, 0, 1, \".concat(angle - 90, \"deg)\")\n      };\n    },\n    circleStyle: function circleStyle() {\n      if (this.instantFeedback !== true && this.indeterminate !== true) {\n        return {\n          transition: 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'\n        };\n      }\n    },\n    viewBox: function viewBox() {\n      return diameter / (1 - this.thickness / 2);\n    },\n    viewBoxAttr: function viewBoxAttr() {\n      return \"\".concat(this.viewBox / 2, \" \").concat(this.viewBox / 2, \" \").concat(this.viewBox, \" \").concat(this.viewBox);\n    },\n    strokeDashOffset: function strokeDashOffset() {\n      var progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min);\n      return progress * circumference;\n    },\n    strokeWidth: function strokeWidth() {\n      return this.thickness / 2 * this.viewBox;\n    },\n    attrs: function attrs() {\n      return {\n        role: 'progressbar',\n        'aria-valuemin': this.min,\n        'aria-valuemax': this.max,\n        'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n      };\n    }\n  },\n  methods: {\n    __getCircle: function __getCircle(h, _ref) {\n      var thickness = _ref.thickness,\n        offset = _ref.offset,\n        color = _ref.color,\n        cls = _ref.cls;\n      return h('circle', {\n        staticClass: 'q-circular-progress__' + cls,\n        \"class\": color !== void 0 ? \"text-\".concat(color) : null,\n        style: this.circleStyle,\n        attrs: {\n          fill: 'transparent',\n          stroke: 'currentColor',\n          'stroke-width': thickness,\n          'stroke-dasharray': strokeDashArray,\n          'stroke-dashoffset': offset,\n          cx: this.viewBox,\n          cy: this.viewBox,\n          r: radius\n        }\n      });\n    }\n  },\n  render: function render(h) {\n    var svgChild = [];\n    this.centerColor !== void 0 && this.centerColor !== 'transparent' && svgChild.push(h('circle', {\n      staticClass: 'q-circular-progress__center',\n      \"class\": \"text-\".concat(this.centerColor),\n      attrs: {\n        fill: 'currentColor',\n        r: radius - this.strokeWidth / 2,\n        cx: this.viewBox,\n        cy: this.viewBox\n      }\n    }));\n    this.trackColor !== void 0 && this.trackColor !== 'transparent' && svgChild.push(this.__getCircle(h, {\n      cls: 'track',\n      thickness: this.strokeWidth,\n      offset: 0,\n      color: this.trackColor\n    }));\n    svgChild.push(this.__getCircle(h, {\n      cls: 'circle',\n      thickness: this.strokeWidth,\n      offset: this.strokeDashOffset,\n      color: this.color\n    }));\n    var child = [h('svg', {\n      staticClass: 'q-circular-progress__svg',\n      style: this.svgStyle,\n      attrs: {\n        focusable: 'false' /* needed for IE11 */,\n        viewBox: this.viewBoxAttr,\n        'aria-hidden': 'true'\n      }\n    }, svgChild)];\n    this.showValue === true && child.push(h('div', {\n      staticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\n      style: {\n        fontSize: this.fontSize\n      }\n    }, this.$scopedSlots[\"default\"] !== void 0 ? this.$scopedSlots[\"default\"]() : [h('div', [this.normalizedValue])]));\n    return h('div', {\n      staticClass: 'q-circular-progress',\n      \"class\": \"q-circular-progress--\".concat(this.indeterminate === true ? 'in' : '', \"determinate\"),\n      style: this.sizeStyle,\n      on: _objectSpread({}, this.qListeners),\n      attrs: this.attrs\n    }, mergeSlotSafely(child, this, 'internal'));\n  }\n});","map":{"version":3,"names":["Vue","ListenersMixin","SizeMixin","mergeSlotSafely","between","radius","diameter","circumference","Math","PI","strokeDashArray","round","extend","name","mixins","props","value","type","Number","min","max","color","String","centerColor","trackColor","fontSize","thickness","validator","v","angle","indeterminate","Boolean","showValue","reverse","instantFeedback","computed","normalizedValue","svgStyle","$q","lang","rtl","transform","concat","circleStyle","transition","viewBox","viewBoxAttr","strokeDashOffset","progress","strokeWidth","attrs","role","methods","__getCircle","h","_ref","offset","cls","staticClass","style","fill","stroke","cx","cy","r","render","svgChild","push","child","focusable","$scopedSlots","sizeStyle","on","_objectSpread","qListeners"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/components/circular-progress/QCircularProgress.js"],"sourcesContent":["import Vue from 'vue'\n\nimport ListenersMixin from '../../mixins/listeners.js'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\nimport { between } from '../../utils/format.js'\n\nconst\n  radius = 50,\n  diameter = 2 * radius,\n  circumference = diameter * Math.PI,\n  strokeDashArray = Math.round(circumference * 1000) / 1000\n\nexport default Vue.extend({\n  name: 'QCircularProgress',\n\n  mixins: [ ListenersMixin, SizeMixin ],\n\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n\n    color: String,\n    centerColor: String,\n    trackColor: String,\n\n    fontSize: String,\n\n    // ratio\n    thickness: {\n      type: Number,\n      default: 0.2,\n      validator: v => v >= 0 && v <= 1\n    },\n\n    angle: {\n      type: Number,\n      default: 0\n    },\n\n    indeterminate: Boolean,\n    showValue: Boolean,\n    reverse: Boolean,\n\n    instantFeedback: Boolean\n  },\n\n  computed: {\n    normalizedValue () {\n      return between(this.value, this.min, this.max)\n    },\n\n    svgStyle () {\n      const angle = this.$q.lang.rtl === true ? -this.angle : this.angle\n\n      return {\n        transform: this.reverse !== (this.$q.lang.rtl === true)\n          ? `scale3d(-1, 1, 1) rotate3d(0, 0, 1, ${-90 - angle}deg)`\n          : `rotate3d(0, 0, 1, ${angle - 90}deg)`\n      }\n    },\n\n    circleStyle () {\n      if (this.instantFeedback !== true && this.indeterminate !== true) {\n        return { transition: 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease' }\n      }\n    },\n\n    viewBox () {\n      return diameter / (1 - this.thickness / 2)\n    },\n\n    viewBoxAttr () {\n      return `${this.viewBox / 2} ${this.viewBox / 2} ${this.viewBox} ${this.viewBox}`\n    },\n\n    strokeDashOffset () {\n      const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\n      return progress * circumference\n    },\n\n    strokeWidth () {\n      return this.thickness / 2 * this.viewBox\n    },\n\n    attrs () {\n      return {\n        role: 'progressbar',\n        'aria-valuemin': this.min,\n        'aria-valuemax': this.max,\n        'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n      }\n    }\n  },\n\n  methods: {\n    __getCircle (h, { thickness, offset, color, cls }) {\n      return h('circle', {\n        staticClass: 'q-circular-progress__' + cls,\n        class: color !== void 0 ? `text-${color}` : null,\n        style: this.circleStyle,\n        attrs: {\n          fill: 'transparent',\n          stroke: 'currentColor',\n          'stroke-width': thickness,\n          'stroke-dasharray': strokeDashArray,\n          'stroke-dashoffset': offset,\n          cx: this.viewBox,\n          cy: this.viewBox,\n          r: radius\n        }\n      })\n    }\n  },\n\n  render (h) {\n    const svgChild = []\n\n    this.centerColor !== void 0 && this.centerColor !== 'transparent' && svgChild.push(\n      h('circle', {\n        staticClass: 'q-circular-progress__center',\n        class: `text-${this.centerColor}`,\n        attrs: {\n          fill: 'currentColor',\n          r: radius - this.strokeWidth / 2,\n          cx: this.viewBox,\n          cy: this.viewBox\n        }\n      })\n    )\n\n    this.trackColor !== void 0 && this.trackColor !== 'transparent' && svgChild.push(\n      this.__getCircle(h, {\n        cls: 'track',\n        thickness: this.strokeWidth,\n        offset: 0,\n        color: this.trackColor\n      })\n    )\n\n    svgChild.push(\n      this.__getCircle(h, {\n        cls: 'circle',\n        thickness: this.strokeWidth,\n        offset: this.strokeDashOffset,\n        color: this.color\n      })\n    )\n\n    const child = [\n      h('svg', {\n        staticClass: 'q-circular-progress__svg',\n        style: this.svgStyle,\n        attrs: {\n          focusable: 'false' /* needed for IE11 */,\n          viewBox: this.viewBoxAttr,\n          'aria-hidden': 'true'\n        }\n      }, svgChild)\n    ]\n\n    this.showValue === true && child.push(\n      h('div', {\n        staticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\n        style: { fontSize: this.fontSize }\n      }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n    )\n\n    return h('div', {\n      staticClass: 'q-circular-progress',\n      class: `q-circular-progress--${this.indeterminate === true ? 'in' : ''}determinate`,\n      style: this.sizeStyle,\n      on: { ...this.qListeners },\n      attrs: this.attrs\n    }, mergeSlotSafely(child, this, 'internal'))\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}