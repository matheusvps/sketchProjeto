{"ast":null,"code":"import _typeof from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"C:/Users/rodri/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/web.timers.js\";\nvar id = 0;\nvar offsetBase = void 0;\nfunction getAbsolutePosition(el, resize) {\n  if (offsetBase === void 0) {\n    offsetBase = document.createElement('div');\n    offsetBase.style.cssText = 'position: absolute; left: 0; top: 0';\n    document.body.appendChild(offsetBase);\n  }\n  var boundingRect = el.getBoundingClientRect();\n  var baseRect = offsetBase.getBoundingClientRect();\n  var _window$getComputedSt = window.getComputedStyle(el),\n    marginLeft = _window$getComputedSt.marginLeft,\n    marginRight = _window$getComputedSt.marginRight,\n    marginTop = _window$getComputedSt.marginTop,\n    marginBottom = _window$getComputedSt.marginBottom;\n  var marginH = parseInt(marginLeft, 10) + parseInt(marginRight, 10);\n  var marginV = parseInt(marginTop, 10) + parseInt(marginBottom, 10);\n  return {\n    left: boundingRect.left - baseRect.left,\n    top: boundingRect.top - baseRect.top,\n    width: boundingRect.right - boundingRect.left,\n    height: boundingRect.bottom - boundingRect.top,\n    widthM: boundingRect.right - boundingRect.left + (resize === true ? 0 : marginH),\n    heightM: boundingRect.bottom - boundingRect.top + (resize === true ? 0 : marginV),\n    marginH: resize === true ? marginH : 0,\n    marginV: resize === true ? marginV : 0\n  };\n}\nfunction getAbsoluteSize(el) {\n  return {\n    width: el.scrollWidth,\n    height: el.scrollHeight\n  };\n}\n\n// firefox rulez\nvar styleEdges = ['Top', 'Right', 'Bottom', 'Left'];\nvar styleBorderRadiuses = ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'];\nvar reStyleSkipKey = /-block|-inline|block-|inline-/;\nvar reStyleSkipRule = /(-block|-inline|block-|inline-).*:/;\nfunction getComputedStyle(el, props) {\n  var style = window.getComputedStyle(el);\n  var fixed = {};\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    if (style[prop] === '') {\n      if (prop === 'cssText') {\n        var styleLen = style.length;\n        var val = '';\n        for (var _i = 0; _i < styleLen; _i++) {\n          if (reStyleSkipKey.test(style[_i]) !== true) {\n            val += style[_i] + ': ' + style[style[_i]] + '; ';\n          }\n        }\n        fixed[prop] = val;\n      } else if (['borderWidth', 'borderStyle', 'borderColor'].indexOf(prop) > -1) {\n        var suffix = prop.replace('border', '');\n        var _val = '';\n        for (var j = 0; j < styleEdges.length; j++) {\n          var subProp = 'border' + styleEdges[j] + suffix;\n          _val += style[subProp] + ' ';\n        }\n        fixed[prop] = _val;\n      } else if (prop === 'borderRadius') {\n        var val1 = '';\n        var val2 = '';\n        for (var _j = 0; _j < styleBorderRadiuses.length; _j++) {\n          var _val2 = style[styleBorderRadiuses[_j]].split(' ');\n          val1 += _val2[0] + ' ';\n          val2 += (_val2[1] === void 0 ? _val2[0] : _val2[1]) + ' ';\n        }\n        fixed[prop] = val1 + '/ ' + val2;\n      } else {\n        fixed[prop] = style[prop];\n      }\n    } else {\n      if (prop === 'cssText') {\n        fixed[prop] = style[prop].split(';').filter(function (val) {\n          return reStyleSkipRule.test(val) !== true;\n        }).join(';');\n      } else {\n        fixed[prop] = style[prop];\n      }\n    }\n  }\n  return fixed;\n}\nvar zIndexPositions = ['absolute', 'fixed', 'relative', 'sticky'];\nfunction getMaxZIndex(elStart) {\n  var el = elStart;\n  var maxIndex = 0;\n  while (el !== null && el !== document) {\n    var _window$getComputedSt2 = window.getComputedStyle(el),\n      position = _window$getComputedSt2.position,\n      zIndex = _window$getComputedSt2.zIndex;\n    var zIndexNum = Number(zIndex);\n    if (zIndexNum > maxIndex && (el === elStart || zIndexPositions.includes(position) === true)) {\n      maxIndex = zIndexNum;\n    }\n    el = el.parentNode;\n  }\n  return maxIndex;\n}\nfunction normalizeElements(opts) {\n  return {\n    from: opts.from,\n    to: opts.to !== void 0 ? opts.to : opts.from\n  };\n}\nfunction normalizeOptions(options) {\n  if (typeof options === 'number') {\n    options = {\n      duration: options\n    };\n  } else if (typeof options === 'function') {\n    options = {\n      onEnd: options\n    };\n  }\n  return _objectSpread(_objectSpread({}, options), {}, {\n    waitFor: options.waitFor === void 0 ? 0 : options.waitFor,\n    duration: isNaN(options.duration) === true ? 300 : parseInt(options.duration, 10),\n    easing: typeof options.easing === 'string' && options.easing.length > 0 ? options.easing : 'ease-in-out',\n    delay: isNaN(options.delay) === true ? 0 : parseInt(options.delay, 10),\n    fill: typeof options.fill === 'string' && options.fill.length > 0 ? options.fill : 'none',\n    resize: options.resize === true,\n    useCSS: options.useCSS === true,\n    hideFromClone: options.hideFromClone === true,\n    keepToClone: options.keepToClone === true,\n    tween: options.tween === true,\n    tweenFromOpacity: isNaN(options.tweenFromOpacity) === true ? 0.6 : parseFloat(options.tweenFromOpacity),\n    tweenToOpacity: isNaN(options.tweenToOpacity) === true ? 0.5 : parseFloat(options.tweenToOpacity)\n  });\n}\nfunction getElement(element) {\n  var type = _typeof(element);\n  return type === 'function' ? element() : type === 'string' ? document.querySelector(element) : element;\n}\nfunction isValidElement(element) {\n  return element && element.ownerDocument === document && element.parentNode !== null;\n}\nexport default function morph(_options) {\n  var cancel = function cancel() {\n    return false;\n  };\n  var cancelStatus = false;\n  var endElementTo = true;\n  var elements = normalizeElements(_options);\n  var options = normalizeOptions(_options);\n  var elFrom = getElement(elements.from);\n  if (isValidElement(elFrom) !== true) {\n    // we return a cancel function that return false, meaning the cancel function failed\n    return cancel;\n  }\n  // we clean other morphs running on this element\n  typeof elFrom.qMorphCancel === 'function' && elFrom.qMorphCancel();\n  var animationFromClone = void 0;\n  var animationFromTween = void 0;\n  var animationToClone = void 0;\n  var animationTo = void 0;\n  var elFromParent = elFrom.parentNode;\n  var elFromNext = elFrom.nextElementSibling;\n\n  // we get the dimensions and characteristics\n  // of the parent of the initial element before changes\n  var elFromPosition = getAbsolutePosition(elFrom, options.resize);\n  var _getAbsoluteSize = getAbsoluteSize(elFromParent),\n    elFromParentWidthBefore = _getAbsoluteSize.width,\n    elFromParentHeightBefore = _getAbsoluteSize.height;\n  var _getComputedStyle = getComputedStyle(elFrom, ['borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'backgroundColor', 'transform', 'position', 'cssText']),\n    elFromBorderWidth = _getComputedStyle.borderWidth,\n    elFromBorderStyle = _getComputedStyle.borderStyle,\n    elFromBorderColor = _getComputedStyle.borderColor,\n    elFromBorderRadius = _getComputedStyle.borderRadius,\n    elFromBackground = _getComputedStyle.backgroundColor,\n    elFromTransform = _getComputedStyle.transform,\n    elFromPositioningType = _getComputedStyle.position,\n    elFromCssText = _getComputedStyle.cssText;\n  var elFromClassSaved = elFrom.classList.toString();\n  var elFromStyleSaved = elFrom.style.cssText;\n\n  // we make a clone of the initial element and\n  // use it to display until the final element is ready\n  // and to change the occupied space during animation\n  var elFromClone = elFrom.cloneNode(true);\n  var elFromTween = options.tween === true ? elFrom.cloneNode(true) : void 0;\n  if (elFromTween !== void 0) {\n    elFromTween.className = elFromTween.classList.toString().split(' ').filter(function (c) {\n      return /^bg-/.test(c) === false;\n    }).join(' ');\n  }\n\n  // if the initial element is not going to be removed do not show the placeholder\n  options.hideFromClone === true && elFromClone.classList.add('q-morph--internal');\n\n  // prevent interaction with placeholder\n  elFromClone.setAttribute('aria-hidden', 'true');\n  elFromClone.style.transition = 'none';\n  elFromClone.style.animation = 'none';\n  elFromClone.style.pointerEvents = 'none';\n  elFromParent.insertBefore(elFromClone, elFromNext);\n\n  // we mark the element with its cleanup function\n  elFrom.qMorphCancel = function () {\n    cancelStatus = true;\n\n    // we clean the clone of the initial element\n    elFromClone.remove();\n    elFromTween !== void 0 && elFromTween.remove();\n    options.hideFromClone === true && elFromClone.classList.remove('q-morph--internal');\n\n    // we remove the cleanup function from the element\n    elFrom.qMorphCancel = void 0;\n  };\n\n  // will be called after Vue catches up with the changes done by _options.onToggle() function\n  var calculateFinalState = function calculateFinalState() {\n    var elTo = getElement(elements.to);\n    if (cancelStatus === true || isValidElement(elTo) !== true) {\n      typeof elFrom.qMorphCancel === 'function' && elFrom.qMorphCancel();\n      return;\n    }\n    // we clean other morphs running on this element\n    elFrom !== elTo && typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel();\n\n    // we hide the final element and the clone of the initial element\n    // we don't hide the final element if we want both it and the animated one visible\n    options.keepToClone !== true && elTo.classList.add('q-morph--internal');\n    elFromClone.classList.add('q-morph--internal');\n\n    // we get the dimensions of the parent of the initial element after changes\n    // the difference is how much we should animate the clone\n    var _getAbsoluteSize2 = getAbsoluteSize(elFromParent),\n      elFromParentWidthAfter = _getAbsoluteSize2.width,\n      elFromParentHeightAfter = _getAbsoluteSize2.height;\n\n    // we get the dimensions of the parent of the final element before changes\n    var _getAbsoluteSize3 = getAbsoluteSize(elTo.parentNode),\n      elToParentWidthBefore = _getAbsoluteSize3.width,\n      elToParentHeightBefore = _getAbsoluteSize3.height;\n\n    // then we show the clone of the initial element if we don't want it hidden\n    options.hideFromClone !== true && elFromClone.classList.remove('q-morph--internal');\n\n    // we mark the element with its cleanup function\n    elTo.qMorphCancel = function () {\n      cancelStatus = true;\n\n      // we clean the clone of the initial element\n      elFromClone.remove();\n      elFromTween !== void 0 && elFromTween.remove();\n      options.hideFromClone === true && elFromClone.classList.remove('q-morph--internal');\n\n      // we show the final element\n      options.keepToClone !== true && elTo.classList.remove('q-morph--internal');\n\n      // we remove the cleanup function from the elements\n      elFrom.qMorphCancel = void 0;\n      elTo.qMorphCancel = void 0;\n    };\n\n    // will be called after waitFor (give time to render the final element)\n    var animate = function animate() {\n      if (cancelStatus === true) {\n        typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel();\n        return;\n      }\n\n      // now the animation starts, so we only need the clone\n      // of the initial element as a spacer\n      // we also hide it to calculate the dimensions of the\n      // parent of the final element after the changes\n      if (options.hideFromClone !== true) {\n        elFromClone.classList.add('q-morph--internal');\n        elFromClone.innerHTML = '';\n        elFromClone.style.left = 0;\n        elFromClone.style.right = 'unset';\n        elFromClone.style.top = 0;\n        elFromClone.style.bottom = 'unset';\n        elFromClone.style.transform = 'none';\n      }\n\n      // we show the final element\n      if (options.keepToClone !== true) {\n        elTo.classList.remove('q-morph--internal');\n      }\n\n      // we get the dimensions of the parent of the final element after changes\n      // the difference is how much we should animate the clone\n      var elToParent = elTo.parentNode;\n      var _getAbsoluteSize4 = getAbsoluteSize(elToParent),\n        elToParentWidthAfter = _getAbsoluteSize4.width,\n        elToParentHeightAfter = _getAbsoluteSize4.height;\n      var elToClone = elTo.cloneNode(options.keepToClone);\n      elToClone.setAttribute('aria-hidden', 'true');\n      if (options.keepToClone !== true) {\n        elToClone.style.left = 0;\n        elToClone.style.right = 'unset';\n        elToClone.style.top = 0;\n        elToClone.style.bottom = 'unset';\n        elToClone.style.transform = 'none';\n        elToClone.style.pointerEvents = 'none';\n      }\n      elToClone.classList.add('q-morph--internal');\n\n      // if elFrom is the same as elTo the next element is elFromClone\n      var elToNext = elTo === elFrom && elFromParent === elToParent ? elFromClone : elTo.nextElementSibling;\n      elToParent.insertBefore(elToClone, elToNext);\n      var _getComputedStyle2 = getComputedStyle(elTo, ['borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'backgroundColor', 'transform', 'position', 'cssText']),\n        elToBorderWidth = _getComputedStyle2.borderWidth,\n        elToBorderStyle = _getComputedStyle2.borderStyle,\n        elToBorderColor = _getComputedStyle2.borderColor,\n        elToBorderRadius = _getComputedStyle2.borderRadius,\n        elToBackground = _getComputedStyle2.backgroundColor,\n        elToTransform = _getComputedStyle2.transform,\n        elToPositioningType = _getComputedStyle2.position,\n        elToCssText = _getComputedStyle2.cssText;\n      var elToClassSaved = elTo.classList.toString();\n      var elToStyleSaved = elTo.style.cssText;\n\n      // we set the computed styles on the element (to be able to remove classes)\n      elTo.style.cssText = elToCssText;\n      elTo.style.transform = 'none';\n      elTo.style.animation = 'none';\n      elTo.style.transition = 'none';\n      // we strip the background classes (background color can no longer be animated if !important is used)\n      elTo.className = elToClassSaved.split(' ').filter(function (c) {\n        return /^bg-/.test(c) === false;\n      }).join(' ');\n      var elToPosition = getAbsolutePosition(elTo, options.resize);\n      var deltaX = elFromPosition.left - elToPosition.left;\n      var deltaY = elFromPosition.top - elToPosition.top;\n      var scaleX = elFromPosition.width / (elToPosition.width > 0 ? elToPosition.width : 10);\n      var scaleY = elFromPosition.height / (elToPosition.height > 0 ? elToPosition.height : 100);\n      var elFromParentWidthDiff = elFromParentWidthBefore - elFromParentWidthAfter;\n      var elFromParentHeightDiff = elFromParentHeightBefore - elFromParentHeightAfter;\n      var elToParentWidthDiff = elToParentWidthAfter - elToParentWidthBefore;\n      var elToParentHeightDiff = elToParentHeightAfter - elToParentHeightBefore;\n      var elFromCloneWidth = Math.max(elFromPosition.widthM, elFromParentWidthDiff);\n      var elFromCloneHeight = Math.max(elFromPosition.heightM, elFromParentHeightDiff);\n      var elToCloneWidth = Math.max(elToPosition.widthM, elToParentWidthDiff);\n      var elToCloneHeight = Math.max(elToPosition.heightM, elToParentHeightDiff);\n      var elSharedSize = elFrom === elTo && ['absolute', 'fixed'].includes(elToPositioningType) === false && ['absolute', 'fixed'].includes(elFromPositioningType) === false;\n\n      // if the final element has fixed position or if a parent\n      // has fixed position we need to animate it as fixed\n      var elToNeedsFixedPosition = elToPositioningType === 'fixed';\n      var parent = elToParent;\n      while (elToNeedsFixedPosition !== true && parent !== document) {\n        elToNeedsFixedPosition = window.getComputedStyle(parent).position === 'fixed';\n        parent = parent.parentNode;\n      }\n\n      // we show the spacer for the initial element\n      if (options.hideFromClone !== true) {\n        elFromClone.style.display = 'block';\n        elFromClone.style.flex = '0 0 auto';\n        elFromClone.style.opacity = 0;\n        elFromClone.style.minWidth = 'unset';\n        elFromClone.style.maxWidth = 'unset';\n        elFromClone.style.minHeight = 'unset';\n        elFromClone.style.maxHeight = 'unset';\n        elFromClone.classList.remove('q-morph--internal');\n      }\n\n      // we show the spacer for the final element\n      if (options.keepToClone !== true) {\n        elToClone.style.display = 'block';\n        elToClone.style.flex = '0 0 auto';\n        elToClone.style.opacity = 0;\n        elToClone.style.minWidth = 'unset';\n        elToClone.style.maxWidth = 'unset';\n        elToClone.style.minHeight = 'unset';\n        elToClone.style.maxHeight = 'unset';\n      }\n      elToClone.classList.remove('q-morph--internal');\n\n      // we apply classes specified by user\n      if (typeof options.classes === 'string') {\n        elTo.className += ' ' + options.classes;\n      }\n\n      // we apply styles specified by user\n      if (typeof options.style === 'string') {\n        elTo.style.cssText += ' ' + options.style;\n      } else if (options.style === Object(options.style)) {\n        for (var prop in options.style) {\n          elTo.style[prop] = options.style[prop];\n        }\n      }\n      var elFromZIndex = getMaxZIndex(elFromClone);\n      var elToZIndex = getMaxZIndex(elTo);\n\n      // we position the morphing element\n      // if we use fixed position for the final element we need to adjust for scroll\n      var documentScroll = elToNeedsFixedPosition === true ? document.documentElement : {\n        scrollLeft: 0,\n        scrollTop: 0\n      };\n      elTo.style.position = elToNeedsFixedPosition === true ? 'fixed' : 'absolute';\n      elTo.style.left = \"\".concat(elToPosition.left - documentScroll.scrollLeft, \"px\");\n      elTo.style.right = 'unset';\n      elTo.style.top = \"\".concat(elToPosition.top - documentScroll.scrollTop, \"px\");\n      elTo.style.margin = 0;\n      if (options.resize === true) {\n        elTo.style.minWidth = 'unset';\n        elTo.style.maxWidth = 'unset';\n        elTo.style.minHeight = 'unset';\n        elTo.style.maxHeight = 'unset';\n        elTo.style.overflow = 'hidden';\n        elTo.style.overflowX = 'hidden';\n        elTo.style.overflowY = 'hidden';\n      }\n      document.body.appendChild(elTo);\n      if (elFromTween !== void 0) {\n        elFromTween.style.cssText = elFromCssText;\n        elFromTween.style.transform = 'none';\n        elFromTween.style.animation = 'none';\n        elFromTween.style.transition = 'none';\n        elFromTween.style.position = elTo.style.position;\n        elFromTween.style.left = \"\".concat(elFromPosition.left - documentScroll.scrollLeft, \"px\");\n        elFromTween.style.right = 'unset';\n        elFromTween.style.top = \"\".concat(elFromPosition.top - documentScroll.scrollTop, \"px\");\n        elFromTween.style.margin = 0;\n        elFromTween.style.pointerEvents = 'none';\n        if (options.resize === true) {\n          elFromTween.style.minWidth = 'unset';\n          elFromTween.style.maxWidth = 'unset';\n          elFromTween.style.minHeight = 'unset';\n          elFromTween.style.maxHeight = 'unset';\n          elFromTween.style.overflow = 'hidden';\n          elFromTween.style.overflowX = 'hidden';\n          elFromTween.style.overflowY = 'hidden';\n        }\n        document.body.appendChild(elFromTween);\n      }\n      var commonCleanup = function commonCleanup(aborted) {\n        // we put the element back in it's place\n        // and restore the styles and classes\n        if (elFrom === elTo && endElementTo !== true) {\n          elTo.style.cssText = elFromStyleSaved;\n          elTo.className = elFromClassSaved;\n        } else {\n          elTo.style.cssText = elToStyleSaved;\n          elTo.className = elToClassSaved;\n        }\n        elToClone.parentNode === elToParent && elToParent.insertBefore(elTo, elToClone);\n\n        // we clean the spacers\n        elFromClone.remove();\n        elToClone.remove();\n        elFromTween !== void 0 && elFromTween.remove();\n\n        // cancel will be no longer available\n        cancel = function cancel() {\n          return false;\n        };\n        elFrom.qMorphCancel = void 0;\n        elTo.qMorphCancel = void 0;\n\n        // we are ready\n        if (typeof options.onEnd === 'function') {\n          options.onEnd(endElementTo === true ? 'to' : 'from', aborted === true);\n        }\n      };\n      if (options.useCSS !== true && typeof elTo.animate === 'function') {\n        var resizeFrom = options.resize === true ? {\n          transform: \"translate(\".concat(deltaX, \"px, \").concat(deltaY, \"px)\"),\n          width: \"\".concat(elFromCloneWidth, \"px\"),\n          height: \"\".concat(elFromCloneHeight, \"px\")\n        } : {\n          transform: \"translate(\".concat(deltaX, \"px, \").concat(deltaY, \"px) scale(\").concat(scaleX, \", \").concat(scaleY, \")\")\n        };\n        var resizeTo = options.resize === true ? {\n          width: \"\".concat(elToCloneWidth, \"px\"),\n          height: \"\".concat(elToCloneHeight, \"px\")\n        } : {};\n        var resizeFromTween = options.resize === true ? {\n          width: \"\".concat(elFromCloneWidth, \"px\"),\n          height: \"\".concat(elFromCloneHeight, \"px\")\n        } : {};\n        var resizeToTween = options.resize === true ? {\n          transform: \"translate(\".concat(-1 * deltaX, \"px, \").concat(-1 * deltaY, \"px)\"),\n          width: \"\".concat(elToCloneWidth, \"px\"),\n          height: \"\".concat(elToCloneHeight, \"px\")\n        } : {\n          transform: \"translate(\".concat(-1 * deltaX, \"px, \").concat(-1 * deltaY, \"px) scale(\").concat(1 / scaleX, \", \").concat(1 / scaleY, \")\")\n        };\n        var tweenFrom = elFromTween !== void 0 ? {\n          opacity: options.tweenToOpacity\n        } : {\n          backgroundColor: elFromBackground\n        };\n        var tweenTo = elFromTween !== void 0 ? {\n          opacity: 1\n        } : {\n          backgroundColor: elToBackground\n        };\n        animationTo = elTo.animate([_objectSpread(_objectSpread({\n          margin: 0,\n          borderWidth: elFromBorderWidth,\n          borderStyle: elFromBorderStyle,\n          borderColor: elFromBorderColor,\n          borderRadius: elFromBorderRadius,\n          zIndex: elFromZIndex,\n          transformOrigin: '0 0'\n        }, resizeFrom), tweenFrom), _objectSpread(_objectSpread({\n          margin: 0,\n          borderWidth: elToBorderWidth,\n          borderStyle: elToBorderStyle,\n          borderColor: elToBorderColor,\n          borderRadius: elToBorderRadius,\n          zIndex: elToZIndex,\n          transformOrigin: '0 0',\n          transform: elToTransform\n        }, resizeTo), tweenTo)], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        });\n        animationFromTween = elFromTween === void 0 ? void 0 : elFromTween.animate([_objectSpread({\n          opacity: options.tweenFromOpacity,\n          margin: 0,\n          borderWidth: elFromBorderWidth,\n          borderStyle: elFromBorderStyle,\n          borderColor: elFromBorderColor,\n          borderRadius: elFromBorderRadius,\n          zIndex: elFromZIndex,\n          transformOrigin: '0 0',\n          transform: elFromTransform\n        }, resizeFromTween), _objectSpread({\n          opacity: 0,\n          margin: 0,\n          borderWidth: elToBorderWidth,\n          borderStyle: elToBorderStyle,\n          borderColor: elToBorderColor,\n          borderRadius: elToBorderRadius,\n          zIndex: elToZIndex,\n          transformOrigin: '0 0'\n        }, resizeToTween)], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        });\n        animationFromClone = options.hideFromClone === true || elSharedSize === true ? void 0 : elFromClone.animate([{\n          margin: \"\".concat(elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0, \"px \").concat(elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0, \"px\"),\n          width: \"\".concat(elFromCloneWidth + elFromPosition.marginH, \"px\"),\n          height: \"\".concat(elFromCloneHeight + elFromPosition.marginV, \"px\")\n        }, {\n          margin: 0,\n          width: 0,\n          height: 0\n        }], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        });\n        animationToClone = options.keepToClone === true ? void 0 : elToClone.animate([elSharedSize === true ? {\n          margin: \"\".concat(elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0, \"px \").concat(elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0, \"px\"),\n          width: \"\".concat(elFromCloneWidth + elFromPosition.marginH, \"px\"),\n          height: \"\".concat(elFromCloneHeight + elFromPosition.marginV, \"px\")\n        } : {\n          margin: 0,\n          width: 0,\n          height: 0\n        }, {\n          margin: \"\".concat(elToParentHeightDiff < 0 ? elToParentHeightDiff / 2 : 0, \"px \").concat(elToParentWidthDiff < 0 ? elToParentWidthDiff / 2 : 0, \"px\"),\n          width: \"\".concat(elToCloneWidth + elToPosition.marginH, \"px\"),\n          height: \"\".concat(elToCloneHeight + elToPosition.marginV, \"px\")\n        }], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        });\n        var cleanup = function cleanup(abort) {\n          animationFromClone !== void 0 && animationFromClone.cancel();\n          animationFromTween !== void 0 && animationFromTween.cancel();\n          animationToClone !== void 0 && animationToClone.cancel();\n          animationTo.cancel();\n          animationTo.removeEventListener('finish', cleanup);\n          animationTo.removeEventListener('cancel', cleanup);\n          commonCleanup(abort);\n\n          // we clean the animations\n          animationFromClone = void 0;\n          animationFromTween = void 0;\n          animationToClone = void 0;\n          animationTo = void 0;\n        };\n        elFrom.qMorphCancel = function () {\n          elFrom.qMorphCancel = void 0;\n          cancelStatus = true;\n          cleanup();\n        };\n        elTo.qMorphCancel = function () {\n          elTo.qMorphCancel = void 0;\n          cancelStatus = true;\n          cleanup();\n        };\n        animationTo.addEventListener('finish', cleanup);\n        animationTo.addEventListener('cancel', cleanup);\n        cancel = function cancel(abort) {\n          // we are not in a morph that we can cancel\n          if (cancelStatus === true || animationTo === void 0) {\n            return false;\n          }\n          if (abort === true) {\n            cleanup(true);\n            return true;\n          }\n          endElementTo = endElementTo !== true;\n          animationFromClone !== void 0 && animationFromClone.reverse();\n          animationFromTween !== void 0 && animationFromTween.reverse();\n          animationToClone !== void 0 && animationToClone.reverse();\n          animationTo.reverse();\n          return true;\n        };\n      } else {\n        var qAnimId = \"q-morph-anim-\".concat(++id);\n        var style = document.createElement('style');\n        var _resizeFrom = options.resize === true ? \"\\n            transform: translate(\".concat(deltaX, \"px, \").concat(deltaY, \"px);\\n            width: \").concat(elFromCloneWidth, \"px;\\n            height: \").concat(elFromCloneHeight, \"px;\\n          \") : \"transform: translate(\".concat(deltaX, \"px, \").concat(deltaY, \"px) scale(\").concat(scaleX, \", \").concat(scaleY, \");\");\n        var _resizeTo = options.resize === true ? \"\\n            width: \".concat(elToCloneWidth, \"px;\\n            height: \").concat(elToCloneHeight, \"px;\\n          \") : '';\n        var _resizeFromTween = options.resize === true ? \"\\n            width: \".concat(elFromCloneWidth, \"px;\\n            height: \").concat(elFromCloneHeight, \"px;\\n          \") : '';\n        var _resizeToTween = options.resize === true ? \"\\n            transform: translate(\".concat(-1 * deltaX, \"px, \").concat(-1 * deltaY, \"px);\\n            width: \").concat(elToCloneWidth, \"px;\\n            height: \").concat(elToCloneHeight, \"px;\\n          \") : \"transform: translate(\".concat(-1 * deltaX, \"px, \").concat(-1 * deltaY, \"px) scale(\").concat(1 / scaleX, \", \").concat(1 / scaleY, \");\");\n        var _tweenFrom = elFromTween !== void 0 ? \"opacity: \".concat(options.tweenToOpacity, \";\") : \"background-color: \".concat(elFromBackground, \";\");\n        var _tweenTo = elFromTween !== void 0 ? 'opacity: 1;' : \"background-color: \".concat(elToBackground, \";\");\n        var keyframesFromTween = elFromTween === void 0 ? '' : \"\\n            @keyframes \".concat(qAnimId, \"-from-tween {\\n              0% {\\n                opacity: \").concat(options.tweenFromOpacity, \";\\n                margin: 0;\\n                border-width: \").concat(elFromBorderWidth, \";\\n                border-style: \").concat(elFromBorderStyle, \";\\n                border-color: \").concat(elFromBorderColor, \";\\n                border-radius: \").concat(elFromBorderRadius, \";\\n                z-index: \").concat(elFromZIndex, \";\\n                transform-origin: 0 0;\\n                transform: \").concat(elFromTransform, \";\\n                \").concat(_resizeFromTween, \"\\n              }\\n\\n              100% {\\n                opacity: 0;\\n                margin: 0;\\n                border-width: \").concat(elToBorderWidth, \";\\n                border-style: \").concat(elToBorderStyle, \";\\n                border-color: \").concat(elToBorderColor, \";\\n                border-radius: \").concat(elToBorderRadius, \";\\n                z-index: \").concat(elToZIndex, \";\\n                transform-origin: 0 0;\\n                \").concat(_resizeToTween, \"\\n              }\\n            }\\n          \");\n        var keyframesFrom = options.hideFromClone === true || elSharedSize === true ? '' : \"\\n            @keyframes \".concat(qAnimId, \"-from {\\n              0% {\\n                margin: \").concat(elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0, \"px \").concat(elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0, \"px;\\n                width: \").concat(elFromCloneWidth + elFromPosition.marginH, \"px;\\n                height: \").concat(elFromCloneHeight + elFromPosition.marginV, \"px;\\n              }\\n\\n              100% {\\n                margin: 0;\\n                width: 0;\\n                height: 0;\\n              }\\n            }\\n          \");\n        var keyframeToStart = elSharedSize === true ? \"\\n            margin: \".concat(elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0, \"px \").concat(elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0, \"px;\\n            width: \").concat(elFromCloneWidth + elFromPosition.marginH, \"px;\\n            height: \").concat(elFromCloneHeight + elFromPosition.marginV, \"px;\\n          \") : \"\\n            margin: 0;\\n            width: 0;\\n            height: 0;\\n          \";\n        var keyframesTo = options.keepToClone === true ? '' : \"\\n            @keyframes \".concat(qAnimId, \"-to {\\n              0% {\\n                \").concat(keyframeToStart, \"\\n              }\\n\\n              100% {\\n                margin: \").concat(elToParentHeightDiff < 0 ? elToParentHeightDiff / 2 : 0, \"px \").concat(elToParentWidthDiff < 0 ? elToParentWidthDiff / 2 : 0, \"px;\\n                width: \").concat(elToCloneWidth + elToPosition.marginH, \"px;\\n                height: \").concat(elToCloneHeight + elToPosition.marginV, \"px;\\n              }\\n            }\\n          \");\n        style.innerHTML = \"\\n          @keyframes \".concat(qAnimId, \" {\\n            0% {\\n              margin: 0;\\n              border-width: \").concat(elFromBorderWidth, \";\\n              border-style: \").concat(elFromBorderStyle, \";\\n              border-color: \").concat(elFromBorderColor, \";\\n              border-radius: \").concat(elFromBorderRadius, \";\\n              background-color: \").concat(elFromBackground, \";\\n              z-index: \").concat(elFromZIndex, \";\\n              transform-origin: 0 0;\\n              \").concat(_resizeFrom, \"\\n              \").concat(_tweenFrom, \"\\n            }\\n\\n            100% {\\n              margin: 0;\\n              border-width: \").concat(elToBorderWidth, \";\\n              border-style: \").concat(elToBorderStyle, \";\\n              border-color: \").concat(elToBorderColor, \";\\n              border-radius: \").concat(elToBorderRadius, \";\\n              background-color: \").concat(elToBackground, \";\\n              z-index: \").concat(elToZIndex, \";\\n              transform-origin: 0 0;\\n              transform: \").concat(elToTransform, \";\\n              \").concat(_resizeTo, \"\\n              \").concat(_tweenTo, \"\\n            }\\n          }\\n\\n          \").concat(keyframesFrom, \"\\n\\n          \").concat(keyframesFromTween, \"\\n\\n          \").concat(keyframesTo, \"\\n        \");\n        document.head.appendChild(style);\n        var animationDirection = 'normal';\n        elFromClone.style.animation = \"\".concat(options.duration, \"ms \").concat(options.easing, \" \").concat(options.delay, \"ms \").concat(animationDirection, \" \").concat(options.fill, \" \").concat(qAnimId, \"-from\");\n        if (elFromTween !== void 0) {\n          elFromTween.style.animation = \"\".concat(options.duration, \"ms \").concat(options.easing, \" \").concat(options.delay, \"ms \").concat(animationDirection, \" \").concat(options.fill, \" \").concat(qAnimId, \"-from-tween\");\n        }\n        elToClone.style.animation = \"\".concat(options.duration, \"ms \").concat(options.easing, \" \").concat(options.delay, \"ms \").concat(animationDirection, \" \").concat(options.fill, \" \").concat(qAnimId, \"-to\");\n        elTo.style.animation = \"\".concat(options.duration, \"ms \").concat(options.easing, \" \").concat(options.delay, \"ms \").concat(animationDirection, \" \").concat(options.fill, \" \").concat(qAnimId);\n        var _cleanup = function _cleanup(ev) {\n          if (ev === Object(ev) && ev.animationName !== qAnimId) {\n            return;\n          }\n          elTo.removeEventListener('animationend', _cleanup);\n          elTo.removeEventListener('animationcancel', _cleanup);\n          commonCleanup();\n\n          // we clean the animations\n          style.remove();\n        };\n        elFrom.qMorphCancel = function () {\n          elFrom.qMorphCancel = void 0;\n          cancelStatus = true;\n          _cleanup();\n        };\n        elTo.qMorphCancel = function () {\n          elTo.qMorphCancel = void 0;\n          cancelStatus = true;\n          _cleanup();\n        };\n        elTo.addEventListener('animationend', _cleanup);\n        elTo.addEventListener('animationcancel', _cleanup);\n        cancel = function cancel(abort) {\n          // we are not in a morph that we can cancel\n          if (cancelStatus === true || !elTo || !elFromClone || !elToClone) {\n            return false;\n          }\n          if (abort === true) {\n            _cleanup();\n            return true;\n          }\n          endElementTo = endElementTo !== true;\n          animationDirection = animationDirection === 'normal' ? 'reverse' : 'normal';\n          elFromClone.style.animationDirection = animationDirection;\n          elFromTween.style.animationDirection = animationDirection;\n          elToClone.style.animationDirection = animationDirection;\n          elTo.style.animationDirection = animationDirection;\n          return true;\n        };\n      }\n    };\n    if (options.waitFor > 0 || options.waitFor === 'transitionend' || options.waitFor === Object(options.waitFor) && typeof options.waitFor.then === 'function') {\n      var delayPromise = options.waitFor > 0 ? new Promise(function (resolve) {\n        return setTimeout(resolve, options.waitFor);\n      }) : options.waitFor === 'transitionend' ? new Promise(function (resolve) {\n        var timer = setTimeout(function () {\n          endFn();\n        }, 400);\n        var endFn = function endFn(ev) {\n          clearTimeout(timer);\n          if (elTo) {\n            elTo.removeEventListener('transitionend', endFn);\n            elTo.removeEventListener('transitioncancel', endFn);\n          }\n          resolve();\n        };\n        elTo.addEventListener('transitionend', endFn);\n        elTo.addEventListener('transitioncancel', endFn);\n      }) : options.waitFor;\n      delayPromise.then(animate)[\"catch\"](function () {\n        typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel();\n      });\n    } else {\n      animate();\n    }\n  };\n  typeof _options.onToggle === 'function' && _options.onToggle();\n  requestAnimationFrame(calculateFinalState);\n\n  // we return the cancel function\n  // returns:\n  //   false if the cancel cannot be performed (the morph ended already or has not started)\n  //   true else\n  return function (abort) {\n    return cancel(abort);\n  };\n}","map":{"version":3,"names":["id","offsetBase","getAbsolutePosition","el","resize","document","createElement","style","cssText","body","appendChild","boundingRect","getBoundingClientRect","baseRect","_window$getComputedSt","window","getComputedStyle","marginLeft","marginRight","marginTop","marginBottom","marginH","parseInt","marginV","left","top","width","right","height","bottom","widthM","heightM","getAbsoluteSize","scrollWidth","scrollHeight","styleEdges","styleBorderRadiuses","reStyleSkipKey","reStyleSkipRule","props","fixed","i","length","prop","styleLen","val","test","indexOf","suffix","replace","j","subProp","val1","val2","split","filter","join","zIndexPositions","getMaxZIndex","elStart","maxIndex","_window$getComputedSt2","position","zIndex","zIndexNum","Number","includes","parentNode","normalizeElements","opts","from","to","normalizeOptions","options","duration","onEnd","_objectSpread","waitFor","isNaN","easing","delay","fill","useCSS","hideFromClone","keepToClone","tween","tweenFromOpacity","parseFloat","tweenToOpacity","getElement","element","type","_typeof","querySelector","isValidElement","ownerDocument","morph","_options","cancel","cancelStatus","endElementTo","elements","elFrom","qMorphCancel","animationFromClone","animationFromTween","animationToClone","animationTo","elFromParent","elFromNext","nextElementSibling","elFromPosition","_getAbsoluteSize","elFromParentWidthBefore","elFromParentHeightBefore","_getComputedStyle","elFromBorderWidth","borderWidth","elFromBorderStyle","borderStyle","elFromBorderColor","borderColor","elFromBorderRadius","borderRadius","elFromBackground","backgroundColor","elFromTransform","transform","elFromPositioningType","elFromCssText","elFromClassSaved","classList","toString","elFromStyleSaved","elFromClone","cloneNode","elFromTween","className","c","add","setAttribute","transition","animation","pointerEvents","insertBefore","remove","calculateFinalState","elTo","_getAbsoluteSize2","elFromParentWidthAfter","elFromParentHeightAfter","_getAbsoluteSize3","elToParentWidthBefore","elToParentHeightBefore","animate","innerHTML","elToParent","_getAbsoluteSize4","elToParentWidthAfter","elToParentHeightAfter","elToClone","elToNext","_getComputedStyle2","elToBorderWidth","elToBorderStyle","elToBorderColor","elToBorderRadius","elToBackground","elToTransform","elToPositioningType","elToCssText","elToClassSaved","elToStyleSaved","elToPosition","deltaX","deltaY","scaleX","scaleY","elFromParentWidthDiff","elFromParentHeightDiff","elToParentWidthDiff","elToParentHeightDiff","elFromCloneWidth","Math","max","elFromCloneHeight","elToCloneWidth","elToCloneHeight","elSharedSize","elToNeedsFixedPosition","parent","display","flex","opacity","minWidth","maxWidth","minHeight","maxHeight","classes","Object","elFromZIndex","elToZIndex","documentScroll","documentElement","scrollLeft","scrollTop","concat","margin","overflow","overflowX","overflowY","commonCleanup","aborted","resizeFrom","resizeTo","resizeFromTween","resizeToTween","tweenFrom","tweenTo","transformOrigin","cleanup","abort","removeEventListener","addEventListener","reverse","qAnimId","keyframesFromTween","keyframesFrom","keyframeToStart","keyframesTo","head","animationDirection","ev","animationName","then","delayPromise","Promise","resolve","setTimeout","timer","endFn","clearTimeout","onToggle","requestAnimationFrame"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/utils/morph.js"],"sourcesContent":["let id = 0\nlet offsetBase = void 0\n\nfunction getAbsolutePosition (el, resize) {\n  if (offsetBase === void 0) {\n    offsetBase = document.createElement('div')\n    offsetBase.style.cssText = 'position: absolute; left: 0; top: 0'\n    document.body.appendChild(offsetBase)\n  }\n\n  const boundingRect = el.getBoundingClientRect()\n  const baseRect = offsetBase.getBoundingClientRect()\n  const { marginLeft, marginRight, marginTop, marginBottom } = window.getComputedStyle(el)\n  const marginH = parseInt(marginLeft, 10) + parseInt(marginRight, 10)\n  const marginV = parseInt(marginTop, 10) + parseInt(marginBottom, 10)\n\n  return {\n    left: boundingRect.left - baseRect.left,\n    top: boundingRect.top - baseRect.top,\n    width: boundingRect.right - boundingRect.left,\n    height: boundingRect.bottom - boundingRect.top,\n    widthM: boundingRect.right - boundingRect.left + (resize === true ? 0 : marginH),\n    heightM: boundingRect.bottom - boundingRect.top + (resize === true ? 0 : marginV),\n    marginH: resize === true ? marginH : 0,\n    marginV: resize === true ? marginV : 0\n  }\n}\n\nfunction getAbsoluteSize (el) {\n  return {\n    width: el.scrollWidth,\n    height: el.scrollHeight\n  }\n}\n\n// firefox rulez\nconst styleEdges = [ 'Top', 'Right', 'Bottom', 'Left' ]\nconst styleBorderRadiuses = [ 'borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius' ]\nconst reStyleSkipKey = /-block|-inline|block-|inline-/\nconst reStyleSkipRule = /(-block|-inline|block-|inline-).*:/\n\nfunction getComputedStyle (el, props) {\n  const style = window.getComputedStyle(el)\n  const fixed = {}\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i]\n\n    if (style[prop] === '') {\n      if (prop === 'cssText') {\n        const styleLen = style.length\n        let val = ''\n\n        for (let i = 0; i < styleLen; i++) {\n          if (reStyleSkipKey.test(style[i]) !== true) {\n            val += style[i] + ': ' + style[style[i]] + '; '\n          }\n        }\n\n        fixed[prop] = val\n      }\n      else if ([ 'borderWidth', 'borderStyle', 'borderColor' ].indexOf(prop) > -1) {\n        const suffix = prop.replace('border', '')\n        let val = ''\n        for (let j = 0; j < styleEdges.length; j++) {\n          const subProp = 'border' + styleEdges[j] + suffix\n          val += style[subProp] + ' '\n        }\n        fixed[prop] = val\n      }\n      else if (prop === 'borderRadius') {\n        let val1 = ''\n        let val2 = ''\n        for (let j = 0; j < styleBorderRadiuses.length; j++) {\n          const val = style[styleBorderRadiuses[j]].split(' ')\n          val1 += val[0] + ' '\n          val2 += (val[1] === void 0 ? val[0] : val[1]) + ' '\n        }\n        fixed[prop] = val1 + '/ ' + val2\n      }\n      else {\n        fixed[prop] = style[prop]\n      }\n    }\n    else {\n      if (prop === 'cssText') {\n        fixed[prop] = style[prop]\n          .split(';')\n          .filter(val => reStyleSkipRule.test(val) !== true)\n          .join(';')\n      }\n      else {\n        fixed[prop] = style[prop]\n      }\n    }\n  }\n\n  return fixed\n}\n\nconst zIndexPositions = ['absolute', 'fixed', 'relative', 'sticky']\n\nfunction getMaxZIndex (elStart) {\n  let el = elStart\n  let maxIndex = 0\n\n  while (el !== null && el !== document) {\n    const { position, zIndex } = window.getComputedStyle(el)\n    const zIndexNum = Number(zIndex)\n\n    if (\n      zIndexNum > maxIndex &&\n      (el === elStart || zIndexPositions.includes(position) === true)\n    ) {\n      maxIndex = zIndexNum\n    }\n\n    el = el.parentNode\n  }\n\n  return maxIndex\n}\n\nfunction normalizeElements (opts) {\n  return {\n    from: opts.from,\n    to: opts.to !== void 0\n      ? opts.to\n      : opts.from\n  }\n}\n\nfunction normalizeOptions (options) {\n  if (typeof options === 'number') {\n    options = {\n      duration: options\n    }\n  }\n  else if (typeof options === 'function') {\n    options = {\n      onEnd: options\n    }\n  }\n\n  return {\n    ...options,\n\n    waitFor: options.waitFor === void 0 ? 0 : options.waitFor,\n\n    duration: isNaN(options.duration) === true ? 300 : parseInt(options.duration, 10),\n    easing: typeof options.easing === 'string' && options.easing.length > 0 ? options.easing : 'ease-in-out',\n    delay: isNaN(options.delay) === true ? 0 : parseInt(options.delay, 10),\n    fill: typeof options.fill === 'string' && options.fill.length > 0 ? options.fill : 'none',\n\n    resize: options.resize === true,\n    useCSS: options.useCSS === true,\n    hideFromClone: options.hideFromClone === true,\n    keepToClone: options.keepToClone === true,\n\n    tween: options.tween === true,\n    tweenFromOpacity: isNaN(options.tweenFromOpacity) === true ? 0.6 : parseFloat(options.tweenFromOpacity),\n    tweenToOpacity: isNaN(options.tweenToOpacity) === true ? 0.5 : parseFloat(options.tweenToOpacity)\n  }\n}\n\nfunction getElement (element) {\n  const type = typeof element\n\n  return type === 'function'\n    ? element()\n    : (\n      type === 'string'\n        ? document.querySelector(element)\n        : element\n    )\n}\n\nfunction isValidElement (element) {\n  return element &&\n    element.ownerDocument === document &&\n    element.parentNode !== null\n}\n\nexport default function morph (_options) {\n  let cancel = () => false\n  let cancelStatus = false\n  let endElementTo = true\n\n  const elements = normalizeElements(_options)\n  const options = normalizeOptions(_options)\n\n  const elFrom = getElement(elements.from)\n  if (isValidElement(elFrom) !== true) {\n    // we return a cancel function that return false, meaning the cancel function failed\n    return cancel\n  }\n  // we clean other morphs running on this element\n  typeof elFrom.qMorphCancel === 'function' && elFrom.qMorphCancel()\n\n  let animationFromClone = void 0\n  let animationFromTween = void 0\n  let animationToClone = void 0\n  let animationTo = void 0\n\n  const elFromParent = elFrom.parentNode\n  const elFromNext = elFrom.nextElementSibling\n\n  // we get the dimensions and characteristics\n  // of the parent of the initial element before changes\n  const elFromPosition = getAbsolutePosition(elFrom, options.resize)\n  const {\n    width: elFromParentWidthBefore,\n    height: elFromParentHeightBefore\n  } = getAbsoluteSize(elFromParent)\n  const {\n    borderWidth: elFromBorderWidth,\n    borderStyle: elFromBorderStyle,\n    borderColor: elFromBorderColor,\n    borderRadius: elFromBorderRadius,\n    backgroundColor: elFromBackground,\n    transform: elFromTransform,\n    position: elFromPositioningType,\n    cssText: elFromCssText\n  } = getComputedStyle(elFrom, [ 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'backgroundColor', 'transform', 'position', 'cssText' ])\n  const elFromClassSaved = elFrom.classList.toString()\n  const elFromStyleSaved = elFrom.style.cssText\n\n  // we make a clone of the initial element and\n  // use it to display until the final element is ready\n  // and to change the occupied space during animation\n  const elFromClone = elFrom.cloneNode(true)\n  const elFromTween = options.tween === true ? elFrom.cloneNode(true) : void 0\n\n  if (elFromTween !== void 0) {\n    elFromTween.className = elFromTween.classList.toString().split(' ').filter(c => /^bg-/.test(c) === false).join(' ')\n  }\n\n  // if the initial element is not going to be removed do not show the placeholder\n  options.hideFromClone === true && elFromClone.classList.add('q-morph--internal')\n\n  // prevent interaction with placeholder\n  elFromClone.setAttribute('aria-hidden', 'true')\n  elFromClone.style.transition = 'none'\n  elFromClone.style.animation = 'none'\n  elFromClone.style.pointerEvents = 'none'\n  elFromParent.insertBefore(elFromClone, elFromNext)\n\n  // we mark the element with its cleanup function\n  elFrom.qMorphCancel = () => {\n    cancelStatus = true\n\n    // we clean the clone of the initial element\n    elFromClone.remove()\n    elFromTween !== void 0 && elFromTween.remove()\n\n    options.hideFromClone === true && elFromClone.classList.remove('q-morph--internal')\n\n    // we remove the cleanup function from the element\n    elFrom.qMorphCancel = void 0\n  }\n\n  // will be called after Vue catches up with the changes done by _options.onToggle() function\n  const calculateFinalState = () => {\n    const elTo = getElement(elements.to)\n    if (cancelStatus === true || isValidElement(elTo) !== true) {\n      typeof elFrom.qMorphCancel === 'function' && elFrom.qMorphCancel()\n\n      return\n    }\n    // we clean other morphs running on this element\n    elFrom !== elTo && typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel()\n\n    // we hide the final element and the clone of the initial element\n    // we don't hide the final element if we want both it and the animated one visible\n    options.keepToClone !== true && elTo.classList.add('q-morph--internal')\n    elFromClone.classList.add('q-morph--internal')\n\n    // we get the dimensions of the parent of the initial element after changes\n    // the difference is how much we should animate the clone\n    const {\n      width: elFromParentWidthAfter,\n      height: elFromParentHeightAfter\n    } = getAbsoluteSize(elFromParent)\n\n    // we get the dimensions of the parent of the final element before changes\n    const {\n      width: elToParentWidthBefore,\n      height: elToParentHeightBefore\n    } = getAbsoluteSize(elTo.parentNode)\n\n    // then we show the clone of the initial element if we don't want it hidden\n    options.hideFromClone !== true && elFromClone.classList.remove('q-morph--internal')\n\n    // we mark the element with its cleanup function\n    elTo.qMorphCancel = () => {\n      cancelStatus = true\n\n      // we clean the clone of the initial element\n      elFromClone.remove()\n      elFromTween !== void 0 && elFromTween.remove()\n\n      options.hideFromClone === true && elFromClone.classList.remove('q-morph--internal')\n\n      // we show the final element\n      options.keepToClone !== true && elTo.classList.remove('q-morph--internal')\n\n      // we remove the cleanup function from the elements\n      elFrom.qMorphCancel = void 0\n      elTo.qMorphCancel = void 0\n    }\n\n    // will be called after waitFor (give time to render the final element)\n    const animate = () => {\n      if (cancelStatus === true) {\n        typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel()\n\n        return\n      }\n\n      // now the animation starts, so we only need the clone\n      // of the initial element as a spacer\n      // we also hide it to calculate the dimensions of the\n      // parent of the final element after the changes\n      if (options.hideFromClone !== true) {\n        elFromClone.classList.add('q-morph--internal')\n        elFromClone.innerHTML = ''\n        elFromClone.style.left = 0\n        elFromClone.style.right = 'unset'\n        elFromClone.style.top = 0\n        elFromClone.style.bottom = 'unset'\n        elFromClone.style.transform = 'none'\n      }\n\n      // we show the final element\n      if (options.keepToClone !== true) {\n        elTo.classList.remove('q-morph--internal')\n      }\n\n      // we get the dimensions of the parent of the final element after changes\n      // the difference is how much we should animate the clone\n      const elToParent = elTo.parentNode\n      const {\n        width: elToParentWidthAfter,\n        height: elToParentHeightAfter\n      } = getAbsoluteSize(elToParent)\n\n      const elToClone = elTo.cloneNode(options.keepToClone)\n      elToClone.setAttribute('aria-hidden', 'true')\n      if (options.keepToClone !== true) {\n        elToClone.style.left = 0\n        elToClone.style.right = 'unset'\n        elToClone.style.top = 0\n        elToClone.style.bottom = 'unset'\n        elToClone.style.transform = 'none'\n        elToClone.style.pointerEvents = 'none'\n      }\n      elToClone.classList.add('q-morph--internal')\n\n      // if elFrom is the same as elTo the next element is elFromClone\n      const elToNext = elTo === elFrom && elFromParent === elToParent ? elFromClone : elTo.nextElementSibling\n      elToParent.insertBefore(elToClone, elToNext)\n\n      const {\n        borderWidth: elToBorderWidth,\n        borderStyle: elToBorderStyle,\n        borderColor: elToBorderColor,\n        borderRadius: elToBorderRadius,\n        backgroundColor: elToBackground,\n        transform: elToTransform,\n        position: elToPositioningType,\n        cssText: elToCssText\n      } = getComputedStyle(elTo, [ 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'backgroundColor', 'transform', 'position', 'cssText' ])\n      const elToClassSaved = elTo.classList.toString()\n      const elToStyleSaved = elTo.style.cssText\n\n      // we set the computed styles on the element (to be able to remove classes)\n      elTo.style.cssText = elToCssText\n      elTo.style.transform = 'none'\n      elTo.style.animation = 'none'\n      elTo.style.transition = 'none'\n      // we strip the background classes (background color can no longer be animated if !important is used)\n      elTo.className = elToClassSaved.split(' ').filter(c => /^bg-/.test(c) === false).join(' ')\n\n      const elToPosition = getAbsolutePosition(elTo, options.resize)\n\n      const deltaX = elFromPosition.left - elToPosition.left\n      const deltaY = elFromPosition.top - elToPosition.top\n      const scaleX = elFromPosition.width / (elToPosition.width > 0 ? elToPosition.width : 10)\n      const scaleY = elFromPosition.height / (elToPosition.height > 0 ? elToPosition.height : 100)\n\n      const elFromParentWidthDiff = elFromParentWidthBefore - elFromParentWidthAfter\n      const elFromParentHeightDiff = elFromParentHeightBefore - elFromParentHeightAfter\n      const elToParentWidthDiff = elToParentWidthAfter - elToParentWidthBefore\n      const elToParentHeightDiff = elToParentHeightAfter - elToParentHeightBefore\n\n      const elFromCloneWidth = Math.max(elFromPosition.widthM, elFromParentWidthDiff)\n      const elFromCloneHeight = Math.max(elFromPosition.heightM, elFromParentHeightDiff)\n      const elToCloneWidth = Math.max(elToPosition.widthM, elToParentWidthDiff)\n      const elToCloneHeight = Math.max(elToPosition.heightM, elToParentHeightDiff)\n\n      const elSharedSize = elFrom === elTo &&\n        [ 'absolute', 'fixed' ].includes(elToPositioningType) === false &&\n        [ 'absolute', 'fixed' ].includes(elFromPositioningType) === false\n\n      // if the final element has fixed position or if a parent\n      // has fixed position we need to animate it as fixed\n      let elToNeedsFixedPosition = elToPositioningType === 'fixed'\n      let parent = elToParent\n      while (elToNeedsFixedPosition !== true && parent !== document) {\n        elToNeedsFixedPosition = window.getComputedStyle(parent).position === 'fixed'\n        parent = parent.parentNode\n      }\n\n      // we show the spacer for the initial element\n      if (options.hideFromClone !== true) {\n        elFromClone.style.display = 'block'\n        elFromClone.style.flex = '0 0 auto'\n        elFromClone.style.opacity = 0\n        elFromClone.style.minWidth = 'unset'\n        elFromClone.style.maxWidth = 'unset'\n        elFromClone.style.minHeight = 'unset'\n        elFromClone.style.maxHeight = 'unset'\n        elFromClone.classList.remove('q-morph--internal')\n      }\n\n      // we show the spacer for the final element\n      if (options.keepToClone !== true) {\n        elToClone.style.display = 'block'\n        elToClone.style.flex = '0 0 auto'\n        elToClone.style.opacity = 0\n        elToClone.style.minWidth = 'unset'\n        elToClone.style.maxWidth = 'unset'\n        elToClone.style.minHeight = 'unset'\n        elToClone.style.maxHeight = 'unset'\n      }\n      elToClone.classList.remove('q-morph--internal')\n\n      // we apply classes specified by user\n      if (typeof options.classes === 'string') {\n        elTo.className += ' ' + options.classes\n      }\n\n      // we apply styles specified by user\n      if (typeof options.style === 'string') {\n        elTo.style.cssText += ' ' + options.style\n      }\n      else if (options.style === Object(options.style)) {\n        for (const prop in options.style) {\n          elTo.style[prop] = options.style[prop]\n        }\n      }\n\n      const elFromZIndex = getMaxZIndex(elFromClone)\n      const elToZIndex = getMaxZIndex(elTo)\n\n      // we position the morphing element\n      // if we use fixed position for the final element we need to adjust for scroll\n      const documentScroll = elToNeedsFixedPosition === true\n        ? document.documentElement\n        : { scrollLeft: 0, scrollTop: 0 }\n      elTo.style.position = elToNeedsFixedPosition === true ? 'fixed' : 'absolute'\n      elTo.style.left = `${elToPosition.left - documentScroll.scrollLeft}px`\n      elTo.style.right = 'unset'\n      elTo.style.top = `${elToPosition.top - documentScroll.scrollTop}px`\n      elTo.style.margin = 0\n\n      if (options.resize === true) {\n        elTo.style.minWidth = 'unset'\n        elTo.style.maxWidth = 'unset'\n        elTo.style.minHeight = 'unset'\n        elTo.style.maxHeight = 'unset'\n        elTo.style.overflow = 'hidden'\n        elTo.style.overflowX = 'hidden'\n        elTo.style.overflowY = 'hidden'\n      }\n\n      document.body.appendChild(elTo)\n\n      if (elFromTween !== void 0) {\n        elFromTween.style.cssText = elFromCssText\n        elFromTween.style.transform = 'none'\n        elFromTween.style.animation = 'none'\n        elFromTween.style.transition = 'none'\n\n        elFromTween.style.position = elTo.style.position\n        elFromTween.style.left = `${elFromPosition.left - documentScroll.scrollLeft}px`\n        elFromTween.style.right = 'unset'\n        elFromTween.style.top = `${elFromPosition.top - documentScroll.scrollTop}px`\n        elFromTween.style.margin = 0\n        elFromTween.style.pointerEvents = 'none'\n\n        if (options.resize === true) {\n          elFromTween.style.minWidth = 'unset'\n          elFromTween.style.maxWidth = 'unset'\n          elFromTween.style.minHeight = 'unset'\n          elFromTween.style.maxHeight = 'unset'\n          elFromTween.style.overflow = 'hidden'\n          elFromTween.style.overflowX = 'hidden'\n          elFromTween.style.overflowY = 'hidden'\n        }\n\n        document.body.appendChild(elFromTween)\n      }\n\n      const commonCleanup = aborted => {\n        // we put the element back in it's place\n        // and restore the styles and classes\n        if (elFrom === elTo && endElementTo !== true) {\n          elTo.style.cssText = elFromStyleSaved\n          elTo.className = elFromClassSaved\n        }\n        else {\n          elTo.style.cssText = elToStyleSaved\n          elTo.className = elToClassSaved\n        }\n        elToClone.parentNode === elToParent && elToParent.insertBefore(elTo, elToClone)\n\n        // we clean the spacers\n        elFromClone.remove()\n        elToClone.remove()\n        elFromTween !== void 0 && elFromTween.remove()\n\n        // cancel will be no longer available\n        cancel = () => false\n\n        elFrom.qMorphCancel = void 0\n        elTo.qMorphCancel = void 0\n\n        // we are ready\n        if (typeof options.onEnd === 'function') {\n          options.onEnd(endElementTo === true ? 'to' : 'from', aborted === true)\n        }\n      }\n\n      if (options.useCSS !== true && typeof elTo.animate === 'function') {\n        const resizeFrom = options.resize === true\n          ? {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n            width: `${elFromCloneWidth}px`,\n            height: `${elFromCloneHeight}px`\n          }\n          : {\n            transform: `translate(${deltaX}px, ${deltaY}px) scale(${scaleX}, ${scaleY})`\n          }\n        const resizeTo = options.resize === true\n          ? {\n            width: `${elToCloneWidth}px`,\n            height: `${elToCloneHeight}px`\n          }\n          : {}\n        const resizeFromTween = options.resize === true\n          ? {\n            width: `${elFromCloneWidth}px`,\n            height: `${elFromCloneHeight}px`\n          }\n          : {}\n        const resizeToTween = options.resize === true\n          ? {\n            transform: `translate(${-1 * deltaX}px, ${-1 * deltaY}px)`,\n            width: `${elToCloneWidth}px`,\n            height: `${elToCloneHeight}px`\n          }\n          : {\n            transform: `translate(${-1 * deltaX}px, ${-1 * deltaY}px) scale(${1 / scaleX}, ${1 / scaleY})`\n          }\n        const tweenFrom = elFromTween !== void 0\n          ? { opacity: options.tweenToOpacity }\n          : { backgroundColor: elFromBackground }\n        const tweenTo = elFromTween !== void 0\n          ? { opacity: 1 }\n          : { backgroundColor: elToBackground }\n        animationTo = elTo.animate([\n          {\n            margin: 0,\n            borderWidth: elFromBorderWidth,\n            borderStyle: elFromBorderStyle,\n            borderColor: elFromBorderColor,\n            borderRadius: elFromBorderRadius,\n            zIndex: elFromZIndex,\n            transformOrigin: '0 0',\n            ...resizeFrom,\n            ...tweenFrom\n          },\n          {\n            margin: 0,\n            borderWidth: elToBorderWidth,\n            borderStyle: elToBorderStyle,\n            borderColor: elToBorderColor,\n            borderRadius: elToBorderRadius,\n            zIndex: elToZIndex,\n            transformOrigin: '0 0',\n            transform: elToTransform,\n            ...resizeTo,\n            ...tweenTo\n          }\n        ], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        })\n\n        animationFromTween = elFromTween === void 0 ? void 0 : elFromTween.animate([\n          {\n            opacity: options.tweenFromOpacity,\n            margin: 0,\n            borderWidth: elFromBorderWidth,\n            borderStyle: elFromBorderStyle,\n            borderColor: elFromBorderColor,\n            borderRadius: elFromBorderRadius,\n            zIndex: elFromZIndex,\n            transformOrigin: '0 0',\n            transform: elFromTransform,\n            ...resizeFromTween\n          },\n          {\n            opacity: 0,\n            margin: 0,\n            borderWidth: elToBorderWidth,\n            borderStyle: elToBorderStyle,\n            borderColor: elToBorderColor,\n            borderRadius: elToBorderRadius,\n            zIndex: elToZIndex,\n            transformOrigin: '0 0',\n            ...resizeToTween\n          }\n        ], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        })\n\n        animationFromClone = options.hideFromClone === true || elSharedSize === true ? void 0 : elFromClone.animate([\n          {\n            margin: `${elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0}px ${elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0}px`,\n            width: `${elFromCloneWidth + elFromPosition.marginH}px`,\n            height: `${elFromCloneHeight + elFromPosition.marginV}px`\n          },\n          {\n            margin: 0,\n            width: 0,\n            height: 0\n          }\n        ], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        })\n\n        animationToClone = options.keepToClone === true ? void 0 : elToClone.animate([\n          elSharedSize === true\n            ? {\n              margin: `${elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0}px ${elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0}px`,\n              width: `${elFromCloneWidth + elFromPosition.marginH}px`,\n              height: `${elFromCloneHeight + elFromPosition.marginV}px`\n            }\n            : {\n              margin: 0,\n              width: 0,\n              height: 0\n            },\n          {\n            margin: `${elToParentHeightDiff < 0 ? elToParentHeightDiff / 2 : 0}px ${elToParentWidthDiff < 0 ? elToParentWidthDiff / 2 : 0}px`,\n            width: `${elToCloneWidth + elToPosition.marginH}px`,\n            height: `${elToCloneHeight + elToPosition.marginV}px`\n          }\n        ], {\n          duration: options.duration,\n          easing: options.easing,\n          fill: options.fill,\n          delay: options.delay\n        })\n\n        const cleanup = abort => {\n          animationFromClone !== void 0 && animationFromClone.cancel()\n          animationFromTween !== void 0 && animationFromTween.cancel()\n          animationToClone !== void 0 && animationToClone.cancel()\n          animationTo.cancel()\n\n          animationTo.removeEventListener('finish', cleanup)\n          animationTo.removeEventListener('cancel', cleanup)\n\n          commonCleanup(abort)\n\n          // we clean the animations\n          animationFromClone = void 0\n          animationFromTween = void 0\n          animationToClone = void 0\n          animationTo = void 0\n        }\n\n        elFrom.qMorphCancel = () => {\n          elFrom.qMorphCancel = void 0\n          cancelStatus = true\n          cleanup()\n        }\n        elTo.qMorphCancel = () => {\n          elTo.qMorphCancel = void 0\n          cancelStatus = true\n          cleanup()\n        }\n\n        animationTo.addEventListener('finish', cleanup)\n        animationTo.addEventListener('cancel', cleanup)\n\n        cancel = abort => {\n          // we are not in a morph that we can cancel\n          if (cancelStatus === true || animationTo === void 0) {\n            return false\n          }\n\n          if (abort === true) {\n            cleanup(true)\n            return true\n          }\n\n          endElementTo = endElementTo !== true\n\n          animationFromClone !== void 0 && animationFromClone.reverse()\n          animationFromTween !== void 0 && animationFromTween.reverse()\n          animationToClone !== void 0 && animationToClone.reverse()\n          animationTo.reverse()\n\n          return true\n        }\n      }\n      else {\n        const qAnimId = `q-morph-anim-${++id}`\n        const style = document.createElement('style')\n        const resizeFrom = options.resize === true\n          ? `\n            transform: translate(${deltaX}px, ${deltaY}px);\n            width: ${elFromCloneWidth}px;\n            height: ${elFromCloneHeight}px;\n          `\n          : `transform: translate(${deltaX}px, ${deltaY}px) scale(${scaleX}, ${scaleY});`\n        const resizeTo = options.resize === true\n          ? `\n            width: ${elToCloneWidth}px;\n            height: ${elToCloneHeight}px;\n          `\n          : ''\n        const resizeFromTween = options.resize === true\n          ? `\n            width: ${elFromCloneWidth}px;\n            height: ${elFromCloneHeight}px;\n          `\n          : ''\n        const resizeToTween = options.resize === true\n          ? `\n            transform: translate(${-1 * deltaX}px, ${-1 * deltaY}px);\n            width: ${elToCloneWidth}px;\n            height: ${elToCloneHeight}px;\n          `\n          : `transform: translate(${-1 * deltaX}px, ${-1 * deltaY}px) scale(${1 / scaleX}, ${1 / scaleY});`\n        const tweenFrom = elFromTween !== void 0\n          ? `opacity: ${options.tweenToOpacity};`\n          : `background-color: ${elFromBackground};`\n        const tweenTo = elFromTween !== void 0\n          ? 'opacity: 1;'\n          : `background-color: ${elToBackground};`\n        const keyframesFromTween = elFromTween === void 0\n          ? ''\n          : `\n            @keyframes ${qAnimId}-from-tween {\n              0% {\n                opacity: ${options.tweenFromOpacity};\n                margin: 0;\n                border-width: ${elFromBorderWidth};\n                border-style: ${elFromBorderStyle};\n                border-color: ${elFromBorderColor};\n                border-radius: ${elFromBorderRadius};\n                z-index: ${elFromZIndex};\n                transform-origin: 0 0;\n                transform: ${elFromTransform};\n                ${resizeFromTween}\n              }\n\n              100% {\n                opacity: 0;\n                margin: 0;\n                border-width: ${elToBorderWidth};\n                border-style: ${elToBorderStyle};\n                border-color: ${elToBorderColor};\n                border-radius: ${elToBorderRadius};\n                z-index: ${elToZIndex};\n                transform-origin: 0 0;\n                ${resizeToTween}\n              }\n            }\n          `\n        const keyframesFrom = options.hideFromClone === true || elSharedSize === true\n          ? ''\n          : `\n            @keyframes ${qAnimId}-from {\n              0% {\n                margin: ${elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0}px ${elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0}px;\n                width: ${elFromCloneWidth + elFromPosition.marginH}px;\n                height: ${elFromCloneHeight + elFromPosition.marginV}px;\n              }\n\n              100% {\n                margin: 0;\n                width: 0;\n                height: 0;\n              }\n            }\n          `\n        const keyframeToStart = elSharedSize === true\n          ? `\n            margin: ${elFromParentHeightDiff < 0 ? elFromParentHeightDiff / 2 : 0}px ${elFromParentWidthDiff < 0 ? elFromParentWidthDiff / 2 : 0}px;\n            width: ${elFromCloneWidth + elFromPosition.marginH}px;\n            height: ${elFromCloneHeight + elFromPosition.marginV}px;\n          `\n          : `\n            margin: 0;\n            width: 0;\n            height: 0;\n          `\n        const keyframesTo = options.keepToClone === true\n          ? ''\n          : `\n            @keyframes ${qAnimId}-to {\n              0% {\n                ${keyframeToStart}\n              }\n\n              100% {\n                margin: ${elToParentHeightDiff < 0 ? elToParentHeightDiff / 2 : 0}px ${elToParentWidthDiff < 0 ? elToParentWidthDiff / 2 : 0}px;\n                width: ${elToCloneWidth + elToPosition.marginH}px;\n                height: ${elToCloneHeight + elToPosition.marginV}px;\n              }\n            }\n          `\n        style.innerHTML = `\n          @keyframes ${qAnimId} {\n            0% {\n              margin: 0;\n              border-width: ${elFromBorderWidth};\n              border-style: ${elFromBorderStyle};\n              border-color: ${elFromBorderColor};\n              border-radius: ${elFromBorderRadius};\n              background-color: ${elFromBackground};\n              z-index: ${elFromZIndex};\n              transform-origin: 0 0;\n              ${resizeFrom}\n              ${tweenFrom}\n            }\n\n            100% {\n              margin: 0;\n              border-width: ${elToBorderWidth};\n              border-style: ${elToBorderStyle};\n              border-color: ${elToBorderColor};\n              border-radius: ${elToBorderRadius};\n              background-color: ${elToBackground};\n              z-index: ${elToZIndex};\n              transform-origin: 0 0;\n              transform: ${elToTransform};\n              ${resizeTo}\n              ${tweenTo}\n            }\n          }\n\n          ${keyframesFrom}\n\n          ${keyframesFromTween}\n\n          ${keyframesTo}\n        `\n        document.head.appendChild(style)\n\n        let animationDirection = 'normal'\n\n        elFromClone.style.animation = `${options.duration}ms ${options.easing} ${options.delay}ms ${animationDirection} ${options.fill} ${qAnimId}-from`\n        if (elFromTween !== void 0) {\n          elFromTween.style.animation = `${options.duration}ms ${options.easing} ${options.delay}ms ${animationDirection} ${options.fill} ${qAnimId}-from-tween`\n        }\n        elToClone.style.animation = `${options.duration}ms ${options.easing} ${options.delay}ms ${animationDirection} ${options.fill} ${qAnimId}-to`\n        elTo.style.animation = `${options.duration}ms ${options.easing} ${options.delay}ms ${animationDirection} ${options.fill} ${qAnimId}`\n\n        const cleanup = ev => {\n          if (ev === Object(ev) && ev.animationName !== qAnimId) {\n            return\n          }\n\n          elTo.removeEventListener('animationend', cleanup)\n          elTo.removeEventListener('animationcancel', cleanup)\n\n          commonCleanup()\n\n          // we clean the animations\n          style.remove()\n        }\n\n        elFrom.qMorphCancel = () => {\n          elFrom.qMorphCancel = void 0\n          cancelStatus = true\n          cleanup()\n        }\n        elTo.qMorphCancel = () => {\n          elTo.qMorphCancel = void 0\n          cancelStatus = true\n          cleanup()\n        }\n\n        elTo.addEventListener('animationend', cleanup)\n        elTo.addEventListener('animationcancel', cleanup)\n\n        cancel = abort => {\n          // we are not in a morph that we can cancel\n          if (cancelStatus === true || !elTo || !elFromClone || !elToClone) {\n            return false\n          }\n\n          if (abort === true) {\n            cleanup()\n\n            return true\n          }\n\n          endElementTo = endElementTo !== true\n\n          animationDirection = animationDirection === 'normal' ? 'reverse' : 'normal'\n\n          elFromClone.style.animationDirection = animationDirection\n          elFromTween.style.animationDirection = animationDirection\n          elToClone.style.animationDirection = animationDirection\n          elTo.style.animationDirection = animationDirection\n\n          return true\n        }\n      }\n    }\n\n    if (\n      options.waitFor > 0 ||\n      options.waitFor === 'transitionend' ||\n      (options.waitFor === Object(options.waitFor) && typeof options.waitFor.then === 'function')\n    ) {\n      const delayPromise = options.waitFor > 0\n        ? new Promise(resolve => setTimeout(resolve, options.waitFor))\n        : (\n          options.waitFor === 'transitionend'\n            ? new Promise(resolve => {\n              const timer = setTimeout(() => {\n                endFn()\n              }, 400)\n\n              const endFn = ev => {\n                clearTimeout(timer)\n\n                if (elTo) {\n                  elTo.removeEventListener('transitionend', endFn)\n                  elTo.removeEventListener('transitioncancel', endFn)\n                }\n\n                resolve()\n              }\n\n              elTo.addEventListener('transitionend', endFn)\n              elTo.addEventListener('transitioncancel', endFn)\n            })\n            : options.waitFor\n        )\n\n      delayPromise\n        .then(animate)\n        .catch(() => {\n          typeof elTo.qMorphCancel === 'function' && elTo.qMorphCancel()\n        })\n    }\n    else {\n      animate()\n    }\n  }\n\n  typeof _options.onToggle === 'function' && _options.onToggle()\n  requestAnimationFrame(calculateFinalState)\n\n  // we return the cancel function\n  // returns:\n  //   false if the cancel cannot be performed (the morph ended already or has not started)\n  //   true else\n  return abort => cancel(abort)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}