{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/projetos/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport QBtn from '../btn/QBtn.js';\nimport QBtnGroup from '../btn-group/QBtnGroup.js';\nimport ListenersMixin from '../../mixins/listeners.js';\nimport FormMixin from '../../mixins/form.js';\nimport RippleMixin from '../../mixins/ripple.js';\nimport { slot, mergeSlot } from '../../utils/slot.js';\nexport default Vue.extend({\n  name: 'QBtnToggle',\n  mixins: [ListenersMixin, RippleMixin, FormMixin],\n  props: {\n    value: {\n      required: true\n    },\n    options: {\n      type: Array,\n      required: true,\n      validator: function validator(v) {\n        return v.every(function (opt) {\n          return ('label' in opt || 'icon' in opt || 'slot' in opt) && 'value' in opt;\n        });\n      }\n    },\n    // To avoid seeing the active raise shadow through the transparent button, give it a color (even white).\n    color: String,\n    textColor: String,\n    toggleColor: {\n      type: String,\n      \"default\": 'primary'\n    },\n    toggleTextColor: String,\n    outline: Boolean,\n    flat: Boolean,\n    unelevated: Boolean,\n    rounded: Boolean,\n    push: Boolean,\n    glossy: Boolean,\n    size: String,\n    padding: String,\n    noCaps: Boolean,\n    noWrap: Boolean,\n    dense: Boolean,\n    readonly: Boolean,\n    disable: Boolean,\n    stack: Boolean,\n    stretch: Boolean,\n    spread: Boolean,\n    clearable: Boolean\n  },\n  computed: {\n    hasActiveValue: function hasActiveValue() {\n      var _this = this;\n      return this.options.find(function (opt) {\n        return opt.value === _this.value;\n      }) !== void 0;\n    },\n    formAttrs: function formAttrs() {\n      return {\n        type: 'hidden',\n        name: this.name,\n        value: this.value\n      };\n    },\n    btnOptions: function btnOptions() {\n      var _this2 = this;\n      var mergeOption = function mergeOption(opt, key) {\n        return opt[key] === void 0 ? _this2[key] : opt[key];\n      };\n      return this.options.map(function (opt, i) {\n        return {\n          slot: opt.slot,\n          options: {\n            key: i,\n            \"class\": opt[\"class\"],\n            style: opt.style,\n            on: _objectSpread(_objectSpread({}, _this2.qListeners), {}, {\n              click: function click(e) {\n                return _this2.__set(opt.value, opt, e);\n              }\n            }),\n            attrs: opt.attrs,\n            props: _objectSpread(_objectSpread({}, opt), {}, {\n              slot: void 0,\n              \"class\": void 0,\n              style: void 0,\n              value: void 0,\n              attrs: void 0,\n              outline: _this2.outline,\n              flat: _this2.flat,\n              rounded: _this2.rounded,\n              push: _this2.push,\n              unelevated: _this2.unelevated,\n              dense: _this2.dense,\n              disable: _this2.disable === true || opt.disable === true,\n              // Options that come from the button specific options first, then from general props\n              color: opt.value === _this2.value ? mergeOption(opt, 'toggleColor') : mergeOption(opt, 'color'),\n              textColor: opt.value === _this2.value ? mergeOption(opt, 'toggleTextColor') : mergeOption(opt, 'textColor'),\n              noCaps: mergeOption(opt, 'noCaps') === true,\n              noWrap: mergeOption(opt, 'noWrap') === true,\n              size: mergeOption(opt, 'size'),\n              padding: mergeOption(opt, 'padding'),\n              ripple: mergeOption(opt, 'ripple'),\n              stack: mergeOption(opt, 'stack') === true,\n              stretch: mergeOption(opt, 'stretch') === true\n            })\n          }\n        };\n      });\n    }\n  },\n  methods: {\n    __set: function __set(value, opt, e) {\n      if (this.readonly !== true) {\n        if (this.value === value) {\n          if (this.clearable === true) {\n            this.$emit('input', null, null);\n            this.$emit('clear');\n          }\n        } else {\n          this.$emit('input', value, opt);\n        }\n        this.$emit('click', e);\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n    var child = this.btnOptions.map(function (opt) {\n      return h(QBtn, _objectSpread({}, opt.options), opt.slot !== void 0 ? slot(_this3, opt.slot) : void 0);\n    });\n    if (this.name !== void 0 && this.disable !== true && this.hasActiveValue === true) {\n      this.__injectFormInput(child, 'push');\n    }\n    return h(QBtnGroup, {\n      staticClass: 'q-btn-toggle',\n      props: {\n        outline: this.outline,\n        flat: this.flat,\n        rounded: this.rounded,\n        push: this.push,\n        stretch: this.stretch,\n        unelevated: this.unelevated,\n        glossy: this.glossy,\n        spread: this.spread\n      }\n    }, mergeSlot(child, this, 'default'));\n  }\n});","map":{"version":3,"names":["Vue","QBtn","QBtnGroup","ListenersMixin","FormMixin","RippleMixin","slot","mergeSlot","extend","name","mixins","props","value","required","options","type","Array","validator","v","every","opt","color","String","textColor","toggleColor","toggleTextColor","outline","Boolean","flat","unelevated","rounded","push","glossy","size","padding","noCaps","noWrap","dense","readonly","disable","stack","stretch","spread","clearable","computed","hasActiveValue","_this","find","formAttrs","btnOptions","_this2","mergeOption","key","map","i","style","on","_objectSpread","qListeners","click","e","__set","attrs","ripple","methods","$emit","render","h","_this3","child","__injectFormInput","staticClass"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/components/btn-toggle/QBtnToggle.js"],"sourcesContent":["import Vue from 'vue'\n\nimport QBtn from '../btn/QBtn.js'\nimport QBtnGroup from '../btn-group/QBtnGroup.js'\n\nimport ListenersMixin from '../../mixins/listeners.js'\nimport FormMixin from '../../mixins/form.js'\nimport RippleMixin from '../../mixins/ripple.js'\n\nimport { slot, mergeSlot } from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QBtnToggle',\n\n  mixins: [ ListenersMixin, RippleMixin, FormMixin ],\n\n  props: {\n    value: {\n      required: true\n    },\n\n    options: {\n      type: Array,\n      required: true,\n      validator: v => v.every(\n        opt => ('label' in opt || 'icon' in opt || 'slot' in opt) && 'value' in opt\n      )\n    },\n\n    // To avoid seeing the active raise shadow through the transparent button, give it a color (even white).\n    color: String,\n    textColor: String,\n    toggleColor: {\n      type: String,\n      default: 'primary'\n    },\n    toggleTextColor: String,\n\n    outline: Boolean,\n    flat: Boolean,\n    unelevated: Boolean,\n    rounded: Boolean,\n    push: Boolean,\n    glossy: Boolean,\n\n    size: String,\n    padding: String,\n\n    noCaps: Boolean,\n    noWrap: Boolean,\n    dense: Boolean,\n    readonly: Boolean,\n    disable: Boolean,\n\n    stack: Boolean,\n    stretch: Boolean,\n\n    spread: Boolean,\n\n    clearable: Boolean\n  },\n\n  computed: {\n    hasActiveValue () {\n      return this.options.find(opt => opt.value === this.value) !== void 0\n    },\n\n    formAttrs () {\n      return {\n        type: 'hidden',\n        name: this.name,\n        value: this.value\n      }\n    },\n\n    btnOptions () {\n      const mergeOption = (opt, key) => opt[key] === void 0 ? this[key] : opt[key]\n\n      return this.options.map((opt, i) => ({\n        slot: opt.slot,\n\n        options: {\n          key: i,\n          class: opt.class,\n          style: opt.style,\n          on: {\n            ...this.qListeners,\n            click: e => this.__set(opt.value, opt, e)\n          },\n          attrs: opt.attrs,\n          props: {\n            ...opt,\n            slot: void 0,\n            class: void 0,\n            style: void 0,\n            value: void 0,\n            attrs: void 0,\n\n            outline: this.outline,\n            flat: this.flat,\n            rounded: this.rounded,\n            push: this.push,\n            unelevated: this.unelevated,\n            dense: this.dense,\n\n            disable: this.disable === true || opt.disable === true,\n\n            // Options that come from the button specific options first, then from general props\n            color: opt.value === this.value ? mergeOption(opt, 'toggleColor') : mergeOption(opt, 'color'),\n            textColor: opt.value === this.value ? mergeOption(opt, 'toggleTextColor') : mergeOption(opt, 'textColor'),\n            noCaps: mergeOption(opt, 'noCaps') === true,\n            noWrap: mergeOption(opt, 'noWrap') === true,\n\n            size: mergeOption(opt, 'size'),\n            padding: mergeOption(opt, 'padding'),\n            ripple: mergeOption(opt, 'ripple'),\n            stack: mergeOption(opt, 'stack') === true,\n            stretch: mergeOption(opt, 'stretch') === true\n          }\n        }\n      }))\n    }\n  },\n\n  methods: {\n    __set (value, opt, e) {\n      if (this.readonly !== true) {\n        if (this.value === value) {\n          if (this.clearable === true) {\n            this.$emit('input', null, null)\n            this.$emit('clear')\n          }\n        }\n        else {\n          this.$emit('input', value, opt)\n        }\n\n        this.$emit('click', e)\n      }\n    }\n  },\n\n  render (h) {\n    const child = this.btnOptions.map(opt => {\n      return h(QBtn, { ...opt.options }, opt.slot !== void 0 ? slot(this, opt.slot) : void 0)\n    })\n\n    if (this.name !== void 0 && this.disable !== true && this.hasActiveValue === true) {\n      this.__injectFormInput(child, 'push')\n    }\n\n    return h(QBtnGroup, {\n      staticClass: 'q-btn-toggle',\n      props: {\n        outline: this.outline,\n        flat: this.flat,\n        rounded: this.rounded,\n        push: this.push,\n        stretch: this.stretch,\n        unelevated: this.unelevated,\n        glossy: this.glossy,\n        spread: this.spread\n      }\n    }, mergeSlot(child, this, 'default'))\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}