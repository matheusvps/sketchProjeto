{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/projetos/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { $q, queues } from './install.js';\nvar mixin = {\n  mounted: function mounted() {\n    var _this = this;\n    queues.takeover.forEach(function (run) {\n      run(_this.$q);\n    });\n  }\n};\nexport default function (ctx) {\n  if (ctx.ssr) {\n    var q = _objectSpread(_objectSpread({}, $q), {}, {\n      ssrContext: ctx.ssr\n    });\n    Object.assign(ctx.ssr, {\n      Q_HEAD_TAGS: '',\n      Q_BODY_ATTRS: '',\n      Q_BODY_TAGS: ''\n    });\n    ctx.app.$q = ctx.ssr.$q = q;\n    queues.server.forEach(function (run) {\n      run(q, ctx);\n    });\n  } else {\n    var mixins = ctx.app.mixins || [];\n    if (mixins.includes(mixin) === false) {\n      ctx.app.mixins = mixins.concat(mixin);\n    }\n  }\n}","map":{"version":3,"names":["$q","queues","mixin","mounted","_this","takeover","forEach","run","ctx","ssr","q","_objectSpread","ssrContext","Object","assign","Q_HEAD_TAGS","Q_BODY_ATTRS","Q_BODY_TAGS","app","server","mixins","includes","concat"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/ssr-update.js"],"sourcesContent":["import { $q, queues } from './install.js'\n\nconst mixin = {\n  mounted () {\n    queues.takeover.forEach(run => {\n      run(this.$q)\n    })\n  }\n}\n\nexport default function (ctx) {\n  if (ctx.ssr) {\n    const q = {\n      ...$q,\n      ssrContext: ctx.ssr\n    }\n\n    Object.assign(ctx.ssr, {\n      Q_HEAD_TAGS: '',\n      Q_BODY_ATTRS: '',\n      Q_BODY_TAGS: ''\n    })\n\n    ctx.app.$q = ctx.ssr.$q = q\n\n    queues.server.forEach(run => {\n      run(q, ctx)\n    })\n  }\n  else {\n    const mixins = ctx.app.mixins || []\n    if (mixins.includes(mixin) === false) {\n      ctx.app.mixins = mixins.concat(mixin)\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,EAAE,EAAEC,MAAM,QAAQ,cAAc;AAEzC,IAAMC,KAAK,GAAG;EACZC,OAAO,WAAAA,QAAA,EAAI;IAAA,IAAAC,KAAA;IACTH,MAAM,CAACI,QAAQ,CAACC,OAAO,CAAC,UAAAC,GAAG,EAAI;MAC7BA,GAAG,CAACH,KAAI,CAACJ,EAAE,CAAC;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe,UAAUQ,GAAG,EAAE;EAC5B,IAAIA,GAAG,CAACC,GAAG,EAAE;IACX,IAAMC,CAAC,GAAAC,aAAA,CAAAA,aAAA,KACFX,EAAE;MACLY,UAAU,EAAEJ,GAAG,CAACC;IAAG,EACpB;IAEDI,MAAM,CAACC,MAAM,CAACN,GAAG,CAACC,GAAG,EAAE;MACrBM,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEFT,GAAG,CAACU,GAAG,CAAClB,EAAE,GAAGQ,GAAG,CAACC,GAAG,CAACT,EAAE,GAAGU,CAAC;IAE3BT,MAAM,CAACkB,MAAM,CAACb,OAAO,CAAC,UAAAC,GAAG,EAAI;MAC3BA,GAAG,CAACG,CAAC,EAAEF,GAAG,CAAC;IACb,CAAC,CAAC;EACJ,CAAC,MACI;IACH,IAAMY,MAAM,GAAGZ,GAAG,CAACU,GAAG,CAACE,MAAM,IAAI,EAAE;IACnC,IAAIA,MAAM,CAACC,QAAQ,CAACnB,KAAK,CAAC,KAAK,KAAK,EAAE;MACpCM,GAAG,CAACU,GAAG,CAACE,MAAM,GAAGA,MAAM,CAACE,MAAM,CAACpB,KAAK,CAAC;IACvC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}