{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport QCheckbox from '../checkbox/QCheckbox.js';\nimport QTh from './QTh.js';\nimport cache from '../../utils/cache.js';\nexport default {\n  computed: {\n    headerSelectedValue: function headerSelectedValue() {\n      return this.someRowsSelected === true ? null : this.allRowsSelected;\n    }\n  },\n  methods: {\n    __getTHead: function __getTHead(h) {\n      var child = this.__getTHeadTR(h);\n      if (this.loading === true && this.$scopedSlots.loading === void 0) {\n        child.push(h('tr', {\n          staticClass: 'q-table__progress'\n        }, [h('th', {\n          staticClass: 'relative-position',\n          attrs: {\n            colspan: this.computedColspan\n          }\n        }, this.__getProgress(h))]));\n      }\n      return h('thead', child);\n    },\n    __getTHeadTR: function __getTHeadTR(h) {\n      var _this = this;\n      var header = this.$scopedSlots.header,\n        headerCell = this.$scopedSlots['header-cell'];\n      if (header !== void 0) {\n        return header(this.__getHeaderScope({\n          header: true\n        })).slice();\n      }\n      var child = this.computedCols.map(function (col) {\n        var headerCellCol = _this.$scopedSlots[\"header-cell-\".concat(col.name)],\n          slot = headerCellCol !== void 0 ? headerCellCol : headerCell,\n          props = _this.__getHeaderScope({\n            col: col\n          });\n        return slot !== void 0 ? slot(props) : h(QTh, {\n          key: col.name,\n          props: {\n            props: props\n          }\n        }, col.label);\n      });\n      if (this.singleSelection === true && this.grid !== true) {\n        child.unshift(h('th', {\n          staticClass: 'q-table--col-auto-width'\n        }, [' ']));\n      } else if (this.multipleSelection === true) {\n        var slot = this.$scopedSlots['header-selection'];\n        var content = slot !== void 0 ? slot(this.__getHeaderScope({})) : [h(QCheckbox, {\n          props: {\n            color: this.color,\n            value: this.headerSelectedValue,\n            dark: this.isDark,\n            dense: this.dense\n          },\n          on: cache(this, 'inp', {\n            input: this.__onMultipleSelectionSet\n          })\n        })];\n        child.unshift(h('th', {\n          staticClass: 'q-table--col-auto-width'\n        }, content));\n      }\n      return [h('tr', {\n        style: this.tableHeaderStyle,\n        \"class\": this.tableHeaderClass\n      }, child)];\n    },\n    __getHeaderScope: function __getHeaderScope(data) {\n      var _this2 = this;\n      Object.assign(data, {\n        cols: this.computedCols,\n        sort: this.sort,\n        colsMap: this.computedColsMap,\n        color: this.color,\n        dark: this.isDark,\n        dense: this.dense\n      });\n      if (this.multipleSelection === true) {\n        Object.defineProperty(data, 'selected', {\n          get: function get() {\n            return _this2.headerSelectedValue;\n          },\n          set: this.__onMultipleSelectionSet,\n          configurable: true,\n          enumerable: true\n        });\n\n        // TODO: remove in v2\n        data.partialSelected = this.someRowsSelected;\n        data.multipleSelect = true;\n      }\n      return data;\n    },\n    __onMultipleSelectionSet: function __onMultipleSelectionSet(val) {\n      if (this.someRowsSelected === true) {\n        val = false;\n      }\n      this.__updateSelection(this.computedRows.map(this.getRowKey), this.computedRows, val);\n    }\n  }\n};","map":{"version":3,"names":["QCheckbox","QTh","cache","computed","headerSelectedValue","someRowsSelected","allRowsSelected","methods","__getTHead","h","child","__getTHeadTR","loading","$scopedSlots","push","staticClass","attrs","colspan","computedColspan","__getProgress","_this","header","headerCell","__getHeaderScope","slice","computedCols","map","col","headerCellCol","concat","name","slot","props","key","label","singleSelection","grid","unshift","multipleSelection","content","color","value","dark","isDark","dense","on","input","__onMultipleSelectionSet","style","tableHeaderStyle","tableHeaderClass","data","_this2","Object","assign","cols","sort","colsMap","computedColsMap","defineProperty","get","set","configurable","enumerable","partialSelected","multipleSelect","val","__updateSelection","computedRows","getRowKey"],"sources":["C:/Users/rodri/sketchProjeto/view/node_modules/quasar/src/components/table/table-header.js"],"sourcesContent":["import QCheckbox from '../checkbox/QCheckbox.js'\nimport QTh from './QTh.js'\n\nimport cache from '../../utils/cache.js'\n\nexport default {\n  computed: {\n    headerSelectedValue () {\n      return this.someRowsSelected === true\n        ? null\n        : this.allRowsSelected\n    }\n  },\n\n  methods: {\n    __getTHead (h) {\n      const child = this.__getTHeadTR(h)\n\n      if (this.loading === true && this.$scopedSlots.loading === void 0) {\n        child.push(\n          h('tr', { staticClass: 'q-table__progress' }, [\n            h('th', {\n              staticClass: 'relative-position',\n              attrs: { colspan: this.computedColspan }\n            }, this.__getProgress(h))\n          ])\n        )\n      }\n\n      return h('thead', child)\n    },\n\n    __getTHeadTR (h) {\n      const\n        header = this.$scopedSlots.header,\n        headerCell = this.$scopedSlots['header-cell']\n\n      if (header !== void 0) {\n        return header(\n          this.__getHeaderScope({ header: true })\n        ).slice()\n      }\n\n      const child = this.computedCols.map(col => {\n        const\n          headerCellCol = this.$scopedSlots[`header-cell-${col.name}`],\n          slot = headerCellCol !== void 0 ? headerCellCol : headerCell,\n          props = this.__getHeaderScope({ col })\n\n        return slot !== void 0\n          ? slot(props)\n          : h(QTh, {\n            key: col.name,\n            props: { props }\n          }, col.label)\n      })\n\n      if (this.singleSelection === true && this.grid !== true) {\n        child.unshift(h('th', { staticClass: 'q-table--col-auto-width' }, [' ']))\n      }\n      else if (this.multipleSelection === true) {\n        const slot = this.$scopedSlots['header-selection']\n        const content = slot !== void 0\n          ? slot(this.__getHeaderScope({}))\n          : [\n            h(QCheckbox, {\n              props: {\n                color: this.color,\n                value: this.headerSelectedValue,\n                dark: this.isDark,\n                dense: this.dense\n              },\n              on: cache(this, 'inp', {\n                input: this.__onMultipleSelectionSet\n              })\n            })\n          ]\n\n        child.unshift(\n          h('th', { staticClass: 'q-table--col-auto-width' }, content)\n        )\n      }\n\n      return [\n        h('tr', {\n          style: this.tableHeaderStyle,\n          class: this.tableHeaderClass\n        }, child)\n      ]\n    },\n\n    __getHeaderScope (data) {\n      Object.assign(data, {\n        cols: this.computedCols,\n        sort: this.sort,\n        colsMap: this.computedColsMap,\n        color: this.color,\n        dark: this.isDark,\n        dense: this.dense\n      })\n\n      if (this.multipleSelection === true) {\n        Object.defineProperty(data, 'selected', {\n          get: () => this.headerSelectedValue,\n          set: this.__onMultipleSelectionSet,\n          configurable: true,\n          enumerable: true\n        })\n\n        // TODO: remove in v2\n        data.partialSelected = this.someRowsSelected\n        data.multipleSelect = true\n      }\n\n      return data\n    },\n\n    __onMultipleSelectionSet (val) {\n      if (this.someRowsSelected === true) {\n        val = false\n      }\n      this.__updateSelection(\n        this.computedRows.map(this.getRowKey),\n        this.computedRows,\n        val\n      )\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}