{"ast":null,"code":"import _objectSpread from \"C:/Users/rodri/projetos/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/rodri/projetos/sketchProjeto/view/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"handler\", \"noDismiss\", \"style\", \"class\", \"attrs\"];\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport Vue from 'vue';\nimport QAvatar from '../components/avatar/QAvatar.js';\nimport QIcon from '../components/icon/QIcon.js';\nimport QBtn from '../components/btn/QBtn.js';\nimport QSpinner from '../components/spinner/QSpinner.js';\nimport { noop } from '../utils/event.js';\nimport { getBodyFullscreenElement } from '../utils/dom.js';\nimport { isSSR } from './Platform.js';\nvar uid = 0;\nvar defaults = {};\nvar positionList = ['top-left', 'top-right', 'bottom-left', 'bottom-right', 'top', 'bottom', 'left', 'right', 'center'];\nvar badgePositions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nvar notifTypes = {\n  positive: {\n    icon: function icon() {\n      return this.$q.iconSet.type.positive;\n    },\n    color: 'positive'\n  },\n  negative: {\n    icon: function icon() {\n      return this.$q.iconSet.type.negative;\n    },\n    color: 'negative'\n  },\n  warning: {\n    icon: function icon() {\n      return this.$q.iconSet.type.warning;\n    },\n    color: 'warning',\n    textColor: 'dark'\n  },\n  info: {\n    icon: function icon() {\n      return this.$q.iconSet.type.info;\n    },\n    color: 'info'\n  },\n  ongoing: {\n    group: false,\n    timeout: 0,\n    spinner: true,\n    color: 'grey-8'\n  }\n};\nvar groups = {};\nvar positionClass = {};\nfunction logError(error, config) {\n  console.error(\"Notify: \".concat(error), config);\n  return false;\n}\nvar Notifications = {\n  name: 'QNotifications',\n  created: function created() {\n    var _this = this;\n    this.notifs = {};\n    positionList.forEach(function (pos) {\n      _this.notifs[pos] = [];\n      var vert = ['left', 'center', 'right'].includes(pos) === true ? 'center' : pos.indexOf('top') > -1 ? 'top' : 'bottom',\n        align = pos.indexOf('left') > -1 ? 'start' : pos.indexOf('right') > -1 ? 'end' : 'center',\n        classes = ['left', 'right'].includes(pos) ? \"items-\".concat(pos === 'left' ? 'start' : 'end', \" justify-center\") : pos === 'center' ? 'flex-center' : \"items-\".concat(align);\n      positionClass[pos] = \"q-notifications__list q-notifications__list--\".concat(vert, \" fixed column no-wrap \").concat(classes);\n    });\n  },\n  methods: {\n    add: function add(config, originalApi) {\n      var _this2 = this;\n      if (!config) {\n        return logError('parameter required');\n      }\n      var Api;\n      var notif = {\n        textColor: 'white'\n      };\n      if (config.ignoreDefaults !== true) {\n        Object.assign(notif, defaults);\n      }\n      if (Object(config) !== config) {\n        if (notif.type) {\n          Object.assign(notif, notifTypes[notif.type]);\n        }\n        config = {\n          message: config\n        };\n      }\n      Object.assign(notif, notifTypes[config.type || notif.type], config);\n      if (typeof notif.icon === 'function') {\n        notif.icon = notif.icon.call(this);\n      }\n      if (notif.spinner === void 0) {\n        notif.spinner = false;\n      } else if (notif.spinner === true) {\n        notif.spinner = QSpinner;\n      }\n      notif.meta = {\n        hasMedia: Boolean(notif.spinner !== false || notif.icon || notif.avatar)\n      };\n      if (notif.position) {\n        if (positionList.includes(notif.position) === false) {\n          return logError('wrong position', config);\n        }\n      } else {\n        notif.position = 'bottom';\n      }\n      if (notif.timeout === void 0) {\n        notif.timeout = 5000;\n      } else {\n        var t = parseInt(notif.timeout, 10);\n        if (isNaN(t) || t < 0) {\n          return logError('wrong timeout', config);\n        }\n        notif.timeout = t;\n      }\n      if (notif.timeout === 0) {\n        notif.progress = false;\n      } else if (notif.progress === true) {\n        notif.meta.progressStyle = {\n          animationDuration: \"\".concat(notif.timeout + 1000, \"ms\")\n        };\n      }\n      var actions = (Array.isArray(config.actions) === true ? config.actions : []).concat(config.ignoreDefaults !== true && Array.isArray(defaults.actions) === true ? defaults.actions : []).concat(notifTypes[config.type] !== void 0 && Array.isArray(notifTypes[config.type].actions) === true ? notifTypes[config.type].actions : []);\n      notif.closeBtn && actions.push({\n        label: typeof notif.closeBtn === 'string' ? notif.closeBtn : this.$q.lang.label.close\n      });\n      notif.actions = actions.map(function (_ref) {\n        var handler = _ref.handler,\n          noDismiss = _ref.noDismiss,\n          style = _ref.style,\n          klass = _ref[\"class\"],\n          attrs = _ref.attrs,\n          props = _objectWithoutProperties(_ref, _excluded);\n        return {\n          staticClass: klass,\n          style: style,\n          props: _objectSpread({\n            flat: true\n          }, props),\n          attrs: attrs,\n          on: {\n            click: typeof handler === 'function' ? function () {\n              handler();\n              noDismiss !== true && dismiss();\n            } : function () {\n              dismiss();\n            }\n          }\n        };\n      });\n      if (notif.multiLine === void 0) {\n        notif.multiLine = notif.actions.length > 1;\n      }\n      Object.assign(notif.meta, {\n        staticClass: \"q-notification row items-stretch\" + \" q-notification--\".concat(notif.multiLine === true ? 'multi-line' : 'standard') + (notif.color !== void 0 ? \" bg-\".concat(notif.color) : '') + (notif.textColor !== void 0 ? \" text-\".concat(notif.textColor) : '') + (notif.classes !== void 0 ? \" \".concat(notif.classes) : ''),\n        wrapperClass: 'q-notification__wrapper col relative-position border-radius-inherit ' + (notif.multiLine === true ? 'column no-wrap justify-center' : 'row items-center'),\n        contentClass: 'q-notification__content row items-center' + (notif.multiLine === true ? '' : ' col'),\n        attrs: _objectSpread({\n          role: 'alert'\n        }, notif.attrs)\n      });\n      if (notif.group === false) {\n        notif.group = void 0;\n        notif.meta.group = void 0;\n      } else {\n        if (notif.group === void 0 || notif.group === true) {\n          // do not replace notifications with different buttons\n          notif.group = [notif.message, notif.caption, notif.multiline].concat(notif.actions.map(function (a) {\n            return \"\".concat(a.props.label, \"*\").concat(a.props.icon);\n          })).join('|');\n        }\n        notif.meta.group = notif.group + '|' + notif.position;\n      }\n      if (notif.actions.length === 0) {\n        notif.actions = void 0;\n      } else {\n        notif.meta.actionsClass = 'q-notification__actions row items-center ' + (notif.multiLine === true ? 'justify-end' : 'col-auto') + (notif.meta.hasMedia === true ? ' q-notification__actions--with-media' : '');\n      }\n      if (originalApi !== void 0) {\n        // reset timeout if any\n        clearTimeout(originalApi.notif.meta.timer);\n\n        // retain uid\n        notif.meta.uid = originalApi.notif.meta.uid;\n\n        // replace notif\n        var index = this.notifs[notif.position].indexOf(originalApi.notif);\n        this.notifs[notif.position][index] = notif;\n      } else {\n        var original = groups[notif.meta.group];\n\n        // woohoo, it's a new notification\n        if (original === void 0) {\n          notif.meta.uid = uid++;\n          notif.meta.badge = 1;\n          if (['left', 'right', 'center'].indexOf(notif.position) !== -1) {\n            this.notifs[notif.position].splice(Math.floor(this.notifs[notif.position].length / 2), 0, notif);\n          } else {\n            var action = notif.position.indexOf('top') > -1 ? 'unshift' : 'push';\n            this.notifs[notif.position][action](notif);\n          }\n          if (notif.group !== void 0) {\n            groups[notif.meta.group] = notif;\n          }\n        }\n        // ok, so it's NOT a new one\n        else {\n          // reset timeout if any\n          clearTimeout(original.meta.timer);\n          if (notif.badgePosition !== void 0) {\n            if (badgePositions.includes(notif.badgePosition) === false) {\n              return logError('wrong badgePosition', config);\n            }\n          } else {\n            notif.badgePosition = \"top-\".concat(notif.position.indexOf('left') > -1 ? 'right' : 'left');\n          }\n          notif.meta.uid = original.meta.uid;\n          notif.meta.badge = original.meta.badge + 1;\n          notif.meta.badgeStaticClass = \"q-notification__badge q-notification__badge--\".concat(notif.badgePosition) + (notif.badgeColor !== void 0 ? \" bg-\".concat(notif.badgeColor) : '') + (notif.badgeTextColor !== void 0 ? \" text-\".concat(notif.badgeTextColor) : '');\n          var _index = this.notifs[notif.position].indexOf(original);\n          this.notifs[notif.position][_index] = groups[notif.meta.group] = notif;\n        }\n      }\n      var dismiss = function dismiss() {\n        _this2.remove(notif);\n        Api = void 0;\n      };\n      this.$forceUpdate();\n      if (notif.timeout > 0) {\n        notif.meta.timer = setTimeout(function () {\n          dismiss();\n        }, notif.timeout + /* show duration */1000);\n      }\n\n      // only non-groupable can be updated\n      if (notif.group !== void 0) {\n        return function (props) {\n          if (props !== void 0) {\n            logError('trying to update a grouped one which is forbidden', config);\n          } else {\n            dismiss();\n          }\n        };\n      }\n      Api = {\n        dismiss: dismiss,\n        config: config,\n        notif: notif\n      };\n      if (originalApi !== void 0) {\n        Object.assign(originalApi, Api);\n        return;\n      }\n      return function (props) {\n        // if notification wasn't previously dismissed\n        if (Api !== void 0) {\n          // if no params, then we must dismiss the notification\n          if (props === void 0) {\n            Api.dismiss();\n          }\n          // otherwise we're updating it\n          else {\n            var newNotif = Object.assign({}, Api.config, props, {\n              group: false,\n              position: notif.position\n            });\n            _this2.add(newNotif, Api);\n          }\n        }\n      };\n    },\n    remove: function remove(notif) {\n      clearTimeout(notif.meta.timer);\n      var index = this.notifs[notif.position].indexOf(notif);\n      if (index !== -1) {\n        if (notif.group !== void 0) {\n          delete groups[notif.meta.group];\n        }\n        var el = this.$refs[\"notif_\".concat(notif.meta.uid)];\n        if (el) {\n          var _getComputedStyle = getComputedStyle(el),\n            width = _getComputedStyle.width,\n            height = _getComputedStyle.height;\n          el.style.left = \"\".concat(el.offsetLeft, \"px\");\n          el.style.width = width;\n          el.style.height = height;\n        }\n        this.notifs[notif.position].splice(index, 1);\n        this.$forceUpdate();\n        if (typeof notif.onDismiss === 'function') {\n          notif.onDismiss();\n        }\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n    return h('div', {\n      staticClass: 'q-notifications'\n    }, positionList.map(function (pos) {\n      return h('transition-group', {\n        key: pos,\n        staticClass: positionClass[pos],\n        tag: 'div',\n        props: {\n          name: \"q-notification--\".concat(pos),\n          mode: 'out-in'\n        }\n      }, _this3.notifs[pos].map(function (notif) {\n        var msgChild;\n        var meta = notif.meta;\n        var msgData = {\n          staticClass: 'q-notification__message col'\n        };\n        if (notif.html === true) {\n          msgData.domProps = {\n            innerHTML: notif.caption ? \"<div>\".concat(notif.message, \"</div><div class=\\\"q-notification__caption\\\">\").concat(notif.caption, \"</div>\") : notif.message\n          };\n        } else {\n          var msgNode = [notif.message];\n          msgChild = notif.caption ? [h('div', msgNode), h('div', {\n            staticClass: 'q-notification__caption'\n          }, [notif.caption])] : msgNode;\n        }\n        var mainChild = [];\n        if (meta.hasMedia === true) {\n          if (notif.spinner !== false) {\n            mainChild.push(h(notif.spinner, {\n              staticClass: 'q-notification__spinner'\n            }));\n          } else if (notif.icon) {\n            mainChild.push(h(QIcon, {\n              staticClass: 'q-notification__icon',\n              attrs: {\n                role: 'img'\n              },\n              props: {\n                name: notif.icon\n              }\n            }));\n          } else if (notif.avatar) {\n            mainChild.push(h(QAvatar, {\n              staticClass: 'q-notification__avatar'\n            }, [h('img', {\n              attrs: {\n                src: notif.avatar,\n                'aria-hidden': 'true'\n              }\n            })]));\n          }\n        }\n        mainChild.push(h('div', msgData, msgChild));\n        var child = [h('div', {\n          staticClass: meta.contentClass\n        }, mainChild)];\n        notif.progress === true && child.push(h('div', {\n          key: \"\".concat(meta.uid, \"|p|\").concat(meta.badge),\n          staticClass: 'q-notification__progress',\n          style: meta.progressStyle,\n          \"class\": notif.progressClass\n        }));\n        notif.actions !== void 0 && child.push(h('div', {\n          staticClass: meta.actionsClass\n        }, notif.actions.map(function (action) {\n          return h(QBtn, _objectSpread({}, action));\n        })));\n        meta.badge > 1 && child.push(h('div', {\n          key: \"\".concat(meta.uid, \"|\").concat(meta.badge),\n          staticClass: meta.badgeStaticClass,\n          style: notif.badgeStyle,\n          \"class\": notif.badgeClass\n        }, [meta.badge]));\n        return h('div', {\n          ref: \"notif_\".concat(meta.uid),\n          key: meta.uid,\n          staticClass: meta.staticClass,\n          attrs: meta.attrs\n        }, [h('div', {\n          staticClass: meta.wrapperClass\n        }, child)]);\n      }));\n    }));\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n    if (this.$q.fullscreen !== void 0 && this.$q.fullscreen.isCapable === true) {\n      var append = function append(isFullscreen) {\n        var newParent = getBodyFullscreenElement(isFullscreen, _this4.$q.fullscreen.activeEl);\n        if (_this4.$el.parentElement !== newParent) {\n          newParent.appendChild(_this4.$el);\n        }\n      };\n      this.unwatchFullscreen = this.$watch('$q.fullscreen.isActive', append);\n      if (this.$q.fullscreen.isActive === true) {\n        append(true);\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unwatchFullscreen !== void 0 && this.unwatchFullscreen();\n  }\n};\nexport default {\n  create: function create(opts) {\n    if (isSSR === true) {\n      return noop;\n    }\n    return this.__vm.add(opts);\n  },\n  setDefaults: function setDefaults(opts) {\n    opts === Object(opts) && Object.assign(defaults, opts);\n  },\n  registerType: function registerType(typeName, typeOpts) {\n    if (isSSR !== true && typeOpts === Object(typeOpts)) {\n      notifTypes[typeName] = typeOpts;\n    }\n  },\n  install: function install(_ref2) {\n    var cfg = _ref2.cfg,\n      $q = _ref2.$q;\n    if (isSSR === true) {\n      $q.notify = noop;\n      $q.notify.setDefaults = noop;\n      return;\n    }\n    this.setDefaults(cfg.notify);\n    $q.notify = this.create.bind(this);\n    $q.notify.setDefaults = this.setDefaults;\n    $q.notify.registerType = this.registerType;\n    var node = document.createElement('div');\n    document.body.appendChild(node);\n    this.__vm = new Vue(Notifications);\n    this.__vm.$mount(node);\n  }\n};","map":{"version":3,"names":["Vue","QAvatar","QIcon","QBtn","QSpinner","noop","getBodyFullscreenElement","isSSR","uid","defaults","positionList","badgePositions","notifTypes","positive","icon","$q","iconSet","type","color","negative","warning","textColor","info","ongoing","group","timeout","spinner","groups","positionClass","logError","error","config","console","concat","Notifications","name","created","_this","notifs","forEach","pos","vert","includes","indexOf","align","classes","methods","add","originalApi","_this2","Api","notif","ignoreDefaults","Object","assign","message","call","meta","hasMedia","Boolean","avatar","position","t","parseInt","isNaN","progress","progressStyle","animationDuration","actions","Array","isArray","closeBtn","push","label","lang","close","map","_ref","handler","noDismiss","style","klass","attrs","props","_objectWithoutProperties","_excluded","staticClass","_objectSpread","flat","on","click","dismiss","multiLine","length","wrapperClass","contentClass","role","caption","multiline","a","join","actionsClass","clearTimeout","timer","index","original","badge","splice","Math","floor","action","badgePosition","badgeStaticClass","badgeColor","badgeTextColor","remove","$forceUpdate","setTimeout","newNotif","el","$refs","_getComputedStyle","getComputedStyle","width","height","left","offsetLeft","onDismiss","render","h","_this3","key","tag","mode","msgChild","msgData","html","domProps","innerHTML","msgNode","mainChild","src","child","progressClass","badgeStyle","badgeClass","ref","mounted","_this4","fullscreen","isCapable","append","isFullscreen","newParent","activeEl","$el","parentElement","appendChild","unwatchFullscreen","$watch","isActive","beforeDestroy","create","opts","__vm","setDefaults","registerType","typeName","typeOpts","install","_ref2","cfg","notify","bind","node","document","createElement","body","$mount"],"sources":["C:/Users/rodri/projetos/sketchProjeto/view/node_modules/quasar/src/plugins/Notify.js"],"sourcesContent":["import Vue from 'vue'\n\nimport QAvatar from '../components/avatar/QAvatar.js'\nimport QIcon from '../components/icon/QIcon.js'\nimport QBtn from '../components/btn/QBtn.js'\nimport QSpinner from '../components/spinner/QSpinner.js'\n\nimport { noop } from '../utils/event.js'\nimport { getBodyFullscreenElement } from '../utils/dom.js'\nimport { isSSR } from './Platform.js'\n\nlet uid = 0\nconst defaults = {}\n\nconst positionList = [\n  'top-left', 'top-right',\n  'bottom-left', 'bottom-right',\n  'top', 'bottom', 'left', 'right', 'center'\n]\n\nconst badgePositions = [\n  'top-left', 'top-right',\n  'bottom-left', 'bottom-right'\n]\n\nconst notifTypes = {\n  positive: {\n    icon () { return this.$q.iconSet.type.positive },\n    color: 'positive'\n  },\n\n  negative: {\n    icon () { return this.$q.iconSet.type.negative },\n    color: 'negative'\n  },\n\n  warning: {\n    icon () { return this.$q.iconSet.type.warning },\n    color: 'warning',\n    textColor: 'dark'\n  },\n\n  info: {\n    icon () { return this.$q.iconSet.type.info },\n    color: 'info'\n  },\n\n  ongoing: {\n    group: false,\n    timeout: 0,\n    spinner: true,\n    color: 'grey-8'\n  }\n}\n\nconst groups = {}\nconst positionClass = {}\n\nfunction logError (error, config) {\n  console.error(`Notify: ${error}`, config)\n  return false\n}\n\nconst Notifications = {\n  name: 'QNotifications',\n\n  created () {\n    this.notifs = {}\n\n    positionList.forEach(pos => {\n      this.notifs[pos] = []\n\n      const\n        vert = ['left', 'center', 'right'].includes(pos) === true ? 'center' : (pos.indexOf('top') > -1 ? 'top' : 'bottom'),\n        align = pos.indexOf('left') > -1 ? 'start' : (pos.indexOf('right') > -1 ? 'end' : 'center'),\n        classes = ['left', 'right'].includes(pos) ? `items-${pos === 'left' ? 'start' : 'end'} justify-center` : (pos === 'center' ? 'flex-center' : `items-${align}`)\n\n      positionClass[pos] = `q-notifications__list q-notifications__list--${vert} fixed column no-wrap ${classes}`\n    })\n  },\n\n  methods: {\n    add (config, originalApi) {\n      if (!config) {\n        return logError('parameter required')\n      }\n\n      let Api\n      const notif = { textColor: 'white' }\n\n      if (config.ignoreDefaults !== true) {\n        Object.assign(notif, defaults)\n      }\n\n      if (Object(config) !== config) {\n        if (notif.type) {\n          Object.assign(notif, notifTypes[notif.type])\n        }\n\n        config = { message: config }\n      }\n\n      Object.assign(notif, notifTypes[config.type || notif.type], config)\n\n      if (typeof notif.icon === 'function') {\n        notif.icon = notif.icon.call(this)\n      }\n\n      if (notif.spinner === void 0) {\n        notif.spinner = false\n      }\n      else if (notif.spinner === true) {\n        notif.spinner = QSpinner\n      }\n\n      notif.meta = {\n        hasMedia: Boolean(notif.spinner !== false || notif.icon || notif.avatar)\n      }\n\n      if (notif.position) {\n        if (positionList.includes(notif.position) === false) {\n          return logError('wrong position', config)\n        }\n      }\n      else {\n        notif.position = 'bottom'\n      }\n\n      if (notif.timeout === void 0) {\n        notif.timeout = 5000\n      }\n      else {\n        const t = parseInt(notif.timeout, 10)\n        if (isNaN(t) || t < 0) {\n          return logError('wrong timeout', config)\n        }\n        notif.timeout = t\n      }\n\n      if (notif.timeout === 0) {\n        notif.progress = false\n      }\n      else if (notif.progress === true) {\n        notif.meta.progressStyle = {\n          animationDuration: `${notif.timeout + 1000}ms`\n        }\n      }\n\n      const actions = (\n        Array.isArray(config.actions) === true\n          ? config.actions\n          : []\n      ).concat(\n        config.ignoreDefaults !== true && Array.isArray(defaults.actions) === true\n          ? defaults.actions\n          : []\n      ).concat(\n        notifTypes[config.type] !== void 0 && Array.isArray(notifTypes[config.type].actions) === true\n          ? notifTypes[config.type].actions\n          : []\n      )\n\n      notif.closeBtn && actions.push({\n        label: typeof notif.closeBtn === 'string'\n          ? notif.closeBtn\n          : this.$q.lang.label.close\n      })\n\n      notif.actions = actions.map(({ handler, noDismiss, style, class: klass, attrs, ...props }) => ({\n        staticClass: klass,\n        style,\n        props: { flat: true, ...props },\n        attrs,\n        on: {\n          click: typeof handler === 'function'\n            ? () => {\n              handler()\n              noDismiss !== true && dismiss()\n            }\n            : () => { dismiss() }\n        }\n      }))\n\n      if (notif.multiLine === void 0) {\n        notif.multiLine = notif.actions.length > 1\n      }\n\n      Object.assign(notif.meta, {\n        staticClass: `q-notification row items-stretch` +\n          ` q-notification--${notif.multiLine === true ? 'multi-line' : 'standard'}` +\n          (notif.color !== void 0 ? ` bg-${notif.color}` : '') +\n          (notif.textColor !== void 0 ? ` text-${notif.textColor}` : '') +\n          (notif.classes !== void 0 ? ` ${notif.classes}` : ''),\n\n        wrapperClass: 'q-notification__wrapper col relative-position border-radius-inherit ' +\n          (notif.multiLine === true ? 'column no-wrap justify-center' : 'row items-center'),\n\n        contentClass: 'q-notification__content row items-center' +\n          (notif.multiLine === true ? '' : ' col'),\n\n        attrs: {\n          role: 'alert',\n          ...notif.attrs\n        }\n      })\n\n      if (notif.group === false) {\n        notif.group = void 0\n        notif.meta.group = void 0\n      }\n      else {\n        if (notif.group === void 0 || notif.group === true) {\n          // do not replace notifications with different buttons\n          notif.group = [\n            notif.message,\n            notif.caption,\n            notif.multiline\n          ].concat(\n            notif.actions.map(a => `${a.props.label}*${a.props.icon}`)\n          ).join('|')\n        }\n\n        notif.meta.group = notif.group + '|' + notif.position\n      }\n\n      if (notif.actions.length === 0) {\n        notif.actions = void 0\n      }\n      else {\n        notif.meta.actionsClass = 'q-notification__actions row items-center ' +\n          (notif.multiLine === true ? 'justify-end' : 'col-auto') +\n          (notif.meta.hasMedia === true ? ' q-notification__actions--with-media' : '')\n      }\n\n      if (originalApi !== void 0) {\n        // reset timeout if any\n        clearTimeout(originalApi.notif.meta.timer)\n\n        // retain uid\n        notif.meta.uid = originalApi.notif.meta.uid\n\n        // replace notif\n        const index = this.notifs[notif.position].indexOf(originalApi.notif)\n        this.notifs[notif.position][index] = notif\n      }\n      else {\n        const original = groups[notif.meta.group]\n\n        // woohoo, it's a new notification\n        if (original === void 0) {\n          notif.meta.uid = uid++\n          notif.meta.badge = 1\n\n          if (['left', 'right', 'center'].indexOf(notif.position) !== -1) {\n            this.notifs[notif.position].splice(\n              Math.floor(this.notifs[notif.position].length / 2),\n              0,\n              notif\n            )\n          }\n          else {\n            const action = notif.position.indexOf('top') > -1 ? 'unshift' : 'push'\n            this.notifs[notif.position][action](notif)\n          }\n\n          if (notif.group !== void 0) {\n            groups[notif.meta.group] = notif\n          }\n        }\n        // ok, so it's NOT a new one\n        else {\n          // reset timeout if any\n          clearTimeout(original.meta.timer)\n\n          if (notif.badgePosition !== void 0) {\n            if (badgePositions.includes(notif.badgePosition) === false) {\n              return logError('wrong badgePosition', config)\n            }\n          }\n          else {\n            notif.badgePosition = `top-${notif.position.indexOf('left') > -1 ? 'right' : 'left'}`\n          }\n\n          notif.meta.uid = original.meta.uid\n          notif.meta.badge = original.meta.badge + 1\n          notif.meta.badgeStaticClass = `q-notification__badge q-notification__badge--${notif.badgePosition}` +\n            (notif.badgeColor !== void 0 ? ` bg-${notif.badgeColor}` : '') +\n            (notif.badgeTextColor !== void 0 ? ` text-${notif.badgeTextColor}` : '')\n\n          const index = this.notifs[notif.position].indexOf(original)\n          this.notifs[notif.position][index] = groups[notif.meta.group] = notif\n        }\n      }\n\n      const dismiss = () => {\n        this.remove(notif)\n        Api = void 0\n      }\n\n      this.$forceUpdate()\n\n      if (notif.timeout > 0) {\n        notif.meta.timer = setTimeout(() => {\n          dismiss()\n        }, notif.timeout + /* show duration */ 1000)\n      }\n\n      // only non-groupable can be updated\n      if (notif.group !== void 0) {\n        return props => {\n          if (props !== void 0) {\n            logError('trying to update a grouped one which is forbidden', config)\n          }\n          else {\n            dismiss()\n          }\n        }\n      }\n\n      Api = {\n        dismiss,\n        config,\n        notif\n      }\n\n      if (originalApi !== void 0) {\n        Object.assign(originalApi, Api)\n        return\n      }\n\n      return props => {\n        // if notification wasn't previously dismissed\n        if (Api !== void 0) {\n          // if no params, then we must dismiss the notification\n          if (props === void 0) {\n            Api.dismiss()\n          }\n          // otherwise we're updating it\n          else {\n            const newNotif = Object.assign({}, Api.config, props, {\n              group: false,\n              position: notif.position\n            })\n\n            this.add(newNotif, Api)\n          }\n        }\n      }\n    },\n\n    remove (notif) {\n      clearTimeout(notif.meta.timer)\n\n      const index = this.notifs[notif.position].indexOf(notif)\n      if (index !== -1) {\n        if (notif.group !== void 0) {\n          delete groups[notif.meta.group]\n        }\n\n        const el = this.$refs[`notif_${notif.meta.uid}`]\n\n        if (el) {\n          const { width, height } = getComputedStyle(el)\n\n          el.style.left = `${el.offsetLeft}px`\n          el.style.width = width\n          el.style.height = height\n        }\n\n        this.notifs[notif.position].splice(index, 1)\n\n        this.$forceUpdate()\n\n        if (typeof notif.onDismiss === 'function') {\n          notif.onDismiss()\n        }\n      }\n    }\n  },\n\n  render (h) {\n    return h('div', { staticClass: 'q-notifications' }, positionList.map(pos => {\n      return h('transition-group', {\n        key: pos,\n        staticClass: positionClass[pos],\n        tag: 'div',\n        props: {\n          name: `q-notification--${pos}`,\n          mode: 'out-in'\n        }\n      }, this.notifs[pos].map(notif => {\n        let msgChild\n\n        const meta = notif.meta\n        const msgData = { staticClass: 'q-notification__message col' }\n\n        if (notif.html === true) {\n          msgData.domProps = {\n            innerHTML: notif.caption\n              ? `<div>${notif.message}</div><div class=\"q-notification__caption\">${notif.caption}</div>`\n              : notif.message\n          }\n        }\n        else {\n          const msgNode = [ notif.message ]\n          msgChild = notif.caption\n            ? [\n              h('div', msgNode),\n              h('div', { staticClass: 'q-notification__caption' }, [ notif.caption ])\n            ]\n            : msgNode\n        }\n\n        const mainChild = []\n\n        if (meta.hasMedia === true) {\n          if (notif.spinner !== false) {\n            mainChild.push(\n              h(notif.spinner, {\n                staticClass: 'q-notification__spinner'\n              })\n            )\n          }\n          else if (notif.icon) {\n            mainChild.push(\n              h(QIcon, {\n                staticClass: 'q-notification__icon',\n                attrs: { role: 'img' },\n                props: { name: notif.icon }\n              })\n            )\n          }\n          else if (notif.avatar) {\n            mainChild.push(\n              h(QAvatar, { staticClass: 'q-notification__avatar' }, [\n                h('img', { attrs: { src: notif.avatar, 'aria-hidden': 'true' } })\n              ])\n            )\n          }\n        }\n\n        mainChild.push(\n          h('div', msgData, msgChild)\n        )\n\n        const child = [\n          h('div', { staticClass: meta.contentClass }, mainChild)\n        ]\n\n        notif.progress === true && child.push(\n          h('div', {\n            key: `${meta.uid}|p|${meta.badge}`,\n            staticClass: 'q-notification__progress',\n            style: meta.progressStyle,\n            class: notif.progressClass\n          })\n        )\n\n        notif.actions !== void 0 && child.push(\n          h('div', {\n            staticClass: meta.actionsClass\n          }, notif.actions.map(action => h(QBtn, { ...action })))\n        )\n\n        meta.badge > 1 && child.push(\n          h('div', {\n            key: `${meta.uid}|${meta.badge}`,\n            staticClass: meta.badgeStaticClass,\n            style: notif.badgeStyle,\n            class: notif.badgeClass\n          }, [ meta.badge ])\n        )\n\n        return h('div', {\n          ref: `notif_${meta.uid}`,\n          key: meta.uid,\n          staticClass: meta.staticClass,\n          attrs: meta.attrs\n        }, [\n          h('div', { staticClass: meta.wrapperClass }, child)\n        ])\n      }))\n    }))\n  },\n\n  mounted () {\n    if (this.$q.fullscreen !== void 0 && this.$q.fullscreen.isCapable === true) {\n      const append = isFullscreen => {\n        const newParent = getBodyFullscreenElement(\n          isFullscreen,\n          this.$q.fullscreen.activeEl\n        )\n\n        if (this.$el.parentElement !== newParent) {\n          newParent.appendChild(this.$el)\n        }\n      }\n\n      this.unwatchFullscreen = this.$watch('$q.fullscreen.isActive', append)\n\n      if (this.$q.fullscreen.isActive === true) {\n        append(true)\n      }\n    }\n  },\n\n  beforeDestroy () {\n    this.unwatchFullscreen !== void 0 && this.unwatchFullscreen()\n  }\n}\n\nexport default {\n  create (opts) {\n    if (isSSR === true) { return noop }\n    return this.__vm.add(opts)\n  },\n  setDefaults (opts) {\n    opts === Object(opts) && Object.assign(defaults, opts)\n  },\n  registerType (typeName, typeOpts) {\n    if (isSSR !== true && typeOpts === Object(typeOpts)) {\n      notifTypes[typeName] = typeOpts\n    }\n  },\n\n  install ({ cfg, $q }) {\n    if (isSSR === true) {\n      $q.notify = noop\n      $q.notify.setDefaults = noop\n      return\n    }\n\n    this.setDefaults(cfg.notify)\n\n    $q.notify = this.create.bind(this)\n    $q.notify.setDefaults = this.setDefaults\n    $q.notify.registerType = this.registerType\n\n    const node = document.createElement('div')\n    document.body.appendChild(node)\n\n    this.__vm = new Vue(Notifications)\n    this.__vm.$mount(node)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}